{
	"id": "7c53db32d51a58764c010a7920a4f0a2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"minerpunk/ERC721A/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport '../IDCF/mineInterface.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\r\n *\r\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n *\r\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is Context, ERC165, IERC721A,mine {\r\n    using SafeMath for uint;\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    uint256 internal _salt;\r\n\r\n    uint256 internal _totalDCF;\r\n\r\n    uint256 internal _TokenperBlock;\r\n\r\n    uint256 internal _startBlockNumber;\r\n\r\n    uint256 internal _totalPower;       \r\n\r\n    // The tokenId of the next token to be minted.\r\n    uint256 internal _currentIndex;  \r\n\r\n    uint256 internal _maxSupply;\r\n\r\n    // The number of tokens burned.\r\n    uint256 internal _burnCounter;    \r\n  \r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     *[user][1] = last_block\r\n     *[user][2] = accumulation_power   \r\n     *[user][3] = accumulation_DCF    \r\n    */   \r\n    mapping(address => mapping(uint256 => uint256))private _mineInfo;      \r\n    \r\n\r\n    constructor(string memory name_, string memory symbol_, uint256 salt_,uint256 totalDCF_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _maxSupply = 10000;\r\n        _currentIndex = _startTokenId(); \r\n        _salt = salt_;   \r\n        _TokenperBlock = 15e18;   \r\n        _totalPower = 46000;\r\n        _startBlockNumber = block.number; \r\n        _totalDCF = totalDCF_;  \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function totalDugUp(uint256 _BlockNumber)external view override returns (uint256){\r\n        uint256 difference = block.number.sub(_startBlockNumber);\r\n        uint256 start = blockStatus(_startBlockNumber);\r\n        uint256 end = blockStatus(block.number);\r\n        uint256 mined_area = start.add(end).mul(difference).div(2);\r\n        //All TOKENs that are connected and mined in these two regions\r\n\r\n\r\n        if(_totalDCF >= mined_area ){\r\n            return _totalDCF.sub(mined_area);\r\n        }else{\r\n            return uint256(0);\r\n        }\r\n          \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function MineStatus(address user)public view override returns(uint256){      \r\n        uint256 difference = block.number.sub(_mineInfo[user][1]);\r\n        uint256 start = blockStatus(_mineInfo[user][1]);\r\n        uint256 end = blockStatus(block.number);\r\n        uint256 mined_area = start.add(end).mul(difference).div(2);\r\n        //All TOKENs that are connected and mined in these two regions\r\n        \r\n        uint dcf_amount = mined_area.mul(_mineInfo[user][2]).div(_totalPower);\r\n        return _mineInfo[user][3].add(dcf_amount);       \r\n    }\r\n   \r\n\r\n    // The number of DCF that can be mined in this Block\r\n    function blockStatus (uint256 _BlockNumber)public view override returns (uint256){\r\n        if(_BlockNumber < _startBlockNumber){\r\n            _BlockNumber = _startBlockNumber;\r\n        }\r\n        uint256 DCFperBlock = _TokenperBlock.mul(1e54);           \r\n        uint256 BlockDifficult = difficult(_BlockNumber);     \r\n        uint256 DugUP = DCFperBlock.div(BlockDifficult);\r\n        return DugUP;    \r\n    }\r\n\r\n\r\n    function difficult(uint _BlockNumber)public view override returns (uint256){\r\n        uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber);\r\n        BlockDifficult=BlockDifficult**4;\r\n        return BlockDifficult;\r\n    }    \r\n   \r\n\r\n\r\n    function tokenIDPower (uint256 tokenId)public view override returns(uint256){        \r\n\r\n        uint256 _power = tokenId.mul(_salt).add(tokenId); \r\n        if(_power%10 == 0){\r\n            _power = 1;\r\n        }else{\r\n            _power = _power%10;\r\n        }\r\n        return _power;\r\n    }   \r\n   \r\n\r\n\r\n\r\n   \r\n\r\n    /**\r\n     * To change the starting tokenId, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than _currentIndex - _startTokenId() times\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n\r\n    function totalPower() public view  returns (uint256) {       \r\n        unchecked {            \r\n            return _totalPower;\r\n        }\r\n    }\r\n\r\n\r\n    function maxSupply() public view  returns (uint256) {       \r\n        unchecked {\r\n            return _maxSupply - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n     \r\n\r\n    function mineInfo(address user, uint256 number) public view  returns (uint256) {       \r\n        unchecked {\r\n            return _mineInfo[user][number];\r\n        }\r\n    }    \r\n\r\n\r\n  \r\n\r\n    /**\r\n     * Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view returns (uint256) {\r\n        // Counter underflow is impossible as _currentIndex does not decrement,\r\n        // and it is initialized to _startTokenId()\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberBurned);\r\n    }\r\n\r\n    /**\r\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return _addressData[owner].aux;\r\n    }\r\n \r\n    /**\r\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal {\r\n        _addressData[owner].aux = aux;\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr) if (curr < _currentIndex) {\r\n                TokenOwnership memory ownership = _ownerships[curr];\r\n                if (!ownership.burned) {\r\n                    if (ownership.addr != address(0)) {\r\n                        return ownership;\r\n                    }\r\n                    // Invariant:\r\n                    // There will always be an ownership that has an address and is not burned\r\n                    // before an ownership that does not have an address and is not burned.\r\n                    // Hence, curr will not underflow.\r\n                    while (true) {\r\n                        curr--;\r\n                        ownership = _ownerships[curr];\r\n                        if (ownership.addr != address(0)) {\r\n                            return ownership;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return _ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return 'https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/';\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        if (to == owner) revert ApprovalToCurrentOwner();\r\n\r\n        if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {\r\n            revert ApprovalCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (operator == _msgSender()) revert ApproveToCaller();\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n        if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n            revert TransferToNonERC721ReceiverImplementer();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     *   (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {   \r\n        uint256 startTokenId = _currentIndex;                \r\n        _mineInfo[msg.sender][3] = MineStatus(msg.sender);               \r\n\r\n      \r\n\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\r\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\r\n        unchecked {\r\n            _addressData[to].balance += uint64(quantity);\r\n            _addressData[to].numberMinted += uint64(quantity);\r\n\r\n            _ownerships[startTokenId].addr = to;\r\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n            uint256 updatedIndex = startTokenId;\r\n            uint256 end = updatedIndex + quantity;\r\n\r\n            if (to.isContract()) {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex);\r\n                    uint power = tokenIDPower(updatedIndex);\r\n                    _mineInfo[msg.sender][2]=_mineInfo[msg.sender][2].add(power);\r\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();                        \r\n                    }\r\n                } while (updatedIndex < end);\r\n                // Reentrancy protection\r\n               \r\n                if (_currentIndex != startTokenId) revert();\r\n            } else {\r\n                do {\r\n                    uint power = tokenIDPower(updatedIndex);\r\n                    _mineInfo[msg.sender][2]=_mineInfo[msg.sender][2].add(power);\r\n                    emit Transfer(address(0), to, updatedIndex++);\r\n                } while (updatedIndex < end);\r\n            }\r\n            _currentIndex = updatedIndex;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n        _mineInfo[msg.sender][1] = block.number;\r\n    }\r\n\r\n   \r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {  \r\n\r\n        uint256 powerNumber = tokenIDPower(tokenId);        \r\n        _mineInfo[from][3] = MineStatus(from);\r\n        _mineInfo[from][2] = _mineInfo[from][2].sub(powerNumber);\r\n        _mineInfo[from][1] = block.number;\r\n        _mineInfo[to][3] = MineStatus(to);\r\n        _mineInfo[to][2] = _mineInfo[to][2].add(powerNumber);\r\n        _mineInfo[to][1] = block.number;\r\n        \r\n\r\n        \r\n\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == from ||\r\n            isApprovedForAll(from, _msgSender()) ||\r\n            getApproved(tokenId) == _msgSender());\r\n\r\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            _addressData[from].balance -= 1;\r\n            _addressData[to].balance += 1;\r\n\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = to;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n\r\n        uint256 powerNumber = tokenIDPower(tokenId);        \r\n        _mineInfo[msg.sender][3] = MineStatus(msg.sender);\r\n        _mineInfo[msg.sender][2] = _mineInfo[msg.sender][2].sub(powerNumber);\r\n        _mineInfo[msg.sender][1] = block.number;\r\n        _totalPower = _totalPower.sub(powerNumber);\r\n\r\n\r\n         \r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId); \r\n\r\n        address from = prevOwnership.addr;\r\n\r\n        if (approvalCheck) {\r\n            bool isApprovedOrOwner = (_msgSender() == from ||\r\n                isApprovedForAll(from, _msgSender()) ||\r\n                getApproved(tokenId) == _msgSender());\r\n\r\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            AddressData storage addressData = _addressData[from];\r\n            addressData.balance -= 1;\r\n            addressData.numberBurned += 1;\r\n\r\n            // Keep track of who burned the token, and the timestamp of burning.\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = from;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n            currSlot.burned = true;\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n            return retval == IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface mine  {   \r\n\r\n    function MineStatus(address user)external view returns(uint256);     \r\n    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n    function tokenIDPower (uint256 tokenId)external view returns(uint256);\r\n    function difficult(uint _BlockNumber)external view returns (uint256);\r\n    function totalDugUp(uint256 _BlockNumber)external view returns (uint256);\r\n      \r\n}"
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IERC721A is IERC721, IERC721Metadata {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller cannot approve to their own address.\r\n     */\r\n    error ApproveToCaller();\r\n\r\n    /**\r\n     * The caller cannot approve to the current owner.\r\n     */\r\n    error ApprovalToCurrentOwner();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n    }\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct AddressData {\r\n        // Realistically, 2**64-1 is more than enough.\r\n        uint64 balance;\r\n        // Keeps track of mint count with minimal overhead for tokenomics.\r\n        uint64 numberMinted;\r\n        // Keeps track of burn count with minimal overhead for tokenomics.\r\n        uint64 numberBurned;\r\n        // For miscellaneous variable(s) pertaining to the address\r\n        // (e.g. number of whitelist mint slots used).\r\n        // If there are multiple variables, please pack them into a uint64.\r\n        uint64 aux;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     * \r\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() external view returns (uint256);    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC721A/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "salt_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDCF_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "mineInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenIDPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "totalDugUp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:25340  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2490:2884  constructor(string memory name_, string memory symbol_, uint256 salt_,uint256 totalDCF_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2598:2603  name_ */\n  dup4\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2590:2595  _name */\n  0x08\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2590:2603  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2624:2631  symbol_ */\n  dup3\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2614:2621  _symbol */\n  0x09\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2614:2631  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2655:2660  10000 */\n  0x2710\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2642:2652  _maxSupply */\n  0x06\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2642:2660  _maxSupply = 10000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2687:2702  _startTokenId() */\n  tag_9\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2687:2700  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2687:2702  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2671:2684  _currentIndex */\n  0x05\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2671:2702  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2722:2727  salt_ */\n  dup2\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2714:2719  _salt */\n  0x00\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2714:2727  _salt = salt_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2758:2763  15e18 */\n  0xd02ab486cedc0000\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2741:2755  _TokenperBlock */\n  0x02\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2741:2763  _TokenperBlock = 15e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2791:2796  46000 */\n  0xb3b0\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2777:2788  _totalPower */\n  0x04\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2777:2796  _totalPower = 46000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2827:2839  block.number */\n  number\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2807:2824  _startBlockNumber */\n  0x03\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2807:2839  _startBlockNumber = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2863:2872  totalDCF_ */\n  dup1\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2851:2860  _totalDCF */\n  0x01\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2851:2872  _totalDCF = totalDCF_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2490:2884  constructor(string memory name_, string memory symbol_, uint256 salt_,uint256 totalDCF_) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:25340  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n  jump(tag_11)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":5182:5274  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":5238:5245  uint256 */\n  0x00\n    /* \"minerpunk/ERC721A/ERC721A.sol\":5182:5274  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_56\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_58\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1030:1118   */\ntag_57:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_60\n  tag_13\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_61\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_64\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1434:1490   */\ntag_63:\n    /* \"#utility.yul\":1508:1537   */\n  tag_65\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_23:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_67:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_24:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_71\n    /* \"#utility.yul\":1992:2041   */\n  tag_72\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1976:2042   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_74\n  tag_17\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2117:2229   */\ntag_73:\n    /* \"#utility.yul\":2238:2290   */\n  tag_75\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_23\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_25:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_78\n  tag_16\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2399:2521   */\ntag_77:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_79\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_26:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_27:\n    /* \"#utility.yul\":2833:2857   */\n  tag_82\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_26\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_83:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_28:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_85\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4203   */\ntag_3:\n    /* \"#utility.yul\":3154:3160   */\n  0x00\n    /* \"#utility.yul\":3162:3168   */\n  dup1\n    /* \"#utility.yul\":3170:3176   */\n  0x00\n    /* \"#utility.yul\":3178:3184   */\n  dup1\n    /* \"#utility.yul\":3227:3230   */\n  0x80\n    /* \"#utility.yul\":3215:3224   */\n  dup6\n    /* \"#utility.yul\":3206:3213   */\n  dup8\n    /* \"#utility.yul\":3202:3225   */\n  sub\n    /* \"#utility.yul\":3198:3231   */\n  slt\n    /* \"#utility.yul\":3195:3315   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3234:3313   */\n  tag_88\n  tag_14\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3195:3315   */\ntag_87:\n    /* \"#utility.yul\":3375:3376   */\n  0x00\n    /* \"#utility.yul\":3364:3373   */\n  dup6\n    /* \"#utility.yul\":3360:3377   */\n  add\n    /* \"#utility.yul\":3354:3378   */\n  mload\n    /* \"#utility.yul\":3405:3423   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3397:3403   */\n  dup2\n    /* \"#utility.yul\":3394:3424   */\n  gt\n    /* \"#utility.yul\":3391:3508   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3427:3506   */\n  tag_90\n  tag_15\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3391:3508   */\ntag_89:\n    /* \"#utility.yul\":3532:3606   */\n  tag_91\n    /* \"#utility.yul\":3598:3605   */\n  dup8\n    /* \"#utility.yul\":3589:3595   */\n  dup3\n    /* \"#utility.yul\":3578:3587   */\n  dup9\n    /* \"#utility.yul\":3574:3596   */\n  add\n    /* \"#utility.yul\":3532:3606   */\n  tag_25\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3522:3606   */\n  swap5\n  pop\n    /* \"#utility.yul\":3325:3616   */\n  pop\n    /* \"#utility.yul\":3676:3678   */\n  0x20\n    /* \"#utility.yul\":3665:3674   */\n  dup6\n    /* \"#utility.yul\":3661:3679   */\n  add\n    /* \"#utility.yul\":3655:3680   */\n  mload\n    /* \"#utility.yul\":3707:3725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3699:3705   */\n  dup2\n    /* \"#utility.yul\":3696:3726   */\n  gt\n    /* \"#utility.yul\":3693:3810   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3729:3808   */\n  tag_93\n  tag_15\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3693:3810   */\ntag_92:\n    /* \"#utility.yul\":3834:3908   */\n  tag_94\n    /* \"#utility.yul\":3900:3907   */\n  dup8\n    /* \"#utility.yul\":3891:3897   */\n  dup3\n    /* \"#utility.yul\":3880:3889   */\n  dup9\n    /* \"#utility.yul\":3876:3898   */\n  add\n    /* \"#utility.yul\":3834:3908   */\n  tag_25\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3824:3908   */\n  swap4\n  pop\n    /* \"#utility.yul\":3626:3918   */\n  pop\n    /* \"#utility.yul\":3957:3959   */\n  0x40\n    /* \"#utility.yul\":3983:4047   */\n  tag_95\n    /* \"#utility.yul\":4039:4046   */\n  dup8\n    /* \"#utility.yul\":4030:4036   */\n  dup3\n    /* \"#utility.yul\":4019:4028   */\n  dup9\n    /* \"#utility.yul\":4015:4037   */\n  add\n    /* \"#utility.yul\":3983:4047   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3973:4047   */\n  swap3\n  pop\n    /* \"#utility.yul\":3928:4057   */\n  pop\n    /* \"#utility.yul\":4096:4098   */\n  0x60\n    /* \"#utility.yul\":4122:4186   */\n  tag_96\n    /* \"#utility.yul\":4178:4185   */\n  dup8\n    /* \"#utility.yul\":4169:4175   */\n  dup3\n    /* \"#utility.yul\":4158:4167   */\n  dup9\n    /* \"#utility.yul\":4154:4176   */\n  add\n    /* \"#utility.yul\":4122:4186   */\n  tag_28\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4112:4186   */\n  swap2\n  pop\n    /* \"#utility.yul\":4067:4196   */\n  pop\n    /* \"#utility.yul\":3037:4203   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4209:4308   */\ntag_29:\n    /* \"#utility.yul\":4261:4267   */\n  0x00\n    /* \"#utility.yul\":4295:4300   */\n  dup2\n    /* \"#utility.yul\":4289:4301   */\n  mload\n    /* \"#utility.yul\":4279:4301   */\n  swap1\n  pop\n    /* \"#utility.yul\":4209:4308   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4314:4494   */\ntag_30:\n    /* \"#utility.yul\":4362:4439   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4359:4360   */\n  0x00\n    /* \"#utility.yul\":4352:4440   */\n  mstore\n    /* \"#utility.yul\":4459:4463   */\n  0x22\n    /* \"#utility.yul\":4456:4457   */\n  0x04\n    /* \"#utility.yul\":4449:4464   */\n  mstore\n    /* \"#utility.yul\":4483:4487   */\n  0x24\n    /* \"#utility.yul\":4480:4481   */\n  0x00\n    /* \"#utility.yul\":4473:4488   */\n  revert\n    /* \"#utility.yul\":4500:4820   */\ntag_31:\n    /* \"#utility.yul\":4544:4550   */\n  0x00\n    /* \"#utility.yul\":4581:4582   */\n  0x02\n    /* \"#utility.yul\":4575:4579   */\n  dup3\n    /* \"#utility.yul\":4571:4583   */\n  div\n    /* \"#utility.yul\":4561:4583   */\n  swap1\n  pop\n    /* \"#utility.yul\":4628:4629   */\n  0x01\n    /* \"#utility.yul\":4622:4626   */\n  dup3\n    /* \"#utility.yul\":4618:4630   */\n  and\n    /* \"#utility.yul\":4649:4667   */\n  dup1\n    /* \"#utility.yul\":4639:4720   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4705:4709   */\n  0x7f\n    /* \"#utility.yul\":4697:4703   */\n  dup3\n    /* \"#utility.yul\":4693:4710   */\n  and\n    /* \"#utility.yul\":4683:4710   */\n  swap2\n  pop\n    /* \"#utility.yul\":4639:4720   */\ntag_100:\n    /* \"#utility.yul\":4767:4769   */\n  0x20\n    /* \"#utility.yul\":4759:4765   */\n  dup3\n    /* \"#utility.yul\":4756:4770   */\n  lt\n    /* \"#utility.yul\":4736:4754   */\n  dup2\n    /* \"#utility.yul\":4733:4771   */\n  sub\n    /* \"#utility.yul\":4730:4814   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4786:4804   */\n  tag_102\n  tag_30\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4730:4814   */\ntag_101:\n    /* \"#utility.yul\":4551:4820   */\n  pop\n    /* \"#utility.yul\":4500:4820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4826:4967   */\ntag_32:\n    /* \"#utility.yul\":4875:4879   */\n  0x00\n    /* \"#utility.yul\":4898:4901   */\n  dup2\n    /* \"#utility.yul\":4890:4901   */\n  swap1\n  pop\n    /* \"#utility.yul\":4921:4924   */\n  dup2\n    /* \"#utility.yul\":4918:4919   */\n  0x00\n    /* \"#utility.yul\":4911:4925   */\n  mstore\n    /* \"#utility.yul\":4955:4959   */\n  0x20\n    /* \"#utility.yul\":4952:4953   */\n  0x00\n    /* \"#utility.yul\":4942:4960   */\n  keccak256\n    /* \"#utility.yul\":4934:4960   */\n  swap1\n  pop\n    /* \"#utility.yul\":4826:4967   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4973:5066   */\ntag_33:\n    /* \"#utility.yul\":5010:5016   */\n  0x00\n    /* \"#utility.yul\":5057:5059   */\n  0x20\n    /* \"#utility.yul\":5052:5054   */\n  0x1f\n    /* \"#utility.yul\":5045:5050   */\n  dup4\n    /* \"#utility.yul\":5041:5055   */\n  add\n    /* \"#utility.yul\":5037:5060   */\n  div\n    /* \"#utility.yul\":5027:5060   */\n  swap1\n  pop\n    /* \"#utility.yul\":4973:5066   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5179   */\ntag_34:\n    /* \"#utility.yul\":5116:5124   */\n  0x00\n    /* \"#utility.yul\":5166:5171   */\n  dup3\n    /* \"#utility.yul\":5160:5164   */\n  dup3\n    /* \"#utility.yul\":5156:5172   */\n  shl\n    /* \"#utility.yul\":5135:5172   */\n  swap1\n  pop\n    /* \"#utility.yul\":5072:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5185:5578   */\ntag_35:\n    /* \"#utility.yul\":5254:5260   */\n  0x00\n    /* \"#utility.yul\":5304:5305   */\n  0x08\n    /* \"#utility.yul\":5292:5302   */\n  dup4\n    /* \"#utility.yul\":5288:5306   */\n  mul\n    /* \"#utility.yul\":5327:5424   */\n  tag_107\n    /* \"#utility.yul\":5357:5423   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5346:5355   */\n  dup3\n    /* \"#utility.yul\":5327:5424   */\n  tag_34\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5445:5484   */\n  tag_108\n    /* \"#utility.yul\":5475:5483   */\n  dup7\n    /* \"#utility.yul\":5464:5473   */\n  dup4\n    /* \"#utility.yul\":5445:5484   */\n  tag_34\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5433:5484   */\n  swap6\n  pop\n    /* \"#utility.yul\":5517:5521   */\n  dup1\n    /* \"#utility.yul\":5513:5522   */\n  not\n    /* \"#utility.yul\":5506:5511   */\n  dup5\n    /* \"#utility.yul\":5502:5523   */\n  and\n    /* \"#utility.yul\":5493:5523   */\n  swap4\n  pop\n    /* \"#utility.yul\":5566:5570   */\n  dup1\n    /* \"#utility.yul\":5556:5564   */\n  dup7\n    /* \"#utility.yul\":5552:5571   */\n  and\n    /* \"#utility.yul\":5545:5550   */\n  dup5\n    /* \"#utility.yul\":5542:5572   */\n  or\n    /* \"#utility.yul\":5532:5572   */\n  swap3\n  pop\n    /* \"#utility.yul\":5261:5578   */\n  pop\n  pop\n    /* \"#utility.yul\":5185:5578   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5584:5644   */\ntag_36:\n    /* \"#utility.yul\":5612:5615   */\n  0x00\n    /* \"#utility.yul\":5633:5638   */\n  dup2\n    /* \"#utility.yul\":5626:5638   */\n  swap1\n  pop\n    /* \"#utility.yul\":5584:5644   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5650:5792   */\ntag_37:\n    /* \"#utility.yul\":5700:5709   */\n  0x00\n    /* \"#utility.yul\":5733:5786   */\n  tag_111\n    /* \"#utility.yul\":5751:5785   */\n  tag_112\n    /* \"#utility.yul\":5760:5784   */\n  tag_113\n    /* \"#utility.yul\":5778:5783   */\n  dup5\n    /* \"#utility.yul\":5760:5784   */\n  tag_26\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5751:5785   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5733:5786   */\n  tag_26\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5720:5786   */\n  swap1\n  pop\n    /* \"#utility.yul\":5650:5792   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5798:5873   */\ntag_38:\n    /* \"#utility.yul\":5841:5844   */\n  0x00\n    /* \"#utility.yul\":5862:5867   */\n  dup2\n    /* \"#utility.yul\":5855:5867   */\n  swap1\n  pop\n    /* \"#utility.yul\":5798:5873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5879:6148   */\ntag_39:\n    /* \"#utility.yul\":5989:6028   */\n  tag_116\n    /* \"#utility.yul\":6020:6027   */\n  dup4\n    /* \"#utility.yul\":5989:6028   */\n  tag_37\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":6050:6141   */\n  tag_117\n    /* \"#utility.yul\":6099:6140   */\n  tag_118\n    /* \"#utility.yul\":6123:6139   */\n  dup3\n    /* \"#utility.yul\":6099:6140   */\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6091:6097   */\n  dup5\n    /* \"#utility.yul\":6084:6088   */\n  dup5\n    /* \"#utility.yul\":6078:6089   */\n  sload\n    /* \"#utility.yul\":6050:6141   */\n  tag_35\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6044:6048   */\n  dup3\n    /* \"#utility.yul\":6037:6142   */\n  sstore\n    /* \"#utility.yul\":5955:6148   */\n  pop\n    /* \"#utility.yul\":5879:6148   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6154:6227   */\ntag_40:\n    /* \"#utility.yul\":6199:6202   */\n  0x00\n    /* \"#utility.yul\":6154:6227   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6233:6422   */\ntag_41:\n    /* \"#utility.yul\":6310:6342   */\n  tag_121\n  tag_40\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6351:6416   */\n  tag_122\n    /* \"#utility.yul\":6409:6415   */\n  dup2\n    /* \"#utility.yul\":6401:6407   */\n  dup5\n    /* \"#utility.yul\":6395:6399   */\n  dup5\n    /* \"#utility.yul\":6351:6416   */\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6286:6422   */\n  pop\n    /* \"#utility.yul\":6233:6422   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6428:6614   */\ntag_42:\n    /* \"#utility.yul\":6488:6608   */\ntag_124:\n    /* \"#utility.yul\":6505:6508   */\n  dup2\n    /* \"#utility.yul\":6498:6503   */\n  dup2\n    /* \"#utility.yul\":6495:6509   */\n  lt\n    /* \"#utility.yul\":6488:6608   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":6559:6598   */\n  tag_127\n    /* \"#utility.yul\":6596:6597   */\n  0x00\n    /* \"#utility.yul\":6589:6594   */\n  dup3\n    /* \"#utility.yul\":6559:6598   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6532:6533   */\n  0x01\n    /* \"#utility.yul\":6525:6530   */\n  dup2\n    /* \"#utility.yul\":6521:6534   */\n  add\n    /* \"#utility.yul\":6512:6534   */\n  swap1\n  pop\n    /* \"#utility.yul\":6488:6608   */\n  jump(tag_124)\ntag_126:\n    /* \"#utility.yul\":6428:6614   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6620:7163   */\ntag_43:\n    /* \"#utility.yul\":6721:6723   */\n  0x1f\n    /* \"#utility.yul\":6716:6719   */\n  dup3\n    /* \"#utility.yul\":6713:6724   */\n  gt\n    /* \"#utility.yul\":6710:7156   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6755:6793   */\n  tag_130\n    /* \"#utility.yul\":6787:6792   */\n  dup2\n    /* \"#utility.yul\":6755:6793   */\n  tag_32\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6839:6868   */\n  tag_131\n    /* \"#utility.yul\":6857:6867   */\n  dup5\n    /* \"#utility.yul\":6839:6868   */\n  tag_33\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6829:6837   */\n  dup2\n    /* \"#utility.yul\":6825:6869   */\n  add\n    /* \"#utility.yul\":7022:7024   */\n  0x20\n    /* \"#utility.yul\":7010:7020   */\n  dup6\n    /* \"#utility.yul\":7007:7025   */\n  lt\n    /* \"#utility.yul\":7004:7053   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7043:7051   */\n  dup2\n    /* \"#utility.yul\":7028:7051   */\n  swap1\n  pop\n    /* \"#utility.yul\":7004:7053   */\ntag_132:\n    /* \"#utility.yul\":7066:7146   */\n  tag_133\n    /* \"#utility.yul\":7122:7144   */\n  tag_134\n    /* \"#utility.yul\":7140:7143   */\n  dup6\n    /* \"#utility.yul\":7122:7144   */\n  tag_33\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7112:7120   */\n  dup4\n    /* \"#utility.yul\":7108:7145   */\n  add\n    /* \"#utility.yul\":7095:7106   */\n  dup3\n    /* \"#utility.yul\":7066:7146   */\n  tag_42\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6725:7156   */\n  pop\n  pop\n    /* \"#utility.yul\":6710:7156   */\ntag_129:\n    /* \"#utility.yul\":6620:7163   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7169:7286   */\ntag_44:\n    /* \"#utility.yul\":7223:7231   */\n  0x00\n    /* \"#utility.yul\":7273:7278   */\n  dup3\n    /* \"#utility.yul\":7267:7271   */\n  dup3\n    /* \"#utility.yul\":7263:7279   */\n  shr\n    /* \"#utility.yul\":7242:7279   */\n  swap1\n  pop\n    /* \"#utility.yul\":7169:7286   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7292:7461   */\ntag_45:\n    /* \"#utility.yul\":7336:7342   */\n  0x00\n    /* \"#utility.yul\":7369:7420   */\n  tag_137\n    /* \"#utility.yul\":7417:7418   */\n  0x00\n    /* \"#utility.yul\":7413:7419   */\n  not\n    /* \"#utility.yul\":7405:7410   */\n  dup5\n    /* \"#utility.yul\":7402:7403   */\n  0x08\n    /* \"#utility.yul\":7398:7411   */\n  mul\n    /* \"#utility.yul\":7369:7420   */\n  tag_44\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7365:7421   */\n  not\n    /* \"#utility.yul\":7450:7454   */\n  dup1\n    /* \"#utility.yul\":7444:7448   */\n  dup4\n    /* \"#utility.yul\":7440:7455   */\n  and\n    /* \"#utility.yul\":7430:7455   */\n  swap2\n  pop\n    /* \"#utility.yul\":7343:7461   */\n  pop\n    /* \"#utility.yul\":7292:7461   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7466:7761   */\ntag_46:\n    /* \"#utility.yul\":7542:7546   */\n  0x00\n    /* \"#utility.yul\":7688:7717   */\n  tag_139\n    /* \"#utility.yul\":7713:7716   */\n  dup4\n    /* \"#utility.yul\":7707:7711   */\n  dup4\n    /* \"#utility.yul\":7688:7717   */\n  tag_45\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7680:7717   */\n  swap2\n  pop\n    /* \"#utility.yul\":7750:7753   */\n  dup3\n    /* \"#utility.yul\":7747:7748   */\n  0x02\n    /* \"#utility.yul\":7743:7754   */\n  mul\n    /* \"#utility.yul\":7737:7741   */\n  dup3\n    /* \"#utility.yul\":7734:7755   */\n  or\n    /* \"#utility.yul\":7726:7755   */\n  swap1\n  pop\n    /* \"#utility.yul\":7466:7761   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7766:9161   */\ntag_7:\n    /* \"#utility.yul\":7883:7920   */\n  tag_141\n    /* \"#utility.yul\":7916:7919   */\n  dup3\n    /* \"#utility.yul\":7883:7920   */\n  tag_29\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7985:8003   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7977:7983   */\n  dup2\n    /* \"#utility.yul\":7974:8004   */\n  gt\n    /* \"#utility.yul\":7971:8027   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8007:8025   */\n  tag_143\n  tag_19\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7971:8027   */\ntag_142:\n    /* \"#utility.yul\":8051:8089   */\n  tag_144\n    /* \"#utility.yul\":8083:8087   */\n  dup3\n    /* \"#utility.yul\":8077:8088   */\n  sload\n    /* \"#utility.yul\":8051:8089   */\n  tag_31\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8136:8203   */\n  tag_145\n    /* \"#utility.yul\":8196:8202   */\n  dup3\n    /* \"#utility.yul\":8188:8194   */\n  dup3\n    /* \"#utility.yul\":8182:8186   */\n  dup6\n    /* \"#utility.yul\":8136:8203   */\n  tag_43\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8230:8231   */\n  0x00\n    /* \"#utility.yul\":8254:8258   */\n  0x20\n    /* \"#utility.yul\":8241:8258   */\n  swap1\n  pop\n    /* \"#utility.yul\":8286:8288   */\n  0x1f\n    /* \"#utility.yul\":8278:8284   */\n  dup4\n    /* \"#utility.yul\":8275:8289   */\n  gt\n    /* \"#utility.yul\":8303:8304   */\n  0x01\n    /* \"#utility.yul\":8298:8916   */\n  dup2\n  eq\n  tag_147\n  jumpi\n    /* \"#utility.yul\":8960:8961   */\n  0x00\n    /* \"#utility.yul\":8977:8983   */\n  dup5\n    /* \"#utility.yul\":8974:9051   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":9026:9035   */\n  dup3\n    /* \"#utility.yul\":9021:9024   */\n  dup8\n    /* \"#utility.yul\":9017:9036   */\n  add\n    /* \"#utility.yul\":9011:9037   */\n  mload\n    /* \"#utility.yul\":9002:9037   */\n  swap1\n  pop\n    /* \"#utility.yul\":8974:9051   */\ntag_148:\n    /* \"#utility.yul\":9077:9144   */\n  tag_149\n    /* \"#utility.yul\":9137:9143   */\n  dup6\n    /* \"#utility.yul\":9130:9135   */\n  dup3\n    /* \"#utility.yul\":9077:9144   */\n  tag_46\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":9071:9075   */\n  dup7\n    /* \"#utility.yul\":9064:9145   */\n  sstore\n    /* \"#utility.yul\":8933:9155   */\n  pop\n    /* \"#utility.yul\":8268:9155   */\n  jump(tag_146)\n    /* \"#utility.yul\":8298:8916   */\ntag_147:\n    /* \"#utility.yul\":8350:8354   */\n  0x1f\n    /* \"#utility.yul\":8346:8355   */\n  not\n    /* \"#utility.yul\":8338:8344   */\n  dup5\n    /* \"#utility.yul\":8334:8356   */\n  and\n    /* \"#utility.yul\":8384:8421   */\n  tag_150\n    /* \"#utility.yul\":8416:8420   */\n  dup7\n    /* \"#utility.yul\":8384:8421   */\n  tag_32\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8443:8444   */\n  0x00\n    /* \"#utility.yul\":8457:8665   */\ntag_151:\n    /* \"#utility.yul\":8471:8478   */\n  dup3\n    /* \"#utility.yul\":8468:8469   */\n  dup2\n    /* \"#utility.yul\":8465:8479   */\n  lt\n    /* \"#utility.yul\":8457:8665   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8550:8559   */\n  dup5\n    /* \"#utility.yul\":8545:8548   */\n  dup10\n    /* \"#utility.yul\":8541:8560   */\n  add\n    /* \"#utility.yul\":8535:8561   */\n  mload\n    /* \"#utility.yul\":8527:8533   */\n  dup3\n    /* \"#utility.yul\":8520:8562   */\n  sstore\n    /* \"#utility.yul\":8601:8602   */\n  0x01\n    /* \"#utility.yul\":8593:8599   */\n  dup3\n    /* \"#utility.yul\":8589:8603   */\n  add\n    /* \"#utility.yul\":8579:8603   */\n  swap2\n  pop\n    /* \"#utility.yul\":8648:8650   */\n  0x20\n    /* \"#utility.yul\":8637:8646   */\n  dup6\n    /* \"#utility.yul\":8633:8651   */\n  add\n    /* \"#utility.yul\":8620:8651   */\n  swap5\n  pop\n    /* \"#utility.yul\":8494:8498   */\n  0x20\n    /* \"#utility.yul\":8491:8492   */\n  dup2\n    /* \"#utility.yul\":8487:8499   */\n  add\n    /* \"#utility.yul\":8482:8499   */\n  swap1\n  pop\n    /* \"#utility.yul\":8457:8665   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":8693:8699   */\n  dup7\n    /* \"#utility.yul\":8684:8691   */\n  dup4\n    /* \"#utility.yul\":8681:8700   */\n  lt\n    /* \"#utility.yul\":8678:8857   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8751:8760   */\n  dup5\n    /* \"#utility.yul\":8746:8749   */\n  dup10\n    /* \"#utility.yul\":8742:8761   */\n  add\n    /* \"#utility.yul\":8736:8762   */\n  mload\n    /* \"#utility.yul\":8794:8842   */\n  tag_155\n    /* \"#utility.yul\":8836:8840   */\n  0x1f\n    /* \"#utility.yul\":8828:8834   */\n  dup10\n    /* \"#utility.yul\":8824:8841   */\n  and\n    /* \"#utility.yul\":8813:8822   */\n  dup3\n    /* \"#utility.yul\":8794:8842   */\n  tag_45\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8786:8792   */\n  dup4\n    /* \"#utility.yul\":8779:8843   */\n  sstore\n    /* \"#utility.yul\":8701:8857   */\n  pop\n    /* \"#utility.yul\":8678:8857   */\ntag_154:\n    /* \"#utility.yul\":8903:8904   */\n  0x01\n    /* \"#utility.yul\":8899:8900   */\n  0x02\n    /* \"#utility.yul\":8891:8897   */\n  dup9\n    /* \"#utility.yul\":8887:8901   */\n  mul\n    /* \"#utility.yul\":8883:8905   */\n  add\n    /* \"#utility.yul\":8877:8881   */\n  dup9\n    /* \"#utility.yul\":8870:8906   */\n  sstore\n    /* \"#utility.yul\":8305:8916   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8268:9155   */\ntag_146:\n  pop\n    /* \"#utility.yul\":7858:9161   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7766:9161   */\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:25340  contract ERC721A is Context, ERC165, IERC721A,mine {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/ERC721A/ERC721A.sol\":1033:25340  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa22cb465\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd5abeb01\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd993226b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdb3ad22c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe29301f9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xeff0730d\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb8ba6007\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc29dbcca\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4be3403c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6697:7002  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9813:9913  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11408:11612  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10970:11342  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5408:5720  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12273:12443  function transferFrom(... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12514:12699  function safeTransferFrom(... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4100:4511  function blockStatus (uint256 _BlockNumber)public view override returns (uint256){... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9621:9746  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7066:7272  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9982:10086  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11684:11971  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12770:13140  function safeTransferFrom(... */\n    tag_15:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3479:4029  function MineStatus(address user)public view override returns(uint256){      ... */\n    tag_16:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2898:3463  function totalDugUp(uint256 _BlockNumber)external view override returns (uint256){... */\n    tag_17:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10157:10475  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5885:6049  function maxSupply() public view  returns (uint256) {       ... */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4521:4755  function difficult(uint _BlockNumber)public view override returns (uint256){... */\n    tag_20:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5730:5875  function totalPower() public view  returns (uint256) {       ... */\n    tag_21:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4774:5066  function tokenIDPower (uint256 tokenId)public view override returns(uint256){        ... */\n    tag_22:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12042:12206  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_23:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6066:6237  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n    tag_24:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6697:7002  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_31:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6799:6803  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6851:6876  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6876  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6847  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6876  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6941  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6908:6941  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6893:6941  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6893:6904  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6893:6941  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6941  interfaceId == type(IERC721).interfaceId ||... */\n    tag_119:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6994  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6958:6994  super.supportsInterface(interfaceId) */\n      tag_121\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6982:6993  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6958:6981  super.supportsInterface */\n      tag_122\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6958:6994  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_121:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6836:6994  interfaceId == type(IERC721).interfaceId ||... */\n    tag_120:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6816:6994  return... */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6697:7002  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9813:9913  function name() public view virtual override returns (string memory) {... */\n    tag_35:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9867:9880  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9900:9905  _name */\n      0x08\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9893:9905  return _name */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_125\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9813:9913  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11408:11612  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_41:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11476:11483  address */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11501:11517  _exists(tokenId) */\n      tag_131\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11509:11516  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11501:11508  _exists */\n      tag_132\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11501:11517  _exists(tokenId) */\n      jump\t// in\n    tag_131:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11496:11560  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_133\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11526:11560  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11496:11560  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_133:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11580:11595  _tokenApprovals */\n      0x0c\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11580:11604  _tokenApprovals[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11596:11603  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11580:11604  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11573:11604  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11408:11612  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10970:11342  function approve(address to, uint256 tokenId) public override {... */\n    tag_47:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11043:11056  address owner */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11059:11083  ERC721A.ownerOf(tokenId) */\n      tag_135\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11075:11082  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11059:11074  ERC721A.ownerOf */\n      tag_65\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11059:11083  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_135:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11043:11083  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11104:11109  owner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11098:11109  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11098:11100  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11098:11109  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11094:11142  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_136\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11118:11142  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11094:11142  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_136:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11175:11180  owner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11159:11180  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11159:11171  _msgSender() */\n      tag_137\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11159:11169  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11159:11171  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11159:11180  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11155:11294  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_139\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11186:11223  isApprovedForAll(owner, _msgSender()) */\n      tag_140\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11203:11208  owner */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11210:11222  _msgSender() */\n      tag_141\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11210:11220  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11210:11222  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11186:11202  isApprovedForAll */\n      tag_112\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11186:11223  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_140:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11182:11294  if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_142\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11247:11282  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11182:11294  if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_142:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11155:11294  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_139:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11306:11334  _approve(to, tokenId, owner) */\n      tag_143\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11315:11317  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11319:11326  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11328:11333  owner */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11306:11314  _approve */\n      tag_144\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11306:11334  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_143:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11032:11342  {... */\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10970:11342  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5408:5720  function totalSupply() public view override returns (uint256) {... */\n    tag_49:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5461:5468  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5686:5701  _startTokenId() */\n      tag_146\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5686:5699  _startTokenId */\n      tag_147\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5686:5701  _startTokenId() */\n      jump\t// in\n    tag_146:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5671:5683  _burnCounter */\n      sload(0x07)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5655:5668  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5655:5683  _currentIndex - _burnCounter */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5655:5701  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5648:5701  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5408:5720  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12273:12443  function transferFrom(... */\n    tag_55:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12407:12435  _transfer(from, to, tokenId) */\n      tag_149\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12417:12421  from */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12423:12425  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12427:12434  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12407:12416  _transfer */\n      tag_150\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12407:12435  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12273:12443  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12514:12699  function safeTransferFrom(... */\n    tag_58:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12652:12691  safeTransferFrom(from, to, tokenId, '') */\n      tag_152\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12669:12673  from */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12675:12677  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12679:12686  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12652:12691  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12652:12668  safeTransferFrom */\n      tag_82\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12652:12691  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_152:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12514:12699  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4100:4511  function blockStatus (uint256 _BlockNumber)public view override returns (uint256){... */\n    tag_61:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4173:4180  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4210:4227  _startBlockNumber */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4195:4207  _BlockNumber */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4195:4227  _BlockNumber < _startBlockNumber */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4192:4287  if(_BlockNumber < _startBlockNumber){... */\n      iszero\n      tag_154\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4258:4275  _startBlockNumber */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4243:4275  _BlockNumber = _startBlockNumber */\n      swap2\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4192:4287  if(_BlockNumber < _startBlockNumber){... */\n    tag_154:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4297:4316  uint256 DCFperBlock */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4319:4343  _TokenperBlock.mul(1e54) */\n      tag_155\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4338:4342  1e54 */\n      0x0a70c3c40a64e6c51999090b65f67d9240000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4319:4333  _TokenperBlock */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4319:4337  _TokenperBlock.mul */\n      tag_156\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4319:4343  _TokenperBlock.mul(1e54) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4297:4343  uint256 DCFperBlock = _TokenperBlock.mul(1e54) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4365:4387  uint256 BlockDifficult */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4390:4413  difficult(_BlockNumber) */\n      tag_157\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4400:4412  _BlockNumber */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4390:4399  difficult */\n      tag_100\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4390:4413  difficult(_BlockNumber) */\n      jump\t// in\n    tag_157:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4365:4413  uint256 BlockDifficult = difficult(_BlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4429:4442  uint256 DugUP */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4445:4476  DCFperBlock.div(BlockDifficult) */\n      tag_158\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4461:4475  BlockDifficult */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4445:4456  DCFperBlock */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4445:4460  DCFperBlock.div */\n      tag_159\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4445:4476  DCFperBlock.div(BlockDifficult) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4429:4476  uint256 DugUP = DCFperBlock.div(BlockDifficult) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4494:4499  DugUP */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4487:4499  return DugUP */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4100:4511  function blockStatus (uint256 _BlockNumber)public view override returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9621:9746  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_65:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9685:9692  address */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9712:9733  _ownershipOf(tokenId) */\n      tag_161\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9725:9732  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9712:9724  _ownershipOf */\n      tag_162\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9712:9733  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9712:9738  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9705:9738  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9621:9746  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7066:7272  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_70:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7130:7137  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7171:7172  0 */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7154:7173  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7154:7159  owner */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7154:7173  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7150:7210  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_164\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7182:7210  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7150:7210  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_164:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7236:7248  _addressData */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7236:7255  _addressData[owner] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7249:7254  owner */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7236:7255  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7236:7263  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7228:7264  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7221:7264  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7066:7272  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9982:10086  function symbol() public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10038:10051  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10071:10078  _symbol */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10064:10078  return _symbol */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_125\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_125\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9982:10086  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11684:11971  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_78:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11795:11807  _msgSender() */\n      tag_172\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11795:11805  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11795:11807  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11783:11807  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11783:11791  operator */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11783:11807  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11779:11833  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_173\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11816:11833  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11779:11833  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_173:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11891:11899  approved */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11846:11864  _operatorApprovals */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11846:11878  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11865:11877  _msgSender() */\n      tag_174\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11865:11875  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11865:11877  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11846:11878  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11846:11888  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11879:11887  operator */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11846:11888  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11846:11899  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11944:11952  operator */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11915:11963  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11930:11942  _msgSender() */\n      tag_175\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11930:11940  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11930:11942  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11915:11963  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11954:11962  approved */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11915:11963  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11684:11971  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12770:13140  function safeTransferFrom(... */\n    tag_82:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12937:12965  _transfer(from, to, tokenId) */\n      tag_178\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12947:12951  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12953:12955  to */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12957:12964  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12937:12946  _transfer */\n      tag_150\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12937:12965  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12980:12995  to.isContract() */\n      tag_179\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12980:12982  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12980:12993  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12980:12995  to.isContract() */\n      jump\t// in\n    tag_179:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12976:13133  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13001:13057  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_182\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13032:13036  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13038:13040  to */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13042:13049  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13051:13056  _data */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13001:13031  _checkContractOnERC721Received */\n      tag_183\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13001:13057  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_182:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12997:13133  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_184\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13081:13121  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12997:13133  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_184:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12976:13133  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_181:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12770:13140  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3479:4029  function MineStatus(address user)public view override returns(uint256){      ... */\n    tag_85:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3541:3548  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3566:3584  uint256 difference */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3587:3623  block.number.sub(_mineInfo[user][1]) */\n      tag_186\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3604:3613  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3604:3619  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3614:3618  user */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3604:3619  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3604:3622  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3620:3621  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3604:3622  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3587:3599  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3587:3603  block.number.sub */\n      tag_187\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3587:3623  block.number.sub(_mineInfo[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3566:3623  uint256 difference = block.number.sub(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3634:3647  uint256 start */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3650:3681  blockStatus(_mineInfo[user][1]) */\n      tag_188\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3662:3671  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3662:3677  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3672:3676  user */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3662:3677  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3662:3680  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3678:3679  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3662:3680  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3650:3661  blockStatus */\n      tag_61\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3650:3681  blockStatus(_mineInfo[user][1]) */\n      jump\t// in\n    tag_188:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3634:3681  uint256 start = blockStatus(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3692:3703  uint256 end */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3706:3731  blockStatus(block.number) */\n      tag_189\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3718:3730  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3706:3717  blockStatus */\n      tag_61\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3706:3731  blockStatus(block.number) */\n      jump\t// in\n    tag_189:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3692:3731  uint256 end = blockStatus(block.number) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3742:3760  uint256 mined_area */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3800  start.add(end).mul(difference).div(2) */\n      tag_190\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3798:3799  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3793  start.add(end).mul(difference) */\n      tag_191\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3782:3792  difference */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3777  start.add(end) */\n      tag_192\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3773:3776  end */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3768  start */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3772  start.add */\n      tag_193\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3777  start.add(end) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3781  start.add(end).mul */\n      tag_156\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3793  start.add(end).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3797  start.add(end).mul(difference).div */\n      tag_159\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3763:3800  start.add(end).mul(difference).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3742:3800  uint256 mined_area = start.add(end).mul(difference).div(2) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3893:3908  uint dcf_amount */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3962  mined_area.mul(_mineInfo[user][2]).div(_totalPower) */\n      tag_194\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3950:3961  _totalPower */\n      sload(0x04)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3945  mined_area.mul(_mineInfo[user][2]) */\n      tag_195\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3926:3935  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3926:3941  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3936:3940  user */\n      dup12\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3926:3941  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3926:3944  _mineInfo[user][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3942:3943  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3926:3944  _mineInfo[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3921  mined_area */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3925  mined_area.mul */\n      tag_156\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3945  mined_area.mul(_mineInfo[user][2]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3949  mined_area.mul(_mineInfo[user][2]).div */\n      tag_159\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3911:3962  mined_area.mul(_mineInfo[user][2]).div(_totalPower) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3893:3962  uint dcf_amount = mined_area.mul(_mineInfo[user][2]).div(_totalPower) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:4014  _mineInfo[user][3].add(dcf_amount) */\n      tag_196\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4003:4013  dcf_amount */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:3989  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:3995  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3990:3994  user */\n      dup11\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:3995  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:3998  _mineInfo[user][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3996:3997  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:3998  _mineInfo[user][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:4002  _mineInfo[user][3].add */\n      tag_193\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3980:4014  _mineInfo[user][3].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3973:4014  return _mineInfo[user][3].add(dcf_amount) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3479:4029  function MineStatus(address user)public view override returns(uint256){      ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2898:3463  function totalDugUp(uint256 _BlockNumber)external view override returns (uint256){... */\n    tag_89:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2971:2978  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2990:3008  uint256 difference */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3011:3046  block.number.sub(_startBlockNumber) */\n      tag_198\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3028:3045  _startBlockNumber */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3011:3023  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3011:3027  block.number.sub */\n      tag_187\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3011:3046  block.number.sub(_startBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2990:3046  uint256 difference = block.number.sub(_startBlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3057:3070  uint256 start */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3073:3103  blockStatus(_startBlockNumber) */\n      tag_199\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3085:3102  _startBlockNumber */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3073:3084  blockStatus */\n      tag_61\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3073:3103  blockStatus(_startBlockNumber) */\n      jump\t// in\n    tag_199:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3057:3103  uint256 start = blockStatus(_startBlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3114:3125  uint256 end */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3128:3153  blockStatus(block.number) */\n      tag_200\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3140:3152  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3128:3139  blockStatus */\n      tag_61\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3128:3153  blockStatus(block.number) */\n      jump\t// in\n    tag_200:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3114:3153  uint256 end = blockStatus(block.number) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3164:3182  uint256 mined_area */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3222  start.add(end).mul(difference).div(2) */\n      tag_201\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3220:3221  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3215  start.add(end).mul(difference) */\n      tag_202\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3204:3214  difference */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3199  start.add(end) */\n      tag_203\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3195:3198  end */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3190  start */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3194  start.add */\n      tag_193\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3199  start.add(end) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3203  start.add(end).mul */\n      tag_156\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3215  start.add(end).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3219  start.add(end).mul(difference).div */\n      tag_159\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3185:3222  start.add(end).mul(difference).div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3164:3222  uint256 mined_area = start.add(end).mul(difference).div(2) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3325:3335  mined_area */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3312:3321  _totalDCF */\n      sload(0x01)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3312:3335  _totalDCF >= mined_area */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3309:3444  if(_totalDCF >= mined_area ){... */\n      tag_204\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3359:3384  _totalDCF.sub(mined_area) */\n      tag_205\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3373:3383  mined_area */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3359:3368  _totalDCF */\n      sload(0x01)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3359:3372  _totalDCF.sub */\n      tag_187\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3359:3384  _totalDCF.sub(mined_area) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3352:3384  return _totalDCF.sub(mined_area) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_197)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3309:3444  if(_totalDCF >= mined_area ){... */\n    tag_204:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3430:3431  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3415:3432  return uint256(0) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2898:3463  function totalDugUp(uint256 _BlockNumber)external view override returns (uint256){... */\n    tag_197:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10157:10475  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_93:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10230:10243  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10261:10277  _exists(tokenId) */\n      tag_208\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10269:10276  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10261:10268  _exists */\n      tag_132\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10261:10277  _exists(tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10256:10315  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_209\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10286:10315  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10256:10315  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_209:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10328:10349  string memory baseURI */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10352:10362  _baseURI() */\n      tag_210\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10352:10360  _baseURI */\n      tag_211\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10352:10362  _baseURI() */\n      jump\t// in\n    tag_210:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10328:10362  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10405:10406  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10386:10393  baseURI */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10380:10401  bytes(baseURI).length */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10380:10406  bytes(baseURI).length != 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10380:10467  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_212\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_213)\n    tag_212:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10433:10440  baseURI */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10442:10460  tokenId.toString() */\n      tag_214\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10442:10449  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10442:10458  tokenId.toString */\n      tag_215\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10442:10460  tokenId.toString() */\n      jump\t// in\n    tag_214:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10416:10461  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10380:10467  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_213:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10373:10467  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10157:10475  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5885:6049  function maxSupply() public view  returns (uint256) {       ... */\n    tag_96:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5928:5935  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6015:6030  _startTokenId() */\n      tag_219\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6015:6028  _startTokenId */\n      tag_147\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6015:6030  _startTokenId() */\n      jump\t// in\n    tag_219:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6000:6012  _burnCounter */\n      sload(0x07)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5987:5997  _maxSupply */\n      sload(0x06)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5987:6012  _maxSupply - _burnCounter */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5987:6030  _maxSupply - _burnCounter - _startTokenId() */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5980:6030  return _maxSupply - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5885:6049  function maxSupply() public view  returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4521:4755  function difficult(uint _BlockNumber)public view override returns (uint256){... */\n    tag_100:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4588:4595  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4607:4626  uint BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4672  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      tag_221\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4654:4671  _startBlockNumber */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4649  _BlockNumber.mul(1e18) */\n      tag_222\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4644:4648  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4639  _BlockNumber */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4643  _BlockNumber.mul */\n      tag_156\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4649  _BlockNumber.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4653  _BlockNumber.mul(1e18).div */\n      tag_159\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4627:4672  _BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4607:4672  uint BlockDifficult=_BlockNumber.mul(1e18).div(_startBlockNumber) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4714:4715  4 */\n      0x04\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4698:4712  BlockDifficult */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4698:4715  BlockDifficult**4 */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4683:4715  BlockDifficult=BlockDifficult**4 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4733:4747  BlockDifficult */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4726:4747  return BlockDifficult */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4521:4755  function difficult(uint _BlockNumber)public view override returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5730:5875  function totalPower() public view  returns (uint256) {       ... */\n    tag_103:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5774:5781  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5845:5856  _totalPower */\n      sload(0x04)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5838:5856  return _totalPower */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5730:5875  function totalPower() public view  returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4774:5066  function tokenIDPower (uint256 tokenId)public view override returns(uint256){        ... */\n    tag_107:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4842:4849  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4871:4885  uint256 _power */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4919  tokenId.mul(_salt).add(tokenId) */\n      tag_227\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4911:4918  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4906  tokenId.mul(_salt) */\n      tag_228\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4900:4905  _salt */\n      sload(0x00)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4895  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4899  tokenId.mul */\n      tag_156\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4906  tokenId.mul(_salt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4910  tokenId.mul(_salt).add */\n      tag_193\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4888:4919  tokenId.mul(_salt).add(tokenId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4871:4919  uint256 _power = tokenId.mul(_salt).add(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4947:4948  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4941:4943  10 */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4934:4940  _power */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4934:4943  _power%10 */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4934:4948  _power%10 == 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4931:5035  if(_power%10 == 0){... */\n      tag_231\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4973:4974  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4964:4974  _power = 1 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4931:5035  if(_power%10 == 0){... */\n      jump(tag_232)\n    tag_231:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5021:5023  10 */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5014:5020  _power */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5014:5023  _power%10 */\n      tag_233\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_233:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5005:5023  _power = _power%10 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4931:5035  if(_power%10 == 0){... */\n    tag_232:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5052:5058  _power */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5045:5058  return _power */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4774:5066  function tokenIDPower (uint256 tokenId)public view override returns(uint256){        ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12042:12206  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_112:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12139:12143  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12163:12181  _operatorApprovals */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12163:12188  _operatorApprovals[owner] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12182:12187  owner */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12163:12188  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12163:12198  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12189:12197  operator */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12163:12198  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12156:12198  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12042:12206  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6066:6237  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n    tag_116:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6136:6143  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6195:6204  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6195:6210  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6205:6209  user */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6195:6210  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6195:6218  _mineInfo[user][number] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6211:6217  number */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6195:6218  _mineInfo[user][number] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6188:6218  return _mineInfo[user][number] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6066:6237  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13354:13528  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_132:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13411:13415  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13454:13461  tokenId */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13450  _startTokenId() */\n      tag_238\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13448  _startTokenId */\n      tag_147\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13450  _startTokenId() */\n      jump\t// in\n    tag_238:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13461  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13488  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13475:13488  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13465:13472  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13465:13488  tokenId < _currentIndex */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13488  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_239:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13520  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13493:13504  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13493:13513  _ownerships[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13505:13512  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13493:13513  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13493:13520  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13492:13520  !_ownerships[tokenId].burned */\n      iszero\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13435:13520  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_240:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13428:13520  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":13354:13528  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22358:22554  function _approve(... */\n    tag_144:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22500:22502  to */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22473:22488  _tokenApprovals */\n      0x0c\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22473:22497  _tokenApprovals[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22489:22496  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22473:22497  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22473:22502  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22538:22545  tokenId */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22534:22536  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22518:22546  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22527:22532  owner */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22518:22546  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22358:22554  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5182:5274  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_147:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5238:5245  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5182:5274  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16586:19114  function _transfer(... */\n    tag_150:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16705:16724  uint256 powerNumber */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16727:16748  tokenIDPower(tokenId) */\n      tag_245\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16740:16747  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16727:16739  tokenIDPower */\n      tag_107\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16727:16748  tokenIDPower(tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16705:16748  uint256 powerNumber = tokenIDPower(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16788:16804  MineStatus(from) */\n      tag_246\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16799:16803  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16788:16798  MineStatus */\n      tag_85\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16788:16804  MineStatus(from) */\n      jump\t// in\n    tag_246:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16767:16776  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16767:16782  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16777:16781  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16767:16782  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16767:16785  _mineInfo[from][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16783:16784  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16767:16785  _mineInfo[from][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16767:16804  _mineInfo[from][3] = MineStatus(from) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16871  _mineInfo[from][2].sub(powerNumber) */\n      tag_247\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16859:16870  powerNumber */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16845  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16851  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16846:16850  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16851  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16854  _mineInfo[from][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16852:16853  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16854  _mineInfo[from][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16858  _mineInfo[from][2].sub */\n      tag_187\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16836:16871  _mineInfo[from][2].sub(powerNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16815:16824  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16815:16830  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16825:16829  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16815:16830  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16815:16833  _mineInfo[from][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16831:16832  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16815:16833  _mineInfo[from][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16815:16871  _mineInfo[from][2] = _mineInfo[from][2].sub(powerNumber) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16903:16915  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16882:16891  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16882:16897  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16892:16896  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16882:16897  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16882:16900  _mineInfo[from][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16898:16899  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16882:16900  _mineInfo[from][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16882:16915  _mineInfo[from][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16945:16959  MineStatus(to) */\n      tag_248\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16956:16958  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16945:16955  MineStatus */\n      tag_85\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16945:16959  MineStatus(to) */\n      jump\t// in\n    tag_248:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16926:16935  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16926:16939  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16936:16938  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16926:16939  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16926:16942  _mineInfo[to][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16940:16941  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16926:16942  _mineInfo[to][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16926:16959  _mineInfo[to][3] = MineStatus(to) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17022  _mineInfo[to][2].add(powerNumber) */\n      tag_249\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17010:17021  powerNumber */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:16998  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17002  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16999:17001  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17002  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17005  _mineInfo[to][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17003:17004  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17005  _mineInfo[to][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17009  _mineInfo[to][2].add */\n      tag_193\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:17022  _mineInfo[to][2].add(powerNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16970:16979  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16970:16983  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16980:16982  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16970:16983  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16970:16986  _mineInfo[to][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16984:16985  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16970:16986  _mineInfo[to][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16970:17022  _mineInfo[to][2] = _mineInfo[to][2].add(powerNumber) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17052:17064  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17042  _mineInfo */\n      0x0e\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17046  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17043:17045  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17046  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17049  _mineInfo[to][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17047:17048  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17049  _mineInfo[to][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17064  _mineInfo[to][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17099:17134  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17137:17158  _ownershipOf(tokenId) */\n      tag_250\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17150:17157  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17137:17149  _ownershipOf */\n      tag_162\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17137:17158  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_250:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17099:17158  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17197:17201  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17175:17201  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17175:17188  prevOwnership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17175:17193  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17175:17201  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17171:17238  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_251\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17210:17238  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17171:17238  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_251:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17251:17273  bool isApprovedOrOwner */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17293:17297  from */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17297  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17289  _msgSender() */\n      tag_252\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17287  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17289  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17297  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17350  _msgSender() == from ||... */\n      dup1\n      tag_253\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17314:17350  isApprovedForAll(from, _msgSender()) */\n      tag_254\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17331:17335  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17337:17349  _msgSender() */\n      tag_255\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17337:17347  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17337:17349  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17314:17330  isApprovedForAll */\n      tag_112\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17314:17350  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_254:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17350  _msgSender() == from ||... */\n    tag_253:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17403  _msgSender() == from ||... */\n      dup1\n      tag_256\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17391:17403  _msgSender() */\n      tag_257\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17391:17401  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17391:17403  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17367:17403  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17367:17387  getApproved(tokenId) */\n      tag_258\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17379:17386  tokenId */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17367:17378  getApproved */\n      tag_41\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17367:17387  getApproved(tokenId) */\n      jump\t// in\n    tag_258:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17367:17403  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17277:17403  _msgSender() == from ||... */\n    tag_256:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17251:17404  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17422:17439  isApprovedOrOwner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17417:17483  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_259\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17448:17483  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17417:17483  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_259:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17512:17513  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17498:17514  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17498:17500  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17498:17514  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17494:17546  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_260\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17523:17546  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17494:17546  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_260:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17559:17602  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_261\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17581:17585  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17587:17589  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17591:17598  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17600:17601  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17559:17580  _beforeTokenTransfers */\n      tag_262\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17559:17602  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_261:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17667:17702  _approve(address(0), tokenId, from) */\n      tag_263\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17684:17685  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17688:17695  tokenId */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17697:17701  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17667:17675  _approve */\n      tag_144\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17667:17702  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_263:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18028:18029  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17998:18010  _addressData */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17998:18016  _addressData[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18011:18015  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17998:18016  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17998:18024  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17998:18029  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18072:18073  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18044:18056  _addressData */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18044:18060  _addressData[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18057:18059  to */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18044:18060  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18044:18068  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18044:18073  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18090:18121  TokenOwnership storage currSlot */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18124:18135  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18124:18144  _ownerships[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18136:18143  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18124:18144  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18090:18144  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18175:18177  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18159:18167  currSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18159:18172  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18159:18177  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18225:18240  block.timestamp */\n      timestamp\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18192:18200  currSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18192:18215  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18192:18241  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18493:18512  uint256 nextTokenId */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18525:18526  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18515:18522  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18515:18526  tokenId + 1 */\n      add\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18493:18526  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18541:18572  TokenOwnership storage nextSlot */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18575:18586  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18575:18599  _ownerships[nextTokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18587:18598  nextTokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18575:18599  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18541:18599  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18643:18644  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18618:18645  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18618:18626  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18618:18631  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18618:18645  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18614:18998  if (nextSlot.addr == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18828:18841  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18813:18824  nextTokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18813:18841  nextTokenId != _currentIndex */\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18809:18983  if (nextTokenId != _currentIndex) {... */\n      tag_265\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18882:18886  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18866:18874  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18866:18879  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18866:18886  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18935:18948  prevOwnership */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18935:18963  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18909:18917  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18909:18932  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18909:18963  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18809:18983  if (nextTokenId != _currentIndex) {... */\n    tag_265:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18614:18998  if (nextSlot.addr == address(0)) {... */\n    tag_264:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17973:19009  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19045:19052  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19041:19043  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19026:19053  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19035:19039  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19026:19053  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19064:19106  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_266\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19085:19089  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19091:19093  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19095:19102  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19104:19105  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19064:19084  _afterTokenTransfers */\n      tag_267\n        /* \"minerpunk/ERC721A/ERC721A.sol\":19064:19106  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_266:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16690:19114  {  ... */\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16586:19114  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8448:9559  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_162:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8510:8531  TokenOwnership memory */\n      tag_274\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8544:8556  uint256 curr */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8559:8566  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8544:8566  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8627:8631  curr */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8608:8623  _startTokenId() */\n      tag_277\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8608:8621  _startTokenId */\n      tag_147\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8608:8623  _startTokenId() */\n      jump\t// in\n    tag_277:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8608:8631  _startTokenId() <= curr */\n      gt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8604:9492  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n      tag_278\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8644:8657  _currentIndex */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8637:8641  curr */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8637:8657  curr < _currentIndex */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8633:9492  if (curr < _currentIndex) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8678:8709  TokenOwnership memory ownership */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8712:8723  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8712:8729  _ownerships[curr] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8724:8728  curr */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8712:8729  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8678:8729  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8753:8762  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8753:8769  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8748:9477  if (!ownership.burned) {... */\n      tag_280\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8824:8825  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8798:8826  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8798:8807  ownership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8798:8812  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8798:8826  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8794:8895  if (ownership.addr != address(0)) {... */\n      tag_281\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8862:8871  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8855:8871  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_276)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8794:8895  if (ownership.addr != address(0)) {... */\n    tag_281:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9197:9458  while (true) {... */\n    tag_282:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9204:9208  true */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9197:9458  while (true) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9237:9243  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9282:9293  _ownerships */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9282:9299  _ownerships[curr] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9294:9298  curr */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9282:9299  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9270:9299  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9356:9357  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9330:9358  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9330:9339  ownership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9330:9344  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9330:9358  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9326:9435  if (ownership.addr != address(0)) {... */\n      tag_284\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9398:9407  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9391:9407  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_276)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9326:9435  if (ownership.addr != address(0)) {... */\n    tag_284:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9197:9458  while (true) {... */\n      jump(tag_282)\n    tag_283:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8748:9477  if (!ownership.burned) {... */\n    tag_280:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8659:9492  {... */\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8633:9492  if (curr < _currentIndex) {... */\n    tag_279:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8604:9492  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n    tag_278:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9520:9551  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8448:9559  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_276:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23046:23713  function _checkContractOnERC721Received(... */\n    tag_183:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23209:23213  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23246:23248  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23230:23266  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23267:23279  _msgSender() */\n      tag_287\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23267:23277  _msgSender */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23267:23279  _msgSender() */\n      jump\t// in\n    tag_287:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23281:23285  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23287:23294  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23296:23301  _data */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23230:23302  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_291\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      0x01\n    tag_290:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23226:23706  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_293\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_298\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_297)\n    tag_298:\n      0x60\n      swap2\n      pop\n    tag_297:\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23481:23482  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23464:23470  reason */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23464:23477  reason.length */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23464:23482  reason.length == 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23460:23695  if (reason.length == 0) {... */\n      tag_299\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23510:23550  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23460:23695  if (reason.length == 0) {... */\n    tag_299:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23653:23659  reason */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23647:23660  mload(reason) */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23638:23644  reason */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23634:23636  32 */\n      0x20\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23630:23645  add(32, reason) */\n      add\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23623:23661  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23226:23706  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_293:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23359:23404  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23349:23404  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23349:23355  retval */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23349:23404  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23342:23404  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23046:23713  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_306\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10723:10908  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_211:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10774:10787  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10800:10890  return 'https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/' */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_d8cc7cbf95b52afa2322fac553d3c4e20f5096fb87da64785a945de91007c7b2\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10723:10908  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_309)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:741  uint256 temp = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":751:765  uint256 digits */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":790:791  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:786  temp */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      dup1\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup3\n      tag_315\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_315:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_311)\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_316\n      jumpi\n      tag_317\n      tag_318\n      jump\t// in\n    tag_317:\n    tag_316:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_319\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_319:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:920  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup3\n      tag_322\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_322:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_323\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_324\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_326\n      tag_327\n      jump\t// in\n    tag_326:\n    tag_325:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup6\n      tag_328\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_328:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_320)\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1087  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1067:1088  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_309:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":24361:24520  function _beforeTokenTransfers(... */\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":25179:25337  function _afterTokenTransfers(... */\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_275:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_331:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_332:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_333:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_334:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_335:\n        /* \"#utility.yul\":561:584   */\n      tag_382\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_334\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_383:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_336:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_385\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_335\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_30:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_388\n      tag_332\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":833:952   */\n    tag_387:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_389\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_336\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_337:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_338:\n        /* \"#utility.yul\":1268:1289   */\n      tag_392\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_337\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_33:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_394\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_338\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_339:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_340:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_341:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_398:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_398)\n    tag_400:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_342:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_343:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_403\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_339\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2329:2400   */\n      tag_404\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_340\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_405\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_341\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2499:2528   */\n      tag_406\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_342\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_37:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_408\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_343\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_344:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_345:\n        /* \"#utility.yul\":3016:3040   */\n      tag_411\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_344\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_412:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_346:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_414\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_345\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_40:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_417\n      tag_332\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3292:3411   */\n    tag_416:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_418\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_346\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_347:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_348:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_421\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_347\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_349:\n        /* \"#utility.yul\":3872:3896   */\n      tag_423\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_348\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_43:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_425\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_349\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_350:\n        /* \"#utility.yul\":4210:4234   */\n      tag_427\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_348\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_428:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_351:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_430\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_350\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_46:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_433\n      tag_332\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4503:4622   */\n    tag_432:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_434\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_351\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_435\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_346\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_352:\n        /* \"#utility.yul\":4977:5001   */\n      tag_437\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_344\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_51:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_439\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_352\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_54:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_442\n      tag_332\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5352:5471   */\n    tag_441:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_443\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_351\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_444\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_351\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_445\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_346\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_69:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_448\n      tag_332\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5943:6062   */\n    tag_447:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_449\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_351\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_353:\n        /* \"#utility.yul\":6272:6293   */\n      tag_451\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_337\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_452:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_354:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_454\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_353\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_77:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_457\n      tag_332\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6553:6672   */\n    tag_456:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_458\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_351\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_459\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_354\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_355:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_356:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_318:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_357:\n        /* \"#utility.yul\":7452:7479   */\n      tag_464\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_342\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_466\n      tag_318\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7525:7613   */\n    tag_465:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_358:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_468\n      tag_331\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_469\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_357\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_359:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_472\n      tag_318\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7928:7984   */\n    tag_471:\n        /* \"#utility.yul\":8002:8031   */\n      tag_473\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_342\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_360:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_361:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_476\n        /* \"#utility.yul\":8374:8422   */\n      tag_477\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_359\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8358:8423   */\n      tag_358\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_479\n      tag_356\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8498:8610   */\n    tag_478:\n        /* \"#utility.yul\":8619:8673   */\n      tag_480\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_360\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_362:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_483\n      tag_355\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8769:8891   */\n    tag_482:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_484\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_361\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_81:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_487\n      tag_332\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9178:9298   */\n    tag_486:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_488\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_351\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_489\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_351\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_490\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_346\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_492\n      tag_333\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9765:9882   */\n    tag_491:\n        /* \"#utility.yul\":9906:9968   */\n      tag_493\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_362\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_111:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_496\n      tag_332\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10084:10203   */\n    tag_495:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_497\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_351\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_498\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_351\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_363:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_125:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_501:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_503\n      tag_363\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10887:10971   */\n    tag_502:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_364:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_365:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_506\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_339\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11326:11415   */\n      tag_507\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_364\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_508\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_341\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_217:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_510\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_365\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_511\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_365\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12154   */\n    tag_366:\n        /* \"#utility.yul\":12022:12099   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12019:12020   */\n      0x00\n        /* \"#utility.yul\":12012:12100   */\n      mstore\n        /* \"#utility.yul\":12119:12123   */\n      0x11\n        /* \"#utility.yul\":12116:12117   */\n      0x04\n        /* \"#utility.yul\":12109:12124   */\n      mstore\n        /* \"#utility.yul\":12143:12147   */\n      0x24\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12133:12148   */\n      revert\n        /* \"#utility.yul\":12160:12262   */\n    tag_367:\n        /* \"#utility.yul\":12202:12210   */\n      0x00\n        /* \"#utility.yul\":12249:12254   */\n      dup2\n        /* \"#utility.yul\":12246:12247   */\n      0x01\n        /* \"#utility.yul\":12242:12255   */\n      shr\n        /* \"#utility.yul\":12221:12255   */\n      swap1\n      pop\n        /* \"#utility.yul\":12160:12262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12268:13116   */\n    tag_368:\n        /* \"#utility.yul\":12329:12334   */\n      0x00\n        /* \"#utility.yul\":12336:12340   */\n      dup1\n        /* \"#utility.yul\":12360:12366   */\n      dup3\n        /* \"#utility.yul\":12351:12366   */\n      swap2\n      pop\n        /* \"#utility.yul\":12384:12389   */\n      dup4\n        /* \"#utility.yul\":12375:12389   */\n      swap1\n      pop\n        /* \"#utility.yul\":12398:13110   */\n    tag_515:\n        /* \"#utility.yul\":12419:12420   */\n      0x01\n        /* \"#utility.yul\":12409:12417   */\n      dup6\n        /* \"#utility.yul\":12406:12421   */\n      gt\n        /* \"#utility.yul\":12398:13110   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":12514:12518   */\n      dup1\n        /* \"#utility.yul\":12509:12512   */\n      dup7\n        /* \"#utility.yul\":12505:12519   */\n      div\n        /* \"#utility.yul\":12499:12503   */\n      dup2\n        /* \"#utility.yul\":12496:12520   */\n      gt\n        /* \"#utility.yul\":12493:12543   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":12523:12541   */\n      tag_519\n      tag_366\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12493:12543   */\n    tag_518:\n        /* \"#utility.yul\":12573:12574   */\n      0x01\n        /* \"#utility.yul\":12563:12571   */\n      dup6\n        /* \"#utility.yul\":12559:12575   */\n      and\n        /* \"#utility.yul\":12556:13007   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":12988:12992   */\n      dup1\n        /* \"#utility.yul\":12981:12986   */\n      dup3\n        /* \"#utility.yul\":12977:12993   */\n      mul\n        /* \"#utility.yul\":12968:12993   */\n      swap2\n      pop\n        /* \"#utility.yul\":12556:13007   */\n    tag_520:\n        /* \"#utility.yul\":13038:13042   */\n      dup1\n        /* \"#utility.yul\":13032:13036   */\n      dup2\n        /* \"#utility.yul\":13028:13043   */\n      mul\n        /* \"#utility.yul\":13020:13043   */\n      swap1\n      pop\n        /* \"#utility.yul\":13068:13100   */\n      tag_521\n        /* \"#utility.yul\":13091:13099   */\n      dup6\n        /* \"#utility.yul\":13068:13100   */\n      tag_367\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13056:13100   */\n      swap5\n      pop\n        /* \"#utility.yul\":12398:13110   */\n      jump(tag_515)\n    tag_517:\n        /* \"#utility.yul\":12268:13116   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13122:14195   */\n    tag_369:\n        /* \"#utility.yul\":13176:13181   */\n      0x00\n        /* \"#utility.yul\":13367:13375   */\n      dup3\n        /* \"#utility.yul\":13357:13397   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":13388:13389   */\n      0x01\n        /* \"#utility.yul\":13379:13389   */\n      swap1\n      pop\n        /* \"#utility.yul\":13390:13395   */\n      jump(tag_522)\n        /* \"#utility.yul\":13357:13397   */\n    tag_523:\n        /* \"#utility.yul\":13416:13420   */\n      dup2\n        /* \"#utility.yul\":13406:13442   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":13433:13434   */\n      0x00\n        /* \"#utility.yul\":13424:13434   */\n      swap1\n      pop\n        /* \"#utility.yul\":13435:13440   */\n      jump(tag_522)\n        /* \"#utility.yul\":13406:13442   */\n    tag_524:\n        /* \"#utility.yul\":13502:13506   */\n      dup2\n        /* \"#utility.yul\":13550:13551   */\n      0x01\n        /* \"#utility.yul\":13545:13572   */\n      dup2\n      eq\n      tag_526\n      jumpi\n        /* \"#utility.yul\":13586:13587   */\n      0x02\n        /* \"#utility.yul\":13581:13772   */\n      dup2\n      eq\n      tag_527\n      jumpi\n        /* \"#utility.yul\":13495:13772   */\n      jump(tag_525)\n        /* \"#utility.yul\":13545:13572   */\n    tag_526:\n        /* \"#utility.yul\":13563:13564   */\n      0x01\n        /* \"#utility.yul\":13554:13564   */\n      swap2\n      pop\n        /* \"#utility.yul\":13565:13570   */\n      pop\n      jump(tag_522)\n        /* \"#utility.yul\":13581:13772   */\n    tag_527:\n        /* \"#utility.yul\":13626:13629   */\n      0xff\n        /* \"#utility.yul\":13616:13624   */\n      dup5\n        /* \"#utility.yul\":13613:13630   */\n      gt\n        /* \"#utility.yul\":13610:13653   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":13633:13651   */\n      tag_529\n      tag_366\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13610:13653   */\n    tag_528:\n        /* \"#utility.yul\":13682:13690   */\n      dup4\n        /* \"#utility.yul\":13679:13680   */\n      0x02\n        /* \"#utility.yul\":13675:13691   */\n      exp\n        /* \"#utility.yul\":13666:13691   */\n      swap2\n      pop\n        /* \"#utility.yul\":13717:13720   */\n      dup5\n        /* \"#utility.yul\":13710:13715   */\n      dup3\n        /* \"#utility.yul\":13707:13721   */\n      gt\n        /* \"#utility.yul\":13704:13744   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":13724:13742   */\n      tag_531\n      tag_366\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":13704:13744   */\n    tag_530:\n        /* \"#utility.yul\":13757:13762   */\n      pop\n      jump(tag_522)\n        /* \"#utility.yul\":13495:13772   */\n    tag_525:\n      pop\n        /* \"#utility.yul\":13881:13883   */\n      0x20\n        /* \"#utility.yul\":13871:13879   */\n      dup4\n        /* \"#utility.yul\":13868:13884   */\n      lt\n        /* \"#utility.yul\":13862:13865   */\n      0x0133\n        /* \"#utility.yul\":13856:13860   */\n      dup4\n        /* \"#utility.yul\":13853:13866   */\n      lt\n        /* \"#utility.yul\":13849:13885   */\n      and\n        /* \"#utility.yul\":13831:13833   */\n      0x4e\n        /* \"#utility.yul\":13821:13829   */\n      dup5\n        /* \"#utility.yul\":13818:13834   */\n      lt\n        /* \"#utility.yul\":13813:13815   */\n      0x0b\n        /* \"#utility.yul\":13807:13811   */\n      dup5\n        /* \"#utility.yul\":13804:13816   */\n      lt\n        /* \"#utility.yul\":13800:13835   */\n      and\n        /* \"#utility.yul\":13784:13895   */\n      or\n        /* \"#utility.yul\":13781:14027   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":13937:13945   */\n      dup3\n        /* \"#utility.yul\":13931:13935   */\n      dup3\n        /* \"#utility.yul\":13927:13946   */\n      exp\n        /* \"#utility.yul\":13918:13946   */\n      swap1\n      pop\n        /* \"#utility.yul\":13972:13975   */\n      dup4\n        /* \"#utility.yul\":13965:13970   */\n      dup2\n        /* \"#utility.yul\":13962:13976   */\n      gt\n        /* \"#utility.yul\":13959:13999   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":13979:13997   */\n      tag_534\n      tag_366\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13959:13999   */\n    tag_533:\n        /* \"#utility.yul\":14012:14017   */\n      jump(tag_522)\n        /* \"#utility.yul\":13781:14027   */\n    tag_532:\n        /* \"#utility.yul\":14052:14094   */\n      tag_535\n        /* \"#utility.yul\":14090:14093   */\n      dup5\n        /* \"#utility.yul\":14080:14088   */\n      dup5\n        /* \"#utility.yul\":14074:14078   */\n      dup5\n        /* \"#utility.yul\":14071:14072   */\n      0x01\n        /* \"#utility.yul\":14052:14094   */\n      tag_368\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14037:14094   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":14126:14130   */\n      dup2\n        /* \"#utility.yul\":14121:14124   */\n      dup5\n        /* \"#utility.yul\":14117:14131   */\n      div\n        /* \"#utility.yul\":14110:14115   */\n      dup2\n        /* \"#utility.yul\":14107:14132   */\n      gt\n        /* \"#utility.yul\":14104:14155   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":14135:14153   */\n      tag_537\n      tag_366\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14104:14155   */\n    tag_536:\n        /* \"#utility.yul\":14184:14188   */\n      dup2\n        /* \"#utility.yul\":14177:14182   */\n      dup2\n        /* \"#utility.yul\":14173:14189   */\n      mul\n        /* \"#utility.yul\":14164:14189   */\n      swap1\n      pop\n        /* \"#utility.yul\":13122:14195   */\n    tag_522:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14201:14287   */\n    tag_370:\n        /* \"#utility.yul\":14236:14243   */\n      0x00\n        /* \"#utility.yul\":14276:14280   */\n      0xff\n        /* \"#utility.yul\":14269:14274   */\n      dup3\n        /* \"#utility.yul\":14265:14281   */\n      and\n        /* \"#utility.yul\":14254:14281   */\n      swap1\n      pop\n        /* \"#utility.yul\":14201:14287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14293:14574   */\n    tag_224:\n        /* \"#utility.yul\":14351:14356   */\n      0x00\n        /* \"#utility.yul\":14375:14398   */\n      tag_540\n        /* \"#utility.yul\":14393:14397   */\n      dup3\n        /* \"#utility.yul\":14375:14398   */\n      tag_344\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14367:14398   */\n      swap2\n      pop\n        /* \"#utility.yul\":14419:14444   */\n      tag_541\n        /* \"#utility.yul\":14435:14443   */\n      dup4\n        /* \"#utility.yul\":14419:14444   */\n      tag_370\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14407:14444   */\n      swap3\n      pop\n        /* \"#utility.yul\":14463:14567   */\n      tag_542\n        /* \"#utility.yul\":14500:14566   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14490:14498   */\n      dup5\n        /* \"#utility.yul\":14484:14488   */\n      dup5\n        /* \"#utility.yul\":14463:14567   */\n      tag_369\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14454:14567   */\n      swap1\n      pop\n        /* \"#utility.yul\":14293:14574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14580:14760   */\n    tag_371:\n        /* \"#utility.yul\":14628:14705   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14625:14626   */\n      0x00\n        /* \"#utility.yul\":14618:14706   */\n      mstore\n        /* \"#utility.yul\":14725:14729   */\n      0x12\n        /* \"#utility.yul\":14722:14723   */\n      0x04\n        /* \"#utility.yul\":14715:14730   */\n      mstore\n        /* \"#utility.yul\":14749:14753   */\n      0x24\n        /* \"#utility.yul\":14746:14747   */\n      0x00\n        /* \"#utility.yul\":14739:14754   */\n      revert\n        /* \"#utility.yul\":14766:14942   */\n    tag_230:\n        /* \"#utility.yul\":14798:14799   */\n      0x00\n        /* \"#utility.yul\":14815:14835   */\n      tag_545\n        /* \"#utility.yul\":14833:14834   */\n      dup3\n        /* \"#utility.yul\":14815:14835   */\n      tag_344\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14810:14835   */\n      swap2\n      pop\n        /* \"#utility.yul\":14849:14869   */\n      tag_546\n        /* \"#utility.yul\":14867:14868   */\n      dup4\n        /* \"#utility.yul\":14849:14869   */\n      tag_344\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14844:14869   */\n      swap3\n      pop\n        /* \"#utility.yul\":14888:14889   */\n      dup3\n        /* \"#utility.yul\":14878:14913   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":14893:14911   */\n      tag_548\n      tag_371\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":14878:14913   */\n    tag_547:\n        /* \"#utility.yul\":14934:14935   */\n      dup3\n        /* \"#utility.yul\":14931:14932   */\n      dup3\n        /* \"#utility.yul\":14927:14936   */\n      mod\n        /* \"#utility.yul\":14922:14936   */\n      swap1\n      pop\n        /* \"#utility.yul\":14766:14942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14948:15358   */\n    tag_270:\n        /* \"#utility.yul\":14988:14995   */\n      0x00\n        /* \"#utility.yul\":15011:15031   */\n      tag_550\n        /* \"#utility.yul\":15029:15030   */\n      dup3\n        /* \"#utility.yul\":15011:15031   */\n      tag_344\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15006:15031   */\n      swap2\n      pop\n        /* \"#utility.yul\":15045:15065   */\n      tag_551\n        /* \"#utility.yul\":15063:15064   */\n      dup4\n        /* \"#utility.yul\":15045:15065   */\n      tag_344\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15040:15065   */\n      swap3\n      pop\n        /* \"#utility.yul\":15100:15101   */\n      dup3\n        /* \"#utility.yul\":15097:15098   */\n      dup3\n        /* \"#utility.yul\":15093:15102   */\n      mul\n        /* \"#utility.yul\":15122:15152   */\n      tag_552\n        /* \"#utility.yul\":15140:15151   */\n      dup2\n        /* \"#utility.yul\":15122:15152   */\n      tag_344\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15111:15152   */\n      swap2\n      pop\n        /* \"#utility.yul\":15301:15302   */\n      dup3\n        /* \"#utility.yul\":15292:15299   */\n      dup3\n        /* \"#utility.yul\":15288:15303   */\n      div\n        /* \"#utility.yul\":15285:15286   */\n      dup5\n        /* \"#utility.yul\":15282:15304   */\n      eq\n        /* \"#utility.yul\":15262:15263   */\n      dup4\n        /* \"#utility.yul\":15255:15264   */\n      iszero\n        /* \"#utility.yul\":15235:15318   */\n      or\n        /* \"#utility.yul\":15212:15351   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":15331:15349   */\n      tag_554\n      tag_366\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":15212:15351   */\n    tag_553:\n        /* \"#utility.yul\":14996:15358   */\n      pop\n        /* \"#utility.yul\":14948:15358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15364:15549   */\n    tag_273:\n        /* \"#utility.yul\":15404:15405   */\n      0x00\n        /* \"#utility.yul\":15421:15441   */\n      tag_556\n        /* \"#utility.yul\":15439:15440   */\n      dup3\n        /* \"#utility.yul\":15421:15441   */\n      tag_344\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15416:15441   */\n      swap2\n      pop\n        /* \"#utility.yul\":15455:15475   */\n      tag_557\n        /* \"#utility.yul\":15473:15474   */\n      dup4\n        /* \"#utility.yul\":15455:15475   */\n      tag_344\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15450:15475   */\n      swap3\n      pop\n        /* \"#utility.yul\":15494:15495   */\n      dup3\n        /* \"#utility.yul\":15484:15519   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":15499:15517   */\n      tag_559\n      tag_371\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15484:15519   */\n    tag_558:\n        /* \"#utility.yul\":15541:15542   */\n      dup3\n        /* \"#utility.yul\":15538:15539   */\n      dup3\n        /* \"#utility.yul\":15534:15543   */\n      div\n        /* \"#utility.yul\":15529:15543   */\n      swap1\n      pop\n        /* \"#utility.yul\":15364:15549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15555:15653   */\n    tag_372:\n        /* \"#utility.yul\":15606:15612   */\n      0x00\n        /* \"#utility.yul\":15640:15645   */\n      dup2\n        /* \"#utility.yul\":15634:15646   */\n      mload\n        /* \"#utility.yul\":15624:15646   */\n      swap1\n      pop\n        /* \"#utility.yul\":15555:15653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15659:15827   */\n    tag_373:\n        /* \"#utility.yul\":15742:15753   */\n      0x00\n        /* \"#utility.yul\":15776:15782   */\n      dup3\n        /* \"#utility.yul\":15771:15774   */\n      dup3\n        /* \"#utility.yul\":15764:15783   */\n      mstore\n        /* \"#utility.yul\":15816:15820   */\n      0x20\n        /* \"#utility.yul\":15811:15814   */\n      dup3\n        /* \"#utility.yul\":15807:15821   */\n      add\n        /* \"#utility.yul\":15792:15821   */\n      swap1\n      pop\n        /* \"#utility.yul\":15659:15827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15833:16206   */\n    tag_374:\n        /* \"#utility.yul\":15919:15922   */\n      0x00\n        /* \"#utility.yul\":15947:15985   */\n      tag_563\n        /* \"#utility.yul\":15979:15984   */\n      dup3\n        /* \"#utility.yul\":15947:15985   */\n      tag_372\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16001:16071   */\n      tag_564\n        /* \"#utility.yul\":16064:16070   */\n      dup2\n        /* \"#utility.yul\":16059:16062   */\n      dup6\n        /* \"#utility.yul\":16001:16071   */\n      tag_373\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":15994:16071   */\n      swap4\n      pop\n        /* \"#utility.yul\":16080:16145   */\n      tag_565\n        /* \"#utility.yul\":16138:16144   */\n      dup2\n        /* \"#utility.yul\":16133:16136   */\n      dup6\n        /* \"#utility.yul\":16126:16130   */\n      0x20\n        /* \"#utility.yul\":16119:16124   */\n      dup7\n        /* \"#utility.yul\":16115:16131   */\n      add\n        /* \"#utility.yul\":16080:16145   */\n      tag_341\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16170:16199   */\n      tag_566\n        /* \"#utility.yul\":16192:16198   */\n      dup2\n        /* \"#utility.yul\":16170:16199   */\n      tag_342\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16165:16168   */\n      dup5\n        /* \"#utility.yul\":16161:16200   */\n      add\n        /* \"#utility.yul\":16154:16200   */\n      swap2\n      pop\n        /* \"#utility.yul\":15923:16206   */\n      pop\n        /* \"#utility.yul\":15833:16206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16212:16852   */\n    tag_289:\n        /* \"#utility.yul\":16407:16411   */\n      0x00\n        /* \"#utility.yul\":16445:16448   */\n      0x80\n        /* \"#utility.yul\":16434:16443   */\n      dup3\n        /* \"#utility.yul\":16430:16449   */\n      add\n        /* \"#utility.yul\":16422:16449   */\n      swap1\n      pop\n        /* \"#utility.yul\":16459:16530   */\n      tag_568\n        /* \"#utility.yul\":16527:16528   */\n      0x00\n        /* \"#utility.yul\":16516:16525   */\n      dup4\n        /* \"#utility.yul\":16512:16529   */\n      add\n        /* \"#utility.yul\":16503:16509   */\n      dup8\n        /* \"#utility.yul\":16459:16530   */\n      tag_349\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16540:16612   */\n      tag_569\n        /* \"#utility.yul\":16608:16610   */\n      0x20\n        /* \"#utility.yul\":16597:16606   */\n      dup4\n        /* \"#utility.yul\":16593:16611   */\n      add\n        /* \"#utility.yul\":16584:16590   */\n      dup7\n        /* \"#utility.yul\":16540:16612   */\n      tag_349\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16622:16694   */\n      tag_570\n        /* \"#utility.yul\":16690:16692   */\n      0x40\n        /* \"#utility.yul\":16679:16688   */\n      dup4\n        /* \"#utility.yul\":16675:16693   */\n      add\n        /* \"#utility.yul\":16666:16672   */\n      dup6\n        /* \"#utility.yul\":16622:16694   */\n      tag_352\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16741:16750   */\n      dup2\n        /* \"#utility.yul\":16735:16739   */\n      dup2\n        /* \"#utility.yul\":16731:16751   */\n      sub\n        /* \"#utility.yul\":16726:16728   */\n      0x60\n        /* \"#utility.yul\":16715:16724   */\n      dup4\n        /* \"#utility.yul\":16711:16729   */\n      add\n        /* \"#utility.yul\":16704:16752   */\n      mstore\n        /* \"#utility.yul\":16769:16845   */\n      tag_571\n        /* \"#utility.yul\":16840:16844   */\n      dup2\n        /* \"#utility.yul\":16831:16837   */\n      dup5\n        /* \"#utility.yul\":16769:16845   */\n      tag_374\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16761:16845   */\n      swap1\n      pop\n        /* \"#utility.yul\":16212:16852   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16858:16999   */\n    tag_375:\n        /* \"#utility.yul\":16914:16919   */\n      0x00\n        /* \"#utility.yul\":16945:16951   */\n      dup2\n        /* \"#utility.yul\":16939:16952   */\n      mload\n        /* \"#utility.yul\":16930:16952   */\n      swap1\n      pop\n        /* \"#utility.yul\":16961:16993   */\n      tag_573\n        /* \"#utility.yul\":16987:16992   */\n      dup2\n        /* \"#utility.yul\":16961:16993   */\n      tag_335\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16858:16999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17005:17354   */\n    tag_292:\n        /* \"#utility.yul\":17074:17080   */\n      0x00\n        /* \"#utility.yul\":17123:17125   */\n      0x20\n        /* \"#utility.yul\":17111:17120   */\n      dup3\n        /* \"#utility.yul\":17102:17109   */\n      dup5\n        /* \"#utility.yul\":17098:17121   */\n      sub\n        /* \"#utility.yul\":17094:17126   */\n      slt\n        /* \"#utility.yul\":17091:17210   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":17129:17208   */\n      tag_576\n      tag_332\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17091:17210   */\n    tag_575:\n        /* \"#utility.yul\":17249:17250   */\n      0x00\n        /* \"#utility.yul\":17274:17337   */\n      tag_577\n        /* \"#utility.yul\":17329:17336   */\n      dup5\n        /* \"#utility.yul\":17320:17326   */\n      dup3\n        /* \"#utility.yul\":17309:17318   */\n      dup6\n        /* \"#utility.yul\":17305:17327   */\n      add\n        /* \"#utility.yul\":17274:17337   */\n      tag_375\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17264:17337   */\n      swap2\n      pop\n        /* \"#utility.yul\":17220:17347   */\n      pop\n        /* \"#utility.yul\":17005:17354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17360:17554   */\n    tag_304:\n        /* \"#utility.yul\":17400:17404   */\n      0x00\n        /* \"#utility.yul\":17420:17440   */\n      tag_579\n        /* \"#utility.yul\":17438:17439   */\n      dup3\n        /* \"#utility.yul\":17420:17440   */\n      tag_344\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17415:17440   */\n      swap2\n      pop\n        /* \"#utility.yul\":17454:17474   */\n      tag_580\n        /* \"#utility.yul\":17472:17473   */\n      dup4\n        /* \"#utility.yul\":17454:17474   */\n      tag_344\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17449:17474   */\n      swap3\n      pop\n        /* \"#utility.yul\":17498:17499   */\n      dup3\n        /* \"#utility.yul\":17495:17496   */\n      dup3\n        /* \"#utility.yul\":17491:17500   */\n      sub\n        /* \"#utility.yul\":17483:17500   */\n      swap1\n      pop\n        /* \"#utility.yul\":17522:17523   */\n      dup2\n        /* \"#utility.yul\":17516:17520   */\n      dup2\n        /* \"#utility.yul\":17513:17524   */\n      gt\n        /* \"#utility.yul\":17510:17547   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":17527:17545   */\n      tag_582\n      tag_366\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17510:17547   */\n    tag_581:\n        /* \"#utility.yul\":17360:17554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17560:17751   */\n    tag_307:\n        /* \"#utility.yul\":17600:17603   */\n      0x00\n        /* \"#utility.yul\":17619:17639   */\n      tag_584\n        /* \"#utility.yul\":17637:17638   */\n      dup3\n        /* \"#utility.yul\":17619:17639   */\n      tag_344\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17614:17639   */\n      swap2\n      pop\n        /* \"#utility.yul\":17653:17673   */\n      tag_585\n        /* \"#utility.yul\":17671:17672   */\n      dup4\n        /* \"#utility.yul\":17653:17673   */\n      tag_344\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17648:17673   */\n      swap3\n      pop\n        /* \"#utility.yul\":17696:17697   */\n      dup3\n        /* \"#utility.yul\":17693:17694   */\n      dup3\n        /* \"#utility.yul\":17689:17698   */\n      add\n        /* \"#utility.yul\":17682:17698   */\n      swap1\n      pop\n        /* \"#utility.yul\":17717:17720   */\n      dup1\n        /* \"#utility.yul\":17714:17715   */\n      dup3\n        /* \"#utility.yul\":17711:17721   */\n      gt\n        /* \"#utility.yul\":17708:17744   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":17724:17742   */\n      tag_587\n      tag_366\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17708:17744   */\n    tag_586:\n        /* \"#utility.yul\":17560:17751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17757:17990   */\n    tag_314:\n        /* \"#utility.yul\":17796:17799   */\n      0x00\n        /* \"#utility.yul\":17819:17843   */\n      tag_589\n        /* \"#utility.yul\":17837:17842   */\n      dup3\n        /* \"#utility.yul\":17819:17843   */\n      tag_344\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":17810:17843   */\n      swap2\n      pop\n        /* \"#utility.yul\":17865:17931   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17858:17863   */\n      dup3\n        /* \"#utility.yul\":17855:17932   */\n      sub\n        /* \"#utility.yul\":17852:17955   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":17935:17953   */\n      tag_591\n      tag_366\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":17852:17955   */\n    tag_590:\n        /* \"#utility.yul\":17982:17983   */\n      0x01\n        /* \"#utility.yul\":17975:17980   */\n      dup3\n        /* \"#utility.yul\":17971:17984   */\n      add\n        /* \"#utility.yul\":17964:17984   */\n      swap1\n      pop\n        /* \"#utility.yul\":17757:17990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17996:18176   */\n    tag_327:\n        /* \"#utility.yul\":18044:18121   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18041:18042   */\n      0x00\n        /* \"#utility.yul\":18034:18122   */\n      mstore\n        /* \"#utility.yul\":18141:18145   */\n      0x32\n        /* \"#utility.yul\":18138:18139   */\n      0x04\n        /* \"#utility.yul\":18131:18146   */\n      mstore\n        /* \"#utility.yul\":18165:18169   */\n      0x24\n        /* \"#utility.yul\":18162:18163   */\n      0x00\n        /* \"#utility.yul\":18155:18170   */\n      revert\n    stop\n    data_d8cc7cbf95b52afa2322fac553d3c4e20f5096fb87da64785a945de91007c7b2 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2f\n\n    auxdata: 0xa26469706673582212202f39e6deea4d19750a4df0714f32daa84229bb1164a638c9907e1e222ffbd2e564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1176": {
									"entryPoint": null,
									"id": 1176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_startTokenId_1424": {
									"entryPoint": 177,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_memory": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9164:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2732:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2743:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2704:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2714:7:12",
														"type": ""
													}
												],
												"src": "2677:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:43:12"
															},
															"nodeType": "YulIf",
															"src": "2813:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2796:5:12",
														"type": ""
													}
												],
												"src": "2760:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:12",
														"type": ""
													}
												],
												"src": "2888:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3185:1018:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3232:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3234:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3234:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3206:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:33:12"
															},
															"nodeType": "YulIf",
															"src": "3195:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3325:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3340:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3364:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3375:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3360:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3360:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3354:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3354:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3344:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3425:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3427:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3427:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3427:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3397:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3405:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3394:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3391:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3522:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3532:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3522:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3626:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3641:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3665:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3676:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3661:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3661:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3655:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3655:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3645:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3727:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3729:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3729:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3729:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3699:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3696:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3696:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3693:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3824:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3880:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3891:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3876:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3876:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3834:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3834:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3824:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3928:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3943:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3947:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3973:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4019:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4030:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4015:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4015:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4039:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3983:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3973:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4067:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4082:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4096:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4086:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4112:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4158:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4169:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4154:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4154:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4178:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4122:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4122:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4112:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3131:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3142:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3154:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3162:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3170:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3178:6:12",
														"type": ""
													}
												],
												"src": "3037:1166:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4268:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4279:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4295:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4289:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4279:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4251:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4261:6:12",
														"type": ""
													}
												],
												"src": "4209:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4342:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4359:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4352:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4352:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4459:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4480:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4483:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4473:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4473:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4314:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4551:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4561:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4575:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4592:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4622:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4596:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4669:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4683:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4697:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4705:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4693:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4693:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4683:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4649:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:26:12"
															},
															"nodeType": "YulIf",
															"src": "4639:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4772:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4786:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4786:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4786:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4736:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4759:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4756:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4756:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4733:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:38:12"
															},
															"nodeType": "YulIf",
															"src": "4730:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4535:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4544:6:12",
														"type": ""
													}
												],
												"src": "4500:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4880:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4890:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4898:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4890:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4921:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4911:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4952:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4955:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4942:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4867:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4875:4:12",
														"type": ""
													}
												],
												"src": "4826:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5017:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5027:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5045:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5052:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5041:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5041:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5000:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5010:6:12",
														"type": ""
													}
												],
												"src": "4973:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5125:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5135:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5160:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5166:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5135:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "5100:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5106:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5116:8:12",
														"type": ""
													}
												],
												"src": "5072:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5261:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5271:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5292:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5304:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5288:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5275:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5315:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5346:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5357:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5327:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5327:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5319:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5433:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5464:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5475:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5445:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5433:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5493:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5506:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5517:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5513:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5493:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5532:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5545:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5556:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5566:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5552:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5552:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5542:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5222:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5229:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5241:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5254:6:12",
														"type": ""
													}
												],
												"src": "5185:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5616:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5626:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5633:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5602:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5612:3:12",
														"type": ""
													}
												],
												"src": "5584:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5710:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5720:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5778:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5760:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5760:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5751:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5751:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5733:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5720:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5690:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5700:9:12",
														"type": ""
													}
												],
												"src": "5650:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5845:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5855:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5862:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5855:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5831:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5841:3:12",
														"type": ""
													}
												],
												"src": "5798:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5955:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5965:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "6020:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5989:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5989:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5969:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6044:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "6084:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "6078:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6078:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6091:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "6123:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6099:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6099:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "6050:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6050:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5932:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5938:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5946:7:12",
														"type": ""
													}
												],
												"src": "5879:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6203:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6213:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6220:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6213:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6199:3:12",
														"type": ""
													}
												],
												"src": "6154:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6286:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6296:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6310:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6310:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6300:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6395:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6401:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6409:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6351:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6272:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6278:6:12",
														"type": ""
													}
												],
												"src": "6233:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6478:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6545:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6589:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6596:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6559:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6559:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6559:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6498:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6505:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6495:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6510:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6512:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6525:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6532:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6521:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6521:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6512:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6492:2:12",
																"statements": []
															},
															"src": "6488:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6466:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6473:3:12",
														"type": ""
													}
												],
												"src": "6428:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6699:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6725:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6739:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6787:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6755:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6755:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6743:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6806:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6829:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6857:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6839:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6839:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6825:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6825:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6810:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7026:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7028:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "7043:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "7028:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "7010:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7022:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7007:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7007:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "7004:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "7095:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "7112:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7140:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "7122:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7122:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7108:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7108:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "7066:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7066:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7066:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6716:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6721:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6713:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6713:11:12"
															},
															"nodeType": "YulIf",
															"src": "6710:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6675:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6682:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6687:10:12",
														"type": ""
													}
												],
												"src": "6620:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7232:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7242:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7267:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7273:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7263:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7263:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7242:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7207:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7213:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7223:8:12",
														"type": ""
													}
												],
												"src": "7169:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7343:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7353:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7402:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7405:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7398:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7398:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7417:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7413:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7369:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7365:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7365:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7357:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7430:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7320:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7326:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7336:6:12",
														"type": ""
													}
												],
												"src": "7292:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7547:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7680:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7713:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7688:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7680:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7726:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7737:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7747:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7750:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7734:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7726:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7528:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7534:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7542:4:12",
														"type": ""
													}
												],
												"src": "7466:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7869:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7916:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7883:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7873:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8005:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8007:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8007:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8007:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7977:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7985:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7974:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7974:30:12"
															},
															"nodeType": "YulIf",
															"src": "7971:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8037:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "8083:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8077:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8077:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "8051:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "8041:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8182:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8188:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8196:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "8136:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8136:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8136:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8213:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8230:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8217:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8241:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8254:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8241:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8305:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8319:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8338:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8350:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8346:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8346:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8334:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8334:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8323:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8370:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8416:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8384:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8384:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8374:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8434:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8443:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8438:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8502:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8527:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8545:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8550:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8541:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8541:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8535:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8535:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8520:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8520:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8520:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8579:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8593:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8601:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8589:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8589:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8579:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8620:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8637:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8648:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8633:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8633:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8620:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8468:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8471:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8465:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8465:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8480:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8482:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8491:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8494:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8487:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8487:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8482:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8461:3:12",
																					"statements": []
																				},
																				"src": "8457:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8701:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8719:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8746:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8751:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8742:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8742:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8736:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8736:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8723:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8786:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8813:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8828:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8836:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8824:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8824:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8794:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8794:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8779:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8779:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8779:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8684:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8693:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8681:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8681:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8678:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8877:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8891:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8899:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8887:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8887:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8903:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8883:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8883:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8870:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8870:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8870:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8298:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8303:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8933:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8947:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8960:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8951:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8984:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9002:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "9021:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "9026:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9017:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9017:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "9011:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9011:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "9002:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8977:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8974:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "9071:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "9130:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "9137:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "9077:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9077:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "9064:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9064:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9064:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8925:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8278:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8286:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8275:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "8268:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7847:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7853:3:12",
														"type": ""
													}
												],
												"src": "7766:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620031b0380380620031b0833981810160405281019062000037919062000284565b836008908162000048919062000575565b5082600990816200005a919062000575565b5061271060068190555062000074620000b160201b60201c565b6005819055508160008190555067d02ab486cedc000060028190555061b3b06004819055504360038190555080600181905550505050506200065c565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200011f82620000d4565b810181811067ffffffffffffffff82111715620001415762000140620000e5565b5b80604052505050565b600062000156620000b6565b905062000164828262000114565b919050565b600067ffffffffffffffff821115620001875762000186620000e5565b5b6200019282620000d4565b9050602081019050919050565b60005b83811015620001bf578082015181840152602081019050620001a2565b60008484015250505050565b6000620001e2620001dc8462000169565b6200014a565b905082815260208101848484011115620002015762000200620000cf565b5b6200020e8482856200019f565b509392505050565b600082601f8301126200022e576200022d620000ca565b5b815162000240848260208601620001cb565b91505092915050565b6000819050919050565b6200025e8162000249565b81146200026a57600080fd5b50565b6000815190506200027e8162000253565b92915050565b60008060008060808587031215620002a157620002a0620000c0565b5b600085015167ffffffffffffffff811115620002c257620002c1620000c5565b5b620002d08782880162000216565b945050602085015167ffffffffffffffff811115620002f457620002f3620000c5565b5b620003028782880162000216565b935050604062000315878288016200026d565b925050606062000328878288016200026d565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038757607f821691505b6020821081036200039d576200039c6200033f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003c8565b620004138683620003c8565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000456620004506200044a8462000249565b6200042b565b62000249565b9050919050565b6000819050919050565b620004728362000435565b6200048a62000481826200045d565b848454620003d5565b825550505050565b600090565b620004a162000492565b620004ae81848462000467565b505050565b5b81811015620004d657620004ca60008262000497565b600181019050620004b4565b5050565b601f8211156200052557620004ef81620003a3565b620004fa84620003b8565b810160208510156200050a578190505b620005226200051985620003b8565b830182620004b3565b50505b505050565b600082821c905092915050565b60006200054a600019846008026200052a565b1980831691505092915050565b600062000565838362000537565b9150826002028217905092915050565b620005808262000334565b67ffffffffffffffff8111156200059c576200059b620000e5565b5b620005a882546200036e565b620005b5828285620004da565b600060209050601f831160018114620005ed5760008415620005d8578287015190505b620005e4858262000557565b86555062000654565b601f198416620005fd86620003a3565b60005b82811015620006275784890151825560018201915060208501945060208101905062000600565b8683101562000647578489015162000643601f89168262000537565b8355505b6001600288020188555050505b505050505050565b612b44806200066c6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063a22cb465116100b8578063d5abeb011161007c578063d5abeb01146103ad578063d993226b146103cb578063db3ad22c146103fb578063e29301f914610419578063e985e9c514610449578063eff0730d1461047957610142565b8063a22cb465146102e5578063b88d4fde14610301578063b8ba60071461031d578063c29dbcca1461034d578063c87b56dd1461037d57610142565b806323b872dd1161010a57806323b872dd146101ff57806342842e0e1461021b5780634be3403c146102375780636352211e1461026757806370a082311461029757806395d89b41146102c757610142565b806301ffc9a71461014757806306fdde0314610177578063081812fc14610195578063095ea7b3146101c557806318160ddd146101e1575b600080fd5b610161600480360381019061015c9190612060565b6104a9565b60405161016e91906120a8565b60405180910390f35b61017f61058b565b60405161018c9190612153565b60405180910390f35b6101af60048036038101906101aa91906121ab565b61061d565b6040516101bc9190612219565b60405180910390f35b6101df60048036038101906101da9190612260565b610699565b005b6101e961079d565b6040516101f691906122af565b60405180910390f35b610219600480360381019061021491906122ca565b6107b4565b005b610235600480360381019061023091906122ca565b6107c4565b005b610251600480360381019061024c91906121ab565b6107e4565b60405161025e91906122af565b60405180910390f35b610281600480360381019061027c91906121ab565b610855565b60405161028e9190612219565b60405180910390f35b6102b160048036038101906102ac919061231d565b61086b565b6040516102be91906122af565b60405180910390f35b6102cf61093a565b6040516102dc9190612153565b60405180910390f35b6102ff60048036038101906102fa9190612376565b6109cc565b005b61031b600480360381019061031691906124eb565b610b43565b005b6103376004803603810190610332919061231d565b610bbb565b60405161034491906122af565b60405180910390f35b610367600480360381019061036291906121ab565b610db7565b60405161037491906122af565b60405180910390f35b610397600480360381019061039291906121ab565b610e60565b6040516103a49190612153565b60405180910390f35b6103b5610efe565b6040516103c291906122af565b60405180910390f35b6103e560048036038101906103e091906121ab565b610f15565b6040516103f291906122af565b60405180910390f35b610403610f61565b60405161041091906122af565b60405180910390f35b610433600480360381019061042e91906121ab565b610f6b565b60405161044091906122af565b60405180910390f35b610463600480360381019061045e919061256e565b610fcd565b60405161047091906120a8565b60405180910390f35b610493600480360381019061048e9190612260565b611061565b6040516104a091906122af565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061057457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105845750610583826110bc565b5b9050919050565b60606008805461059a906125dd565b80601f01602080910402602001604051908101604052809291908181526020018280546105c6906125dd565b80156106135780601f106105e857610100808354040283529160200191610613565b820191906000526020600020905b8154815290600101906020018083116105f657829003601f168201915b5050505050905090565b600061062882611126565b61065e576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600c600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106a482610855565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361070b576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661072a611174565b73ffffffffffffffffffffffffffffffffffffffff161461078d5761075681610751611174565b610fcd565b61078c576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61079883838361117c565b505050565b60006107a761122e565b6007546005540303905090565b6107bf838383611233565b505050565b6107df83838360405180602001604052806000815250610b43565b505050565b60006003548210156107f65760035491505b6000610824760a70c3c40a64e6c51999090b65f67d92400000000000006002546119cf90919063ffffffff16565b9050600061083184610f15565b9050600061084882846119e590919063ffffffff16565b9050809350505050919050565b6000610860826119fb565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d2576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b606060098054610949906125dd565b80601f0160208091040260200160405190810160405280929190818152602001828054610975906125dd565b80156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b5050505050905090565b6109d4611174565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a38576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600d6000610a45611174565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610af2611174565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b3791906120a8565b60405180910390a35050565b610b4e848484611233565b610b6d8373ffffffffffffffffffffffffffffffffffffffff16611c86565b15610bb557610b7e84848484611ca9565b610bb4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b600080610c22600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000205443611df990919063ffffffff16565b90506000610c80600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020546107e4565b90506000610c8d436107e4565b90506000610cc96002610cbb86610cad8688611e0f90919063ffffffff16565b6119cf90919063ffffffff16565b6119e590919063ffffffff16565b90506000610d45600454610d37600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054856119cf90919063ffffffff16565b6119e590919063ffffffff16565b9050610dab81600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003815260200190815260200160002054611e0f90919063ffffffff16565b95505050505050919050565b600080610dcf60035443611df990919063ffffffff16565b90506000610dde6003546107e4565b90506000610deb436107e4565b90506000610e276002610e1986610e0b8688611e0f90919063ffffffff16565b6119cf90919063ffffffff16565b6119e590919063ffffffff16565b90508060015410610e5257610e4781600154611df990919063ffffffff16565b945050505050610e5b565b60009450505050505b919050565b6060610e6b82611126565b610ea1576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610eab611e25565b90506000815103610ecb5760405180602001604052806000815250610ef6565b80610ed584611e45565b604051602001610ee692919061264a565b6040516020818303038152906040525b915050919050565b6000610f0861122e565b6007546006540303905090565b600080610f47600354610f39670de0b6b3a7640000866119cf90919063ffffffff16565b6119e590919063ffffffff16565b9050600481610f5691906127dd565b905080915050919050565b6000600454905090565b600080610f9583610f87600054866119cf90919063ffffffff16565b611e0f90919063ffffffff16565b90506000600a82610fa69190612857565b03610fb45760019050610fc4565b600a81610fc19190612857565b90505b80915050919050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008161113161122e565b11158015611140575060055482105b801561116d5750600a6000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b82600c600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b600061123e82610f6b565b905061124984610bbb565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061130281600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054611df990919063ffffffff16565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506113b683610bbb565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061146f81600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054611e0f90919063ffffffff16565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506000611525836119fb565b90508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611590576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166115b1611174565b73ffffffffffffffffffffffffffffffffffffffff1614806115e057506115df866115da611174565b610fcd565b5b8061162557506115ee611174565b73ffffffffffffffffffffffffffffffffffffffff1661160d8561061d565b73ffffffffffffffffffffffffffffffffffffffff16145b90508061165e576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036116c4576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116d18686866001611fa5565b6116dd6000858861117c565b6001600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600a60008681526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001860190506000600a60008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361195c57600554821461195b57888160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119c78686866001611fab565b505050505050565b600081836119dd9190612888565b905092915050565b600081836119f391906128ca565b905092915050565b611a03611fb1565b600082905080611a1161122e565b11611c4f57600554811015611c4e576000600a60008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff16151515158152505090508060400151611c4c57600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611b30578092505050611c81565b5b600115611c4b57818060019003925050600a60008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611c46578092505050611c81565b611b31565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611ccf611174565b8786866040518563ffffffff1660e01b8152600401611cf19493929190612950565b6020604051808303816000875af1925050508015611d2d57506040513d601f19601f82011682018060405250810190611d2a91906129b1565b60015b611da6573d8060008114611d5d576040519150601f19603f3d011682016040523d82523d6000602084013e611d62565b606091505b506000815103611d9e576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60008183611e0791906129de565b905092915050565b60008183611e1d9190612a12565b905092915050565b6060604051806080016040528060518152602001612abe60519139905090565b606060008203611e8c576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611fa0565b600082905060005b60008214611ebe578080611ea790612a46565b915050600a82611eb791906128ca565b9150611e94565b60008167ffffffffffffffff811115611eda57611ed96123c0565b5b6040519080825280601f01601f191660200182016040528015611f0c5781602001600182028036833780820191505090505b5090505b60008514611f9957600182611f2591906129de565b9150600a85611f349190612857565b6030611f409190612a12565b60f81b818381518110611f5657611f55612a8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611f9291906128ca565b9450611f10565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61203d81612008565b811461204857600080fd5b50565b60008135905061205a81612034565b92915050565b60006020828403121561207657612075611ffe565b5b60006120848482850161204b565b91505092915050565b60008115159050919050565b6120a28161208d565b82525050565b60006020820190506120bd6000830184612099565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120fd5780820151818401526020810190506120e2565b60008484015250505050565b6000601f19601f8301169050919050565b6000612125826120c3565b61212f81856120ce565b935061213f8185602086016120df565b61214881612109565b840191505092915050565b6000602082019050818103600083015261216d818461211a565b905092915050565b6000819050919050565b61218881612175565b811461219357600080fd5b50565b6000813590506121a58161217f565b92915050565b6000602082840312156121c1576121c0611ffe565b5b60006121cf84828501612196565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612203826121d8565b9050919050565b612213816121f8565b82525050565b600060208201905061222e600083018461220a565b92915050565b61223d816121f8565b811461224857600080fd5b50565b60008135905061225a81612234565b92915050565b6000806040838503121561227757612276611ffe565b5b60006122858582860161224b565b925050602061229685828601612196565b9150509250929050565b6122a981612175565b82525050565b60006020820190506122c460008301846122a0565b92915050565b6000806000606084860312156122e3576122e2611ffe565b5b60006122f18682870161224b565b93505060206123028682870161224b565b925050604061231386828701612196565b9150509250925092565b60006020828403121561233357612332611ffe565b5b60006123418482850161224b565b91505092915050565b6123538161208d565b811461235e57600080fd5b50565b6000813590506123708161234a565b92915050565b6000806040838503121561238d5761238c611ffe565b5b600061239b8582860161224b565b92505060206123ac85828601612361565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6123f882612109565b810181811067ffffffffffffffff82111715612417576124166123c0565b5b80604052505050565b600061242a611ff4565b905061243682826123ef565b919050565b600067ffffffffffffffff821115612456576124556123c0565b5b61245f82612109565b9050602081019050919050565b82818337600083830152505050565b600061248e6124898461243b565b612420565b9050828152602081018484840111156124aa576124a96123bb565b5b6124b584828561246c565b509392505050565b600082601f8301126124d2576124d16123b6565b5b81356124e284826020860161247b565b91505092915050565b6000806000806080858703121561250557612504611ffe565b5b60006125138782880161224b565b94505060206125248782880161224b565b935050604061253587828801612196565b925050606085013567ffffffffffffffff81111561255657612555612003565b5b612562878288016124bd565b91505092959194509250565b6000806040838503121561258557612584611ffe565b5b60006125938582860161224b565b92505060206125a48582860161224b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125f557607f821691505b602082108103612608576126076125ae565b5b50919050565b600081905092915050565b6000612624826120c3565b61262e818561260e565b935061263e8185602086016120df565b80840191505092915050565b60006126568285612619565b91506126628284612619565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156126f4578086048111156126d0576126cf61266e565b5b60018516156126df5780820291505b80810290506126ed8561269d565b94506126b4565b94509492505050565b60008261270d57600190506127c9565b8161271b57600090506127c9565b8160018114612731576002811461273b5761276a565b60019150506127c9565b60ff84111561274d5761274c61266e565b5b8360020a9150848211156127645761276361266e565b5b506127c9565b5060208310610133831016604e8410600b841016171561279f5782820a90508381111561279a5761279961266e565b5b6127c9565b6127ac84848460016126aa565b925090508184048111156127c3576127c261266e565b5b81810290505b9392505050565b600060ff82169050919050565b60006127e882612175565b91506127f3836127d0565b92506128207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846126fd565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061286282612175565b915061286d83612175565b92508261287d5761287c612828565b5b828206905092915050565b600061289382612175565b915061289e83612175565b92508282026128ac81612175565b915082820484148315176128c3576128c261266e565b5b5092915050565b60006128d582612175565b91506128e083612175565b9250826128f0576128ef612828565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000612922826128fb565b61292c8185612906565b935061293c8185602086016120df565b61294581612109565b840191505092915050565b6000608082019050612965600083018761220a565b612972602083018661220a565b61297f60408301856122a0565b81810360608301526129918184612917565b905095945050505050565b6000815190506129ab81612034565b92915050565b6000602082840312156129c7576129c6611ffe565b5b60006129d58482850161299c565b91505092915050565b60006129e982612175565b91506129f483612175565b9250828203905081811115612a0c57612a0b61266e565b5b92915050565b6000612a1d82612175565b9150612a2883612175565b9250828201905080821115612a4057612a3f61266e565b5b92915050565b6000612a5182612175565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a8357612a8261266e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2fa26469706673582212202f39e6deea4d19750a4df0714f32daa84229bb1164a638c9907e1e222ffbd2e564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x31B0 CODESIZE SUB DUP1 PUSH3 0x31B0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x284 JUMP JUMPDEST DUP4 PUSH1 0x8 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x575 JUMP JUMPDEST POP DUP3 PUSH1 0x9 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x575 JUMP JUMPDEST POP PUSH2 0x2710 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x74 PUSH3 0xB1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH8 0xD02AB486CEDC0000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xB3B0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x65C JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x11F DUP3 PUSH3 0xD4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x141 JUMPI PUSH3 0x140 PUSH3 0xE5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x156 PUSH3 0xB6 JUMP JUMPDEST SWAP1 POP PUSH3 0x164 DUP3 DUP3 PUSH3 0x114 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x187 JUMPI PUSH3 0x186 PUSH3 0xE5 JUMP JUMPDEST JUMPDEST PUSH3 0x192 DUP3 PUSH3 0xD4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1BF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1A2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E2 PUSH3 0x1DC DUP5 PUSH3 0x169 JUMP JUMPDEST PUSH3 0x14A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x201 JUMPI PUSH3 0x200 PUSH3 0xCF JUMP JUMPDEST JUMPDEST PUSH3 0x20E DUP5 DUP3 DUP6 PUSH3 0x19F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x22E JUMPI PUSH3 0x22D PUSH3 0xCA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x240 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x25E DUP2 PUSH3 0x249 JUMP JUMPDEST DUP2 EQ PUSH3 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x27E DUP2 PUSH3 0x253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x2A1 JUMPI PUSH3 0x2A0 PUSH3 0xC0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2C2 JUMPI PUSH3 0x2C1 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST PUSH3 0x2D0 DUP8 DUP3 DUP9 ADD PUSH3 0x216 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F4 JUMPI PUSH3 0x2F3 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST PUSH3 0x302 DUP8 DUP3 DUP9 ADD PUSH3 0x216 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x315 DUP8 DUP3 DUP9 ADD PUSH3 0x26D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x328 DUP8 DUP3 DUP9 ADD PUSH3 0x26D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x387 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x39D JUMPI PUSH3 0x39C PUSH3 0x33F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x407 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3C8 JUMP JUMPDEST PUSH3 0x413 DUP7 DUP4 PUSH3 0x3C8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x456 PUSH3 0x450 PUSH3 0x44A DUP5 PUSH3 0x249 JUMP JUMPDEST PUSH3 0x42B JUMP JUMPDEST PUSH3 0x249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x472 DUP4 PUSH3 0x435 JUMP JUMPDEST PUSH3 0x48A PUSH3 0x481 DUP3 PUSH3 0x45D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3D5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4A1 PUSH3 0x492 JUMP JUMPDEST PUSH3 0x4AE DUP2 DUP5 DUP5 PUSH3 0x467 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4D6 JUMPI PUSH3 0x4CA PUSH1 0x0 DUP3 PUSH3 0x497 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x525 JUMPI PUSH3 0x4EF DUP2 PUSH3 0x3A3 JUMP JUMPDEST PUSH3 0x4FA DUP5 PUSH3 0x3B8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x50A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x522 PUSH3 0x519 DUP6 PUSH3 0x3B8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4B3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x54A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x52A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x565 DUP4 DUP4 PUSH3 0x537 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x580 DUP3 PUSH3 0x334 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x59C JUMPI PUSH3 0x59B PUSH3 0xE5 JUMP JUMPDEST JUMPDEST PUSH3 0x5A8 DUP3 SLOAD PUSH3 0x36E JUMP JUMPDEST PUSH3 0x5B5 DUP3 DUP3 DUP6 PUSH3 0x4DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5ED JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5D8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5E4 DUP6 DUP3 PUSH3 0x557 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x654 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5FD DUP7 PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x627 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x600 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x647 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x643 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x537 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2B44 DUP1 PUSH3 0x66C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA22CB465 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xDB3AD22C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xE29301F9 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xEFF0730D EQ PUSH2 0x479 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xC29DBCCA EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x37D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C7 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x231D JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x231D JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x574 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x584 JUMPI POP PUSH2 0x583 DUP3 PUSH2 0x10BC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x59A SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x613 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x613 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x628 DUP3 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A4 DUP3 PUSH2 0x855 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x72A PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78D JUMPI PUSH2 0x756 DUP2 PUSH2 0x751 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x798 DUP4 DUP4 DUP4 PUSH2 0x117C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A7 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BF DUP4 DUP4 DUP4 PUSH2 0x1233 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7DF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x3 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x824 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x2 SLOAD PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x831 DUP5 PUSH2 0xF15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x848 DUP3 DUP5 PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x860 DUP3 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x949 SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x975 SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x997 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA38 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0xA45 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF2 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB4E DUP5 DUP5 DUP5 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0xB6D DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C86 JUMP JUMPDEST ISZERO PUSH2 0xBB5 JUMPI PUSH2 0xB7E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC22 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC80 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8D NUMBER PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCC9 PUSH1 0x2 PUSH2 0xCBB DUP7 PUSH2 0xCAD DUP7 DUP9 PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD45 PUSH1 0x4 SLOAD PUSH2 0xD37 PUSH1 0xE PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDAB DUP2 PUSH1 0xE PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDCF PUSH1 0x3 SLOAD NUMBER PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDDE PUSH1 0x3 SLOAD PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDEB NUMBER PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE27 PUSH1 0x2 PUSH2 0xE19 DUP7 PUSH2 0xE0B DUP7 DUP9 PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD LT PUSH2 0xE52 JUMPI PUSH2 0xE47 DUP2 PUSH1 0x1 SLOAD PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x0 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE6B DUP3 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0x1E25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEF6 JUMP JUMPDEST DUP1 PUSH2 0xED5 DUP5 PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEE6 SWAP3 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF08 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF47 PUSH1 0x3 SLOAD PUSH2 0xF39 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF95 DUP4 PUSH2 0xF87 PUSH1 0x0 SLOAD DUP7 PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA DUP3 PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST SUB PUSH2 0xFB4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1131 PUSH2 0x122E JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1140 JUMPI POP PUSH1 0x5 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x116D JUMPI POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP3 PUSH2 0xF6B JUMP JUMPDEST SWAP1 POP PUSH2 0x1249 DUP5 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1302 DUP2 PUSH1 0xE PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13B6 DUP4 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x146F DUP2 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1525 DUP4 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1590 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15B1 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x15E0 JUMPI POP PUSH2 0x15DF DUP7 PUSH2 0x15DA PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1625 JUMPI POP PUSH2 0x15EE PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160D DUP6 PUSH2 0x61D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x165E JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16D1 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x16DD PUSH1 0x0 DUP6 DUP9 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195C JUMPI PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x195B JUMPI DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1FAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19DD SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19F3 SWAP2 SWAP1 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A03 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1A11 PUSH2 0x122E JUMP JUMPDEST GT PUSH2 0x1C4F JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1C4C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B30 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1C81 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1C4B JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C46 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x1B31 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1CCF PUSH2 0x1174 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D2D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D2A SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DA6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D5D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1D9E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E07 SWAP2 SWAP1 PUSH2 0x29DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E1D SWAP2 SWAP1 PUSH2 0x2A12 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2ABE PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1E8C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1EBE JUMPI DUP1 DUP1 PUSH2 0x1EA7 SWAP1 PUSH2 0x2A46 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1EB7 SWAP2 SWAP1 PUSH2 0x28CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EDA JUMPI PUSH2 0x1ED9 PUSH2 0x23C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F0C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1F99 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1F25 SWAP2 SWAP1 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1F34 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1F40 SWAP2 SWAP1 PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F56 JUMPI PUSH2 0x1F55 PUSH2 0x2A8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1F92 SWAP2 SWAP1 PUSH2 0x28CA JUMP JUMPDEST SWAP5 POP PUSH2 0x1F10 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203D DUP2 PUSH2 0x2008 JUMP JUMPDEST DUP2 EQ PUSH2 0x2048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205A DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2084 DUP5 DUP3 DUP6 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A2 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20FD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2125 DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x212F DUP2 DUP6 PUSH2 0x20CE JUMP JUMPDEST SWAP4 POP PUSH2 0x213F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x2109 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x216D DUP2 DUP5 PUSH2 0x211A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2188 DUP2 PUSH2 0x2175 JUMP JUMPDEST DUP2 EQ PUSH2 0x2193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A5 DUP2 PUSH2 0x217F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x21C0 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21CF DUP5 DUP3 DUP6 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2203 DUP3 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2213 DUP2 PUSH2 0x21F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x222E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x220A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x223D DUP2 PUSH2 0x21F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225A DUP2 PUSH2 0x2234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2277 JUMPI PUSH2 0x2276 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2285 DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2296 DUP6 DUP3 DUP7 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A9 DUP2 PUSH2 0x2175 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x22E2 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F1 DUP7 DUP3 DUP8 ADD PUSH2 0x224B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2302 DUP7 DUP3 DUP8 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2313 DUP7 DUP3 DUP8 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH2 0x2332 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2341 DUP5 DUP3 DUP6 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2353 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP2 EQ PUSH2 0x235E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2370 DUP2 PUSH2 0x234A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x239B DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23AC DUP6 DUP3 DUP7 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23F8 DUP3 PUSH2 0x2109 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2417 JUMPI PUSH2 0x2416 PUSH2 0x23C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242A PUSH2 0x1FF4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2436 DUP3 DUP3 PUSH2 0x23EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2456 JUMPI PUSH2 0x2455 PUSH2 0x23C0 JUMP JUMPDEST JUMPDEST PUSH2 0x245F DUP3 PUSH2 0x2109 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248E PUSH2 0x2489 DUP5 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2420 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24AA JUMPI PUSH2 0x24A9 PUSH2 0x23BB JUMP JUMPDEST JUMPDEST PUSH2 0x24B5 DUP5 DUP3 DUP6 PUSH2 0x246C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x23B6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x247B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2505 JUMPI PUSH2 0x2504 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2513 DUP8 DUP3 DUP9 ADD PUSH2 0x224B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2524 DUP8 DUP3 DUP9 ADD PUSH2 0x224B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2535 DUP8 DUP3 DUP9 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2556 JUMPI PUSH2 0x2555 PUSH2 0x2003 JUMP JUMPDEST JUMPDEST PUSH2 0x2562 DUP8 DUP3 DUP9 ADD PUSH2 0x24BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2585 JUMPI PUSH2 0x2584 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2593 DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A4 DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x25AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x262E DUP2 DUP6 PUSH2 0x260E JUMP JUMPDEST SWAP4 POP PUSH2 0x263E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2656 DUP3 DUP6 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH2 0x2662 DUP3 DUP5 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x26F4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x26D0 JUMPI PUSH2 0x26CF PUSH2 0x266E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x26DF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x26ED DUP6 PUSH2 0x269D JUMP JUMPDEST SWAP5 POP PUSH2 0x26B4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x270D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x27C9 JUMP JUMPDEST DUP2 PUSH2 0x271B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27C9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2731 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x273B JUMPI PUSH2 0x276A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x274D JUMPI PUSH2 0x274C PUSH2 0x266E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2764 JUMPI PUSH2 0x2763 PUSH2 0x266E JUMP JUMPDEST JUMPDEST POP PUSH2 0x27C9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x279F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x279A JUMPI PUSH2 0x2799 PUSH2 0x266E JUMP JUMPDEST JUMPDEST PUSH2 0x27C9 JUMP JUMPDEST PUSH2 0x27AC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x26AA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x27C3 JUMPI PUSH2 0x27C2 PUSH2 0x266E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E8 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F3 DUP4 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x2820 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x26FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2862 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x286D DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x287D JUMPI PUSH2 0x287C PUSH2 0x2828 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2893 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x289E DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x28AC DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x28C3 JUMPI PUSH2 0x28C2 PUSH2 0x266E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D5 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E0 DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28F0 JUMPI PUSH2 0x28EF PUSH2 0x2828 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2922 DUP3 PUSH2 0x28FB JUMP JUMPDEST PUSH2 0x292C DUP2 DUP6 PUSH2 0x2906 JUMP JUMPDEST SWAP4 POP PUSH2 0x293C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x2945 DUP2 PUSH2 0x2109 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2965 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x220A JUMP JUMPDEST PUSH2 0x2972 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x220A JUMP JUMPDEST PUSH2 0x297F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22A0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2991 DUP2 DUP5 PUSH2 0x2917 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29AB DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x29C6 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29D5 DUP5 DUP3 DUP6 ADD PUSH2 0x299C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E9 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F4 DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x266E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1D DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A28 DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x266E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A51 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A83 JUMPI PUSH2 0x2A82 PUSH2 0x266E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D654E373753715459457258644D5134684C CALLVALUE BALANCE PUSH3 0x316661 SELFBALANCE PUSH25 0x414B7434515741354E475646755A753978486E2FA264697066 PUSH20 0x582212202F39E6DEEA4D19750A4DF0714F32DAA8 TIMESTAMP 0x29 0xBB GT PUSH5 0xA638C9907E 0x1E 0x22 0x2F 0xFB 0xD2 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1033:24307:9:-:0;;;2490:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2598:5;2590;:13;;;;;;:::i;:::-;;2624:7;2614;:17;;;;;;:::i;:::-;;2655:5;2642:10;:18;;;;2687:15;:13;;;:15;;:::i;:::-;2671:13;:31;;;;2722:5;2714;:13;;;;2758:5;2741:14;:22;;;;2791:5;2777:11;:19;;;;2827:12;2807:17;:32;;;;2863:9;2851;:21;;;;2490:394;;;;1033:24307;;5182:92;5238:7;5182:92;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1166::-;3154:6;3162;3170;3178;3227:3;3215:9;3206:7;3202:23;3198:33;3195:120;;;3234:79;;:::i;:::-;3195:120;3375:1;3364:9;3360:17;3354:24;3405:18;3397:6;3394:30;3391:117;;;3427:79;;:::i;:::-;3391:117;3532:74;3598:7;3589:6;3578:9;3574:22;3532:74;:::i;:::-;3522:84;;3325:291;3676:2;3665:9;3661:18;3655:25;3707:18;3699:6;3696:30;3693:117;;;3729:79;;:::i;:::-;3693:117;3834:74;3900:7;3891:6;3880:9;3876:22;3834:74;:::i;:::-;3824:84;;3626:292;3957:2;3983:64;4039:7;4030:6;4019:9;4015:22;3983:64;:::i;:::-;3973:74;;3928:129;4096:2;4122:64;4178:7;4169:6;4158:9;4154:22;4122:64;:::i;:::-;4112:74;;4067:129;3037:1166;;;;;;;:::o;4209:99::-;4261:6;4295:5;4289:12;4279:22;;4209:99;;;:::o;4314:180::-;4362:77;4359:1;4352:88;4459:4;4456:1;4449:15;4483:4;4480:1;4473:15;4500:320;4544:6;4581:1;4575:4;4571:12;4561:22;;4628:1;4622:4;4618:12;4649:18;4639:81;;4705:4;4697:6;4693:17;4683:27;;4639:81;4767:2;4759:6;4756:14;4736:18;4733:38;4730:84;;4786:18;;:::i;:::-;4730:84;4551:269;4500:320;;;:::o;4826:141::-;4875:4;4898:3;4890:11;;4921:3;4918:1;4911:14;4955:4;4952:1;4942:18;4934:26;;4826:141;;;:::o;4973:93::-;5010:6;5057:2;5052;5045:5;5041:14;5037:23;5027:33;;4973:93;;;:::o;5072:107::-;5116:8;5166:5;5160:4;5156:16;5135:37;;5072:107;;;;:::o;5185:393::-;5254:6;5304:1;5292:10;5288:18;5327:97;5357:66;5346:9;5327:97;:::i;:::-;5445:39;5475:8;5464:9;5445:39;:::i;:::-;5433:51;;5517:4;5513:9;5506:5;5502:21;5493:30;;5566:4;5556:8;5552:19;5545:5;5542:30;5532:40;;5261:317;;5185:393;;;;;:::o;5584:60::-;5612:3;5633:5;5626:12;;5584:60;;;:::o;5650:142::-;5700:9;5733:53;5751:34;5760:24;5778:5;5760:24;:::i;:::-;5751:34;:::i;:::-;5733:53;:::i;:::-;5720:66;;5650:142;;;:::o;5798:75::-;5841:3;5862:5;5855:12;;5798:75;;;:::o;5879:269::-;5989:39;6020:7;5989:39;:::i;:::-;6050:91;6099:41;6123:16;6099:41;:::i;:::-;6091:6;6084:4;6078:11;6050:91;:::i;:::-;6044:4;6037:105;5955:193;5879:269;;;:::o;6154:73::-;6199:3;6154:73;:::o;6233:189::-;6310:32;;:::i;:::-;6351:65;6409:6;6401;6395:4;6351:65;:::i;:::-;6286:136;6233:189;;:::o;6428:186::-;6488:120;6505:3;6498:5;6495:14;6488:120;;;6559:39;6596:1;6589:5;6559:39;:::i;:::-;6532:1;6525:5;6521:13;6512:22;;6488:120;;;6428:186;;:::o;6620:543::-;6721:2;6716:3;6713:11;6710:446;;;6755:38;6787:5;6755:38;:::i;:::-;6839:29;6857:10;6839:29;:::i;:::-;6829:8;6825:44;7022:2;7010:10;7007:18;7004:49;;;7043:8;7028:23;;7004:49;7066:80;7122:22;7140:3;7122:22;:::i;:::-;7112:8;7108:37;7095:11;7066:80;:::i;:::-;6725:431;;6710:446;6620:543;;;:::o;7169:117::-;7223:8;7273:5;7267:4;7263:16;7242:37;;7169:117;;;;:::o;7292:169::-;7336:6;7369:51;7417:1;7413:6;7405:5;7402:1;7398:13;7369:51;:::i;:::-;7365:56;7450:4;7444;7440:15;7430:25;;7343:118;7292:169;;;;:::o;7466:295::-;7542:4;7688:29;7713:3;7707:4;7688:29;:::i;:::-;7680:37;;7750:3;7747:1;7743:11;7737:4;7734:21;7726:29;;7466:295;;;;:::o;7766:1395::-;7883:37;7916:3;7883:37;:::i;:::-;7985:18;7977:6;7974:30;7971:56;;;8007:18;;:::i;:::-;7971:56;8051:38;8083:4;8077:11;8051:38;:::i;:::-;8136:67;8196:6;8188;8182:4;8136:67;:::i;:::-;8230:1;8254:4;8241:17;;8286:2;8278:6;8275:14;8303:1;8298:618;;;;8960:1;8977:6;8974:77;;;9026:9;9021:3;9017:19;9011:26;9002:35;;8974:77;9077:67;9137:6;9130:5;9077:67;:::i;:::-;9071:4;9064:81;8933:222;8268:887;;8298:618;8350:4;8346:9;8338:6;8334:22;8384:37;8416:4;8384:37;:::i;:::-;8443:1;8457:208;8471:7;8468:1;8465:14;8457:208;;;8550:9;8545:3;8541:19;8535:26;8527:6;8520:42;8601:1;8593:6;8589:14;8579:24;;8648:2;8637:9;8633:18;8620:31;;8494:4;8491:1;8487:12;8482:17;;8457:208;;;8693:6;8684:7;8681:19;8678:179;;;8751:9;8746:3;8742:19;8736:26;8794:48;8836:4;8828:6;8824:17;8813:9;8794:48;:::i;:::-;8786:6;8779:64;8701:156;8678:179;8903:1;8899;8891:6;8887:14;8883:22;8877:4;8870:36;8305:611;;;8268:887;;7858:1303;;;7766:1395;;:::o;1033:24307:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineStatus_1309": {
									"entryPoint": 3003,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfers_2834": {
									"entryPoint": 8107,
									"id": 2834,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2753": {
									"entryPoint": 4476,
									"id": 2753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1777": {
									"entryPoint": 7717,
									"id": 1777,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2821": {
									"entryPoint": 8101,
									"id": 2821,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2808": {
									"entryPoint": 7337,
									"id": 2808,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1994": {
									"entryPoint": 4390,
									"id": 1994,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_467": {
									"entryPoint": 4468,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_1690": {
									"entryPoint": 6651,
									"id": 1690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1424": {
									"entryPoint": 4654,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_2484": {
									"entryPoint": 4659,
									"id": 2484,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_915": {
									"entryPoint": 7695,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1823": {
									"entryPoint": 1689,
									"id": 1823,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1552": {
									"entryPoint": 2155,
									"id": 1552,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockStatus_1349": {
									"entryPoint": 2020,
									"id": 1349,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@difficult_1376": {
									"entryPoint": 3861,
									"id": 1376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_960": {
									"entryPoint": 6629,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_1845": {
									"entryPoint": 1565,
									"id": 1845,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1897": {
									"entryPoint": 4045,
									"id": 1897,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 7302,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_1463": {
									"entryPoint": 3838,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mineInfo_1480": {
									"entryPoint": 4193,
									"id": 1480,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_945": {
									"entryPoint": 6607,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1715": {
									"entryPoint": 1419,
									"id": 1715,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1705": {
									"entryPoint": 2133,
									"id": 1705,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1934": {
									"entryPoint": 1988,
									"id": 1934,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1970": {
									"entryPoint": 2883,
									"id": 1970,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1879": {
									"entryPoint": 2508,
									"id": 1879,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_930": {
									"entryPoint": 7673,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1524": {
									"entryPoint": 1193,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_726": {
									"entryPoint": 4284,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1725": {
									"entryPoint": 2362,
									"id": 1725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_565": {
									"entryPoint": 7749,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenIDPower_1415": {
									"entryPoint": 3947,
									"id": 1415,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1768": {
									"entryPoint": 3680,
									"id": 1768,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalDugUp_1235": {
									"entryPoint": 3511,
									"id": 1235,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalPower_1449": {
									"entryPoint": 3937,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1440": {
									"entryPoint": 1949,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1915": {
									"entryPoint": 1972,
									"id": 1915,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10576,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 9898,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 10205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 9981,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 9885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 8756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18179:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:12",
														"type": ""
													}
												],
												"src": "4890:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:12",
														"type": ""
													}
												],
												"src": "5014:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:12"
															},
															"nodeType": "YulIf",
															"src": "5352:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:12",
														"type": ""
													}
												],
												"src": "5242:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:12"
															},
															"nodeType": "YulIf",
															"src": "5943:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:12",
														"type": ""
													}
												],
												"src": "5867:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:12"
															},
															"nodeType": "YulIf",
															"src": "6252:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:12",
														"type": ""
													}
												],
												"src": "6202:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:12",
														"type": ""
													}
												],
												"src": "6324:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:12"
															},
															"nodeType": "YulIf",
															"src": "6553:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:12",
														"type": ""
													}
												],
												"src": "6463:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:12"
															},
															"nodeType": "YulIf",
															"src": "7525:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:12",
														"type": ""
													}
												],
												"src": "7369:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:12",
														"type": ""
													}
												],
												"src": "7656:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:12"
															},
															"nodeType": "YulIf",
															"src": "7928:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:12",
														"type": ""
													}
												],
												"src": "7791:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:12",
														"type": ""
													}
												],
												"src": "8104:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:12"
															},
															"nodeType": "YulIf",
															"src": "8498:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:12",
														"type": ""
													}
												],
												"src": "8256:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:12"
															},
															"nodeType": "YulIf",
															"src": "8769:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:12",
														"type": ""
													}
												],
												"src": "8698:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:12"
															},
															"nodeType": "YulIf",
															"src": "9178:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:12",
														"type": ""
													}
												],
												"src": "9042:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:12"
															},
															"nodeType": "YulIf",
															"src": "10084:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:12",
														"type": ""
													}
												],
												"src": "9991:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:12"
															},
															"nodeType": "YulIf",
															"src": "10796:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:12"
															},
															"nodeType": "YulIf",
															"src": "10887:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:12",
														"type": ""
													}
												],
												"src": "10657:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:12",
														"type": ""
													}
												],
												"src": "10983:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:12",
														"type": ""
													}
												],
												"src": "11137:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:12",
														"type": ""
													}
												],
												"src": "11533:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12012:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12012:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12119:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12140:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12143:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11974:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12211:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12221:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12246:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12249:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12242:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12242:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "12221:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12192:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "12202:8:12",
														"type": ""
													}
												],
												"src": "12160:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12341:775:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12351:15:12",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "12360:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "12351:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12375:14:12",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "12384:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "12375:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12433:677:12",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12521:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "12523:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12523:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12523:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "12499:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "12509:3:12"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "12514:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "12505:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12505:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12496:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12496:24:12"
																		},
																		"nodeType": "YulIf",
																		"src": "12493:50:12"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12588:419:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12968:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "12981:5:12"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "12988:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "12977:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12977:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "12968:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "12563:8:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12573:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12559:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12559:16:12"
																		},
																		"nodeType": "YulIf",
																		"src": "12556:451:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13020:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13032:4:12"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13038:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "13028:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13028:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "13020:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13056:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13091:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "13068:22:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13068:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "13056:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "12409:8:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12419:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12406:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12406:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12422:2:12",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12402:3:12",
																"statements": []
															},
															"src": "12398:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "12296:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "12304:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "12311:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "12321:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "12329:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "12336:4:12",
														"type": ""
													}
												],
												"src": "12268:848:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13182:1013:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13377:20:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13379:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13388:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13379:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13390:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "13367:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13360:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:16:12"
															},
															"nodeType": "YulIf",
															"src": "13357:40:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13422:20:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13424:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13433:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13424:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "13435:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "13416:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13409:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13409:12:12"
															},
															"nodeType": "YulIf",
															"src": "13406:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13552:20:12",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "13554:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13563:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "13554:5:12"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "13565:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13545:27:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13550:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13596:176:12",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13631:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "13633:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13633:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13633:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "13616:8:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13626:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "13613:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13613:17:12"
																				},
																				"nodeType": "YulIf",
																				"src": "13610:43:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "13666:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13679:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "13682:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "13675:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13675:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "13666:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "13722:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "13724:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13724:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "13724:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "13710:5:12"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "13717:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "13707:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13707:14:12"
																				},
																				"nodeType": "YulIf",
																				"src": "13704:40:12"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "13757:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "13581:191:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13586:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "13502:4:12"
															},
															"nodeType": "YulSwitch",
															"src": "13495:277:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13904:123:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13918:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "13931:4:12"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "13937:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "13927:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13927:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "13918:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13977:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "13979:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13979:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13979:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "13965:5:12"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "13972:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "13962:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13962:14:12"
																		},
																		"nodeType": "YulIf",
																		"src": "13959:40:12"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "14012:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "13807:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13813:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13804:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13804:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13821:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13831:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13818:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13818:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13800:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13800:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "13856:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13862:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13853:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13853:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "13871:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13881:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "13868:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13868:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13849:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13849:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13784:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13784:111:12"
															},
															"nodeType": "YulIf",
															"src": "13781:246:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14037:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14071:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14080:8:12"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "14090:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "14052:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14052:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14037:5:12"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "14044:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14133:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14135:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14135:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14135:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "14110:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "14121:3:12"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "14126:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "14117:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14117:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14107:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:25:12"
															},
															"nodeType": "YulIf",
															"src": "14104:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14164:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "14177:5:12"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14184:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14173:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14173:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14164:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "13152:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "13158:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "13168:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "13176:5:12",
														"type": ""
													}
												],
												"src": "13122:1073:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14244:43:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14254:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14269:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14276:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14265:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14265:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14254:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14226:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14236:7:12",
														"type": ""
													}
												],
												"src": "14201:86:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14357:217:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14367:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14393:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14375:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "14367:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14407:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14435:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "14419:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14419:25:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "14407:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14454:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14484:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14490:8:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14500:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "14463:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14463:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14454:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14332:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14338:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "14351:5:12",
														"type": ""
													}
												],
												"src": "14293:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14608:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14625:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14628:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14618:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14618:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14618:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14722:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14725:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14715:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14715:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14715:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14746:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14749:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14739:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14739:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14739:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14580:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14800:142:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14810:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14833:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14815:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14815:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14810:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14844:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14867:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14849:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14849:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14844:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14891:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14893:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14893:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14893:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14888:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14881:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14881:9:12"
															},
															"nodeType": "YulIf",
															"src": "14878:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14922:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14931:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14934:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "14927:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14927:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14922:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14789:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14792:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14798:1:12",
														"type": ""
													}
												],
												"src": "14766:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14996:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15006:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15029:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15011:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15011:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15006:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15040:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15063:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15045:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15045:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15040:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15074:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15097:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15100:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15093:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "15078:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15111:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "15140:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15122:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15122:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15111:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15329:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15331:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15331:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15331:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15262:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15255:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15255:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "15285:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "15292:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "15301:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "15288:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15288:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "15282:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15282:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15235:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15235:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15215:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15215:113:12"
															},
															"nodeType": "YulIf",
															"src": "15212:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14979:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14982:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14988:7:12",
														"type": ""
													}
												],
												"src": "14948:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15406:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15416:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15439:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15421:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15421:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15416:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15450:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15473:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15455:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15450:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15497:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15499:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15499:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15499:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15494:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15487:9:12"
															},
															"nodeType": "YulIf",
															"src": "15484:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15529:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15538:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15541:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15534:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15534:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15529:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15395:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15398:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15404:1:12",
														"type": ""
													}
												],
												"src": "15364:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15613:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15624:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15640:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15634:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15634:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15624:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15596:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15606:6:12",
														"type": ""
													}
												],
												"src": "15555:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15754:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15771:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15776:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15764:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15764:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15764:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15792:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15811:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15816:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15807:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15807:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15792:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15726:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15731:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15742:11:12",
														"type": ""
													}
												],
												"src": "15659:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15923:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15933:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15979:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15947:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15947:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15937:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15994:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16059:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16064:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16001:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16001:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15994:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16119:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16126:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16115:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16115:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16133:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16138:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16080:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16080:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16080:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16154:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16165:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16192:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "16170:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16170:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16161:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16161:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16154:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15904:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15911:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15919:3:12",
														"type": ""
													}
												],
												"src": "15833:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16412:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16422:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16434:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16445:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16430:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16430:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16422:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16503:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16516:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16527:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16512:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16512:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16459:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16459:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16459:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16584:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16597:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16608:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16593:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16593:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16540:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16540:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16540:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16666:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16679:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16690:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16675:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16675:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16622:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16622:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16622:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16715:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16726:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16711:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16711:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16704:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16704:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16704:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16761:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16831:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16840:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16769:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16769:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16360:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16372:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16380:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16388:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16396:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16407:4:12",
														"type": ""
													}
												],
												"src": "16212:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16920:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16930:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16945:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16939:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16939:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16930:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16987:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "16961:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16961:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16961:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16898:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16906:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16914:5:12",
														"type": ""
													}
												],
												"src": "16858:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17081:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17127:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17129:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17129:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17129:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17102:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17111:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17098:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17098:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17123:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17094:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17094:32:12"
															},
															"nodeType": "YulIf",
															"src": "17091:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "17220:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17235:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17249:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17239:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17264:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17309:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17320:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17305:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17305:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17329:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17274:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17274:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17264:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17051:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17062:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17074:6:12",
														"type": ""
													}
												],
												"src": "17005:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17405:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17415:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17438:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17420:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17420:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17415:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17449:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17472:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17454:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17454:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17449:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17483:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17495:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17498:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17491:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17491:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17483:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17525:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17527:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17527:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17527:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "17516:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17522:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17513:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17513:11:12"
															},
															"nodeType": "YulIf",
															"src": "17510:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17391:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17394:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17400:4:12",
														"type": ""
													}
												],
												"src": "17360:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17604:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17614:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17637:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17619:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17619:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17614:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17648:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17671:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17653:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17653:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17648:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17682:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17693:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17696:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17689:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17689:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17682:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17722:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17724:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17724:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17724:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17714:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "17717:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17711:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17711:10:12"
															},
															"nodeType": "YulIf",
															"src": "17708:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17591:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17594:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17600:3:12",
														"type": ""
													}
												],
												"src": "17560:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17800:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17810:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17837:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17819:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17819:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17810:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17933:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17935:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17935:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17935:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17858:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17865:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17855:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17855:77:12"
															},
															"nodeType": "YulIf",
															"src": "17852:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17964:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17975:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17982:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17971:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17971:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17964:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17786:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17796:3:12",
														"type": ""
													}
												],
												"src": "17757:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18024:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18041:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18044:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18034:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18034:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18034:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18138:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18141:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18131:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18131:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18131:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18162:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18165:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18155:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18155:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18155:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17996:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c8063a22cb465116100b8578063d5abeb011161007c578063d5abeb01146103ad578063d993226b146103cb578063db3ad22c146103fb578063e29301f914610419578063e985e9c514610449578063eff0730d1461047957610142565b8063a22cb465146102e5578063b88d4fde14610301578063b8ba60071461031d578063c29dbcca1461034d578063c87b56dd1461037d57610142565b806323b872dd1161010a57806323b872dd146101ff57806342842e0e1461021b5780634be3403c146102375780636352211e1461026757806370a082311461029757806395d89b41146102c757610142565b806301ffc9a71461014757806306fdde0314610177578063081812fc14610195578063095ea7b3146101c557806318160ddd146101e1575b600080fd5b610161600480360381019061015c9190612060565b6104a9565b60405161016e91906120a8565b60405180910390f35b61017f61058b565b60405161018c9190612153565b60405180910390f35b6101af60048036038101906101aa91906121ab565b61061d565b6040516101bc9190612219565b60405180910390f35b6101df60048036038101906101da9190612260565b610699565b005b6101e961079d565b6040516101f691906122af565b60405180910390f35b610219600480360381019061021491906122ca565b6107b4565b005b610235600480360381019061023091906122ca565b6107c4565b005b610251600480360381019061024c91906121ab565b6107e4565b60405161025e91906122af565b60405180910390f35b610281600480360381019061027c91906121ab565b610855565b60405161028e9190612219565b60405180910390f35b6102b160048036038101906102ac919061231d565b61086b565b6040516102be91906122af565b60405180910390f35b6102cf61093a565b6040516102dc9190612153565b60405180910390f35b6102ff60048036038101906102fa9190612376565b6109cc565b005b61031b600480360381019061031691906124eb565b610b43565b005b6103376004803603810190610332919061231d565b610bbb565b60405161034491906122af565b60405180910390f35b610367600480360381019061036291906121ab565b610db7565b60405161037491906122af565b60405180910390f35b610397600480360381019061039291906121ab565b610e60565b6040516103a49190612153565b60405180910390f35b6103b5610efe565b6040516103c291906122af565b60405180910390f35b6103e560048036038101906103e091906121ab565b610f15565b6040516103f291906122af565b60405180910390f35b610403610f61565b60405161041091906122af565b60405180910390f35b610433600480360381019061042e91906121ab565b610f6b565b60405161044091906122af565b60405180910390f35b610463600480360381019061045e919061256e565b610fcd565b60405161047091906120a8565b60405180910390f35b610493600480360381019061048e9190612260565b611061565b6040516104a091906122af565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061057457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105845750610583826110bc565b5b9050919050565b60606008805461059a906125dd565b80601f01602080910402602001604051908101604052809291908181526020018280546105c6906125dd565b80156106135780601f106105e857610100808354040283529160200191610613565b820191906000526020600020905b8154815290600101906020018083116105f657829003601f168201915b5050505050905090565b600061062882611126565b61065e576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600c600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106a482610855565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361070b576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661072a611174565b73ffffffffffffffffffffffffffffffffffffffff161461078d5761075681610751611174565b610fcd565b61078c576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61079883838361117c565b505050565b60006107a761122e565b6007546005540303905090565b6107bf838383611233565b505050565b6107df83838360405180602001604052806000815250610b43565b505050565b60006003548210156107f65760035491505b6000610824760a70c3c40a64e6c51999090b65f67d92400000000000006002546119cf90919063ffffffff16565b9050600061083184610f15565b9050600061084882846119e590919063ffffffff16565b9050809350505050919050565b6000610860826119fb565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d2576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b606060098054610949906125dd565b80601f0160208091040260200160405190810160405280929190818152602001828054610975906125dd565b80156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b5050505050905090565b6109d4611174565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a38576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600d6000610a45611174565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610af2611174565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b3791906120a8565b60405180910390a35050565b610b4e848484611233565b610b6d8373ffffffffffffffffffffffffffffffffffffffff16611c86565b15610bb557610b7e84848484611ca9565b610bb4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b600080610c22600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000205443611df990919063ffffffff16565b90506000610c80600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020546107e4565b90506000610c8d436107e4565b90506000610cc96002610cbb86610cad8688611e0f90919063ffffffff16565b6119cf90919063ffffffff16565b6119e590919063ffffffff16565b90506000610d45600454610d37600e60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054856119cf90919063ffffffff16565b6119e590919063ffffffff16565b9050610dab81600e60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003815260200190815260200160002054611e0f90919063ffffffff16565b95505050505050919050565b600080610dcf60035443611df990919063ffffffff16565b90506000610dde6003546107e4565b90506000610deb436107e4565b90506000610e276002610e1986610e0b8688611e0f90919063ffffffff16565b6119cf90919063ffffffff16565b6119e590919063ffffffff16565b90508060015410610e5257610e4781600154611df990919063ffffffff16565b945050505050610e5b565b60009450505050505b919050565b6060610e6b82611126565b610ea1576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610eab611e25565b90506000815103610ecb5760405180602001604052806000815250610ef6565b80610ed584611e45565b604051602001610ee692919061264a565b6040516020818303038152906040525b915050919050565b6000610f0861122e565b6007546006540303905090565b600080610f47600354610f39670de0b6b3a7640000866119cf90919063ffffffff16565b6119e590919063ffffffff16565b9050600481610f5691906127dd565b905080915050919050565b6000600454905090565b600080610f9583610f87600054866119cf90919063ffffffff16565b611e0f90919063ffffffff16565b90506000600a82610fa69190612857565b03610fb45760019050610fc4565b600a81610fc19190612857565b90505b80915050919050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008161113161122e565b11158015611140575060055482105b801561116d5750600a6000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b82600c600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b600061123e82610f6b565b905061124984610bbb565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061130281600e60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054611df990919063ffffffff16565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506113b683610bbb565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061146f81600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002815260200190815260200160002054611e0f90919063ffffffff16565b600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506000611525836119fb565b90508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611590576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166115b1611174565b73ffffffffffffffffffffffffffffffffffffffff1614806115e057506115df866115da611174565b610fcd565b5b8061162557506115ee611174565b73ffffffffffffffffffffffffffffffffffffffff1661160d8561061d565b73ffffffffffffffffffffffffffffffffffffffff16145b90508061165e576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036116c4576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116d18686866001611fa5565b6116dd6000858861117c565b6001600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600a60008681526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001860190506000600a60008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361195c57600554821461195b57888160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119c78686866001611fab565b505050505050565b600081836119dd9190612888565b905092915050565b600081836119f391906128ca565b905092915050565b611a03611fb1565b600082905080611a1161122e565b11611c4f57600554811015611c4e576000600a60008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff16151515158152505090508060400151611c4c57600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611b30578092505050611c81565b5b600115611c4b57818060019003925050600a60008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611c46578092505050611c81565b611b31565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611ccf611174565b8786866040518563ffffffff1660e01b8152600401611cf19493929190612950565b6020604051808303816000875af1925050508015611d2d57506040513d601f19601f82011682018060405250810190611d2a91906129b1565b60015b611da6573d8060008114611d5d576040519150601f19603f3d011682016040523d82523d6000602084013e611d62565b606091505b506000815103611d9e576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60008183611e0791906129de565b905092915050565b60008183611e1d9190612a12565b905092915050565b6060604051806080016040528060518152602001612abe60519139905090565b606060008203611e8c576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611fa0565b600082905060005b60008214611ebe578080611ea790612a46565b915050600a82611eb791906128ca565b9150611e94565b60008167ffffffffffffffff811115611eda57611ed96123c0565b5b6040519080825280601f01601f191660200182016040528015611f0c5781602001600182028036833780820191505090505b5090505b60008514611f9957600182611f2591906129de565b9150600a85611f349190612857565b6030611f409190612a12565b60f81b818381518110611f5657611f55612a8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611f9291906128ca565b9450611f10565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61203d81612008565b811461204857600080fd5b50565b60008135905061205a81612034565b92915050565b60006020828403121561207657612075611ffe565b5b60006120848482850161204b565b91505092915050565b60008115159050919050565b6120a28161208d565b82525050565b60006020820190506120bd6000830184612099565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120fd5780820151818401526020810190506120e2565b60008484015250505050565b6000601f19601f8301169050919050565b6000612125826120c3565b61212f81856120ce565b935061213f8185602086016120df565b61214881612109565b840191505092915050565b6000602082019050818103600083015261216d818461211a565b905092915050565b6000819050919050565b61218881612175565b811461219357600080fd5b50565b6000813590506121a58161217f565b92915050565b6000602082840312156121c1576121c0611ffe565b5b60006121cf84828501612196565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612203826121d8565b9050919050565b612213816121f8565b82525050565b600060208201905061222e600083018461220a565b92915050565b61223d816121f8565b811461224857600080fd5b50565b60008135905061225a81612234565b92915050565b6000806040838503121561227757612276611ffe565b5b60006122858582860161224b565b925050602061229685828601612196565b9150509250929050565b6122a981612175565b82525050565b60006020820190506122c460008301846122a0565b92915050565b6000806000606084860312156122e3576122e2611ffe565b5b60006122f18682870161224b565b93505060206123028682870161224b565b925050604061231386828701612196565b9150509250925092565b60006020828403121561233357612332611ffe565b5b60006123418482850161224b565b91505092915050565b6123538161208d565b811461235e57600080fd5b50565b6000813590506123708161234a565b92915050565b6000806040838503121561238d5761238c611ffe565b5b600061239b8582860161224b565b92505060206123ac85828601612361565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6123f882612109565b810181811067ffffffffffffffff82111715612417576124166123c0565b5b80604052505050565b600061242a611ff4565b905061243682826123ef565b919050565b600067ffffffffffffffff821115612456576124556123c0565b5b61245f82612109565b9050602081019050919050565b82818337600083830152505050565b600061248e6124898461243b565b612420565b9050828152602081018484840111156124aa576124a96123bb565b5b6124b584828561246c565b509392505050565b600082601f8301126124d2576124d16123b6565b5b81356124e284826020860161247b565b91505092915050565b6000806000806080858703121561250557612504611ffe565b5b60006125138782880161224b565b94505060206125248782880161224b565b935050604061253587828801612196565b925050606085013567ffffffffffffffff81111561255657612555612003565b5b612562878288016124bd565b91505092959194509250565b6000806040838503121561258557612584611ffe565b5b60006125938582860161224b565b92505060206125a48582860161224b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125f557607f821691505b602082108103612608576126076125ae565b5b50919050565b600081905092915050565b6000612624826120c3565b61262e818561260e565b935061263e8185602086016120df565b80840191505092915050565b60006126568285612619565b91506126628284612619565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156126f4578086048111156126d0576126cf61266e565b5b60018516156126df5780820291505b80810290506126ed8561269d565b94506126b4565b94509492505050565b60008261270d57600190506127c9565b8161271b57600090506127c9565b8160018114612731576002811461273b5761276a565b60019150506127c9565b60ff84111561274d5761274c61266e565b5b8360020a9150848211156127645761276361266e565b5b506127c9565b5060208310610133831016604e8410600b841016171561279f5782820a90508381111561279a5761279961266e565b5b6127c9565b6127ac84848460016126aa565b925090508184048111156127c3576127c261266e565b5b81810290505b9392505050565b600060ff82169050919050565b60006127e882612175565b91506127f3836127d0565b92506128207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846126fd565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061286282612175565b915061286d83612175565b92508261287d5761287c612828565b5b828206905092915050565b600061289382612175565b915061289e83612175565b92508282026128ac81612175565b915082820484148315176128c3576128c261266e565b5b5092915050565b60006128d582612175565b91506128e083612175565b9250826128f0576128ef612828565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000612922826128fb565b61292c8185612906565b935061293c8185602086016120df565b61294581612109565b840191505092915050565b6000608082019050612965600083018761220a565b612972602083018661220a565b61297f60408301856122a0565b81810360608301526129918184612917565b905095945050505050565b6000815190506129ab81612034565b92915050565b6000602082840312156129c7576129c6611ffe565b5b60006129d58482850161299c565b91505092915050565b60006129e982612175565b91506129f483612175565b9250828203905081811115612a0c57612a0b61266e565b5b92915050565b6000612a1d82612175565b9150612a2883612175565b9250828201905080821115612a4057612a3f61266e565b5b92915050565b6000612a5182612175565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a8357612a8261266e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2fa26469706673582212202f39e6deea4d19750a4df0714f32daa84229bb1164a638c9907e1e222ffbd2e564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA22CB465 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xD993226B EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xDB3AD22C EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xE29301F9 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xEFF0730D EQ PUSH2 0x479 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xC29DBCCA EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x37D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C7 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x231D JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x231D JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x22AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x574 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x584 JUMPI POP PUSH2 0x583 DUP3 PUSH2 0x10BC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x59A SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x613 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x613 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x628 DUP3 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A4 DUP3 PUSH2 0x855 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x72A PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78D JUMPI PUSH2 0x756 DUP2 PUSH2 0x751 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x798 DUP4 DUP4 DUP4 PUSH2 0x117C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A7 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BF DUP4 DUP4 DUP4 PUSH2 0x1233 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7DF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB43 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x3 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x824 PUSH23 0xA70C3C40A64E6C51999090B65F67D9240000000000000 PUSH1 0x2 SLOAD PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x831 DUP5 PUSH2 0xF15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x848 DUP3 DUP5 PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x860 DUP3 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x949 SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x975 SWAP1 PUSH2 0x25DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x997 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA38 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 PUSH2 0xA45 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF2 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB4E DUP5 DUP5 DUP5 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0xB6D DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C86 JUMP JUMPDEST ISZERO PUSH2 0xBB5 JUMPI PUSH2 0xB7E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC22 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC80 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8D NUMBER PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCC9 PUSH1 0x2 PUSH2 0xCBB DUP7 PUSH2 0xCAD DUP7 DUP9 PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD45 PUSH1 0x4 SLOAD PUSH2 0xD37 PUSH1 0xE PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDAB DUP2 PUSH1 0xE PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDCF PUSH1 0x3 SLOAD NUMBER PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDDE PUSH1 0x3 SLOAD PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDEB NUMBER PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE27 PUSH1 0x2 PUSH2 0xE19 DUP7 PUSH2 0xE0B DUP7 DUP9 PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD LT PUSH2 0xE52 JUMPI PUSH2 0xE47 DUP2 PUSH1 0x1 SLOAD PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x0 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE6B DUP3 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB PUSH2 0x1E25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEF6 JUMP JUMPDEST DUP1 PUSH2 0xED5 DUP5 PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEE6 SWAP3 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF08 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF47 PUSH1 0x3 SLOAD PUSH2 0xF39 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF95 DUP4 PUSH2 0xF87 PUSH1 0x0 SLOAD DUP7 PUSH2 0x19CF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA DUP3 PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST SUB PUSH2 0xFB4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1131 PUSH2 0x122E JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1140 JUMPI POP PUSH1 0x5 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0x116D JUMPI POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP3 PUSH2 0xF6B JUMP JUMPDEST SWAP1 POP PUSH2 0x1249 DUP5 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1302 DUP2 PUSH1 0xE PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1DF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13B6 DUP4 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x146F DUP2 PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1E0F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1525 DUP4 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1590 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15B1 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x15E0 JUMPI POP PUSH2 0x15DF DUP7 PUSH2 0x15DA PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1625 JUMPI POP PUSH2 0x15EE PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x160D DUP6 PUSH2 0x61D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x165E JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16D1 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x16DD PUSH1 0x0 DUP6 DUP9 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195C JUMPI PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x195B JUMPI DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19C7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1FAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19DD SWAP2 SWAP1 PUSH2 0x2888 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19F3 SWAP2 SWAP1 PUSH2 0x28CA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A03 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1A11 PUSH2 0x122E JUMP JUMPDEST GT PUSH2 0x1C4F JUMPI PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1C4C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B30 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1C81 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1C4B JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C46 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1C81 JUMP JUMPDEST PUSH2 0x1B31 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1CCF PUSH2 0x1174 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2950 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D2D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D2A SWAP2 SWAP1 PUSH2 0x29B1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DA6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D5D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1D9E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E07 SWAP2 SWAP1 PUSH2 0x29DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E1D SWAP2 SWAP1 PUSH2 0x2A12 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2ABE PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1E8C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1EBE JUMPI DUP1 DUP1 PUSH2 0x1EA7 SWAP1 PUSH2 0x2A46 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1EB7 SWAP2 SWAP1 PUSH2 0x28CA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EDA JUMPI PUSH2 0x1ED9 PUSH2 0x23C0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F0C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1F99 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1F25 SWAP2 SWAP1 PUSH2 0x29DE JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1F34 SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1F40 SWAP2 SWAP1 PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F56 JUMPI PUSH2 0x1F55 PUSH2 0x2A8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1F92 SWAP2 SWAP1 PUSH2 0x28CA JUMP JUMPDEST SWAP5 POP PUSH2 0x1F10 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203D DUP2 PUSH2 0x2008 JUMP JUMPDEST DUP2 EQ PUSH2 0x2048 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x205A DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2084 DUP5 DUP3 DUP6 ADD PUSH2 0x204B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A2 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20FD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2125 DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x212F DUP2 DUP6 PUSH2 0x20CE JUMP JUMPDEST SWAP4 POP PUSH2 0x213F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x2109 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x216D DUP2 DUP5 PUSH2 0x211A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2188 DUP2 PUSH2 0x2175 JUMP JUMPDEST DUP2 EQ PUSH2 0x2193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21A5 DUP2 PUSH2 0x217F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x21C0 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21CF DUP5 DUP3 DUP6 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2203 DUP3 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2213 DUP2 PUSH2 0x21F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x222E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x220A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x223D DUP2 PUSH2 0x21F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225A DUP2 PUSH2 0x2234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2277 JUMPI PUSH2 0x2276 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2285 DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2296 DUP6 DUP3 DUP7 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A9 DUP2 PUSH2 0x2175 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x22E2 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22F1 DUP7 DUP3 DUP8 ADD PUSH2 0x224B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2302 DUP7 DUP3 DUP8 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2313 DUP7 DUP3 DUP8 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH2 0x2332 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2341 DUP5 DUP3 DUP6 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2353 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP2 EQ PUSH2 0x235E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2370 DUP2 PUSH2 0x234A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x239B DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23AC DUP6 DUP3 DUP7 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23F8 DUP3 PUSH2 0x2109 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2417 JUMPI PUSH2 0x2416 PUSH2 0x23C0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242A PUSH2 0x1FF4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2436 DUP3 DUP3 PUSH2 0x23EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2456 JUMPI PUSH2 0x2455 PUSH2 0x23C0 JUMP JUMPDEST JUMPDEST PUSH2 0x245F DUP3 PUSH2 0x2109 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248E PUSH2 0x2489 DUP5 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2420 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24AA JUMPI PUSH2 0x24A9 PUSH2 0x23BB JUMP JUMPDEST JUMPDEST PUSH2 0x24B5 DUP5 DUP3 DUP6 PUSH2 0x246C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x23B6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x247B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2505 JUMPI PUSH2 0x2504 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2513 DUP8 DUP3 DUP9 ADD PUSH2 0x224B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2524 DUP8 DUP3 DUP9 ADD PUSH2 0x224B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2535 DUP8 DUP3 DUP9 ADD PUSH2 0x2196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2556 JUMPI PUSH2 0x2555 PUSH2 0x2003 JUMP JUMPDEST JUMPDEST PUSH2 0x2562 DUP8 DUP3 DUP9 ADD PUSH2 0x24BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2585 JUMPI PUSH2 0x2584 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2593 DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A4 DUP6 DUP3 DUP7 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x25AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP3 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x262E DUP2 DUP6 PUSH2 0x260E JUMP JUMPDEST SWAP4 POP PUSH2 0x263E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2656 DUP3 DUP6 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP PUSH2 0x2662 DUP3 DUP5 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x26F4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x26D0 JUMPI PUSH2 0x26CF PUSH2 0x266E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x26DF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x26ED DUP6 PUSH2 0x269D JUMP JUMPDEST SWAP5 POP PUSH2 0x26B4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x270D JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x27C9 JUMP JUMPDEST DUP2 PUSH2 0x271B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27C9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2731 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x273B JUMPI PUSH2 0x276A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x27C9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x274D JUMPI PUSH2 0x274C PUSH2 0x266E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2764 JUMPI PUSH2 0x2763 PUSH2 0x266E JUMP JUMPDEST JUMPDEST POP PUSH2 0x27C9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x279F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x279A JUMPI PUSH2 0x2799 PUSH2 0x266E JUMP JUMPDEST JUMPDEST PUSH2 0x27C9 JUMP JUMPDEST PUSH2 0x27AC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x26AA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x27C3 JUMPI PUSH2 0x27C2 PUSH2 0x266E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E8 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x27F3 DUP4 PUSH2 0x27D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x2820 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x26FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2862 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x286D DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x287D JUMPI PUSH2 0x287C PUSH2 0x2828 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2893 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x289E DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x28AC DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x28C3 JUMPI PUSH2 0x28C2 PUSH2 0x266E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D5 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E0 DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x28F0 JUMPI PUSH2 0x28EF PUSH2 0x2828 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2922 DUP3 PUSH2 0x28FB JUMP JUMPDEST PUSH2 0x292C DUP2 DUP6 PUSH2 0x2906 JUMP JUMPDEST SWAP4 POP PUSH2 0x293C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DF JUMP JUMPDEST PUSH2 0x2945 DUP2 PUSH2 0x2109 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2965 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x220A JUMP JUMPDEST PUSH2 0x2972 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x220A JUMP JUMPDEST PUSH2 0x297F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22A0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2991 DUP2 DUP5 PUSH2 0x2917 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29AB DUP2 PUSH2 0x2034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C7 JUMPI PUSH2 0x29C6 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29D5 DUP5 DUP3 DUP6 ADD PUSH2 0x299C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E9 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F4 DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x266E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1D DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A28 DUP4 PUSH2 0x2175 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x266E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A51 DUP3 PUSH2 0x2175 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2A83 JUMPI PUSH2 0x2A82 PUSH2 0x266E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D654E373753715459457258644D5134684C CALLVALUE BALANCE PUSH3 0x316661 SELFBALANCE PUSH25 0x414B7434515741354E475646755A753978486E2FA264697066 PUSH20 0x582212202F39E6DEEA4D19750A4DF0714F32DAA8 TIMESTAMP 0x29 0xBB GT PUSH5 0xA638C9907E 0x1E 0x22 0x2F 0xFB 0xD2 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1033:24307:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6697:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9813:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11408:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10970:372;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5408:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12273:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12514:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4100:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9621:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7066:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9982:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11684:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12770:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3479:550;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2898:565;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10157:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5885:164;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4521:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5730:145;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4774:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12042:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6066:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6697:305;6799:4;6851:25;6836:40;;;:11;:40;;;;:105;;;;6908:33;6893:48;;;:11;:48;;;;6836:105;:158;;;;6958:36;6982:11;6958:23;:36::i;:::-;6836:158;6816:178;;6697:305;;;:::o;9813:100::-;9867:13;9900:5;9893:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9813:100;:::o;11408:204::-;11476:7;11501:16;11509:7;11501;:16::i;:::-;11496:64;;11526:34;;;;;;;;;;;;;;11496:64;11580:15;:24;11596:7;11580:24;;;;;;;;;;;;;;;;;;;;;11573:31;;11408:204;;;:::o;10970:372::-;11043:13;11059:24;11075:7;11059:15;:24::i;:::-;11043:40;;11104:5;11098:11;;:2;:11;;;11094:48;;11118:24;;;;;;;;;;;;;;11094:48;11175:5;11159:21;;:12;:10;:12::i;:::-;:21;;;11155:139;;11186:37;11203:5;11210:12;:10;:12::i;:::-;11186:16;:37::i;:::-;11182:112;;11247:35;;;;;;;;;;;;;;11182:112;11155:139;11306:28;11315:2;11319:7;11328:5;11306:8;:28::i;:::-;11032:310;10970:372;;:::o;5408:312::-;5461:7;5686:15;:13;:15::i;:::-;5671:12;;5655:13;;:28;:46;5648:53;;5408:312;:::o;12273:170::-;12407:28;12417:4;12423:2;12427:7;12407:9;:28::i;:::-;12273:170;;;:::o;12514:185::-;12652:39;12669:4;12675:2;12679:7;12652:39;;;;;;;;;;;;:16;:39::i;:::-;12514:185;;;:::o;4100:411::-;4173:7;4210:17;;4195:12;:32;4192:95;;;4258:17;;4243:32;;4192:95;4297:19;4319:24;4338:4;4319:14;;:18;;:24;;;;:::i;:::-;4297:46;;4365:22;4390:23;4400:12;4390:9;:23::i;:::-;4365:48;;4429:13;4445:31;4461:14;4445:11;:15;;:31;;;;:::i;:::-;4429:47;;4494:5;4487:12;;;;;4100:411;;;:::o;9621:125::-;9685:7;9712:21;9725:7;9712:12;:21::i;:::-;:26;;;9705:33;;9621:125;;;:::o;7066:206::-;7130:7;7171:1;7154:19;;:5;:19;;;7150:60;;7182:28;;;;;;;;;;;;;;7150:60;7236:12;:19;7249:5;7236:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;7228:36;;7221:43;;7066:206;;;:::o;9982:104::-;10038:13;10071:7;10064:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9982:104;:::o;11684:287::-;11795:12;:10;:12::i;:::-;11783:24;;:8;:24;;;11779:54;;11816:17;;;;;;;;;;;;;;11779:54;11891:8;11846:18;:32;11865:12;:10;:12::i;:::-;11846:32;;;;;;;;;;;;;;;:42;11879:8;11846:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;11944:8;11915:48;;11930:12;:10;:12::i;:::-;11915:48;;;11954:8;11915:48;;;;;;:::i;:::-;;;;;;;;11684:287;;:::o;12770:370::-;12937:28;12947:4;12953:2;12957:7;12937:9;:28::i;:::-;12980:15;:2;:13;;;:15::i;:::-;12976:157;;;13001:56;13032:4;13038:2;13042:7;13051:5;13001:30;:56::i;:::-;12997:136;;13081:40;;;;;;;;;;;;;;12997:136;12976:157;12770:370;;;;:::o;3479:550::-;3541:7;3566:18;3587:36;3604:9;:15;3614:4;3604:15;;;;;;;;;;;;;;;:18;3620:1;3604:18;;;;;;;;;;;;3587:12;:16;;:36;;;;:::i;:::-;3566:57;;3634:13;3650:31;3662:9;:15;3672:4;3662:15;;;;;;;;;;;;;;;:18;3678:1;3662:18;;;;;;;;;;;;3650:11;:31::i;:::-;3634:47;;3692:11;3706:25;3718:12;3706:11;:25::i;:::-;3692:39;;3742:18;3763:37;3798:1;3763:30;3782:10;3763:14;3773:3;3763:5;:9;;:14;;;;:::i;:::-;:18;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;3742:58;;3893:15;3911:51;3950:11;;3911:34;3926:9;:15;3936:4;3926:15;;;;;;;;;;;;;;;:18;3942:1;3926:18;;;;;;;;;;;;3911:10;:14;;:34;;;;:::i;:::-;:38;;:51;;;;:::i;:::-;3893:69;;3980:34;4003:10;3980:9;:15;3990:4;3980:15;;;;;;;;;;;;;;;:18;3996:1;3980:18;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;3973:41;;;;;;;3479:550;;;:::o;2898:565::-;2971:7;2990:18;3011:35;3028:17;;3011:12;:16;;:35;;;;:::i;:::-;2990:56;;3057:13;3073:30;3085:17;;3073:11;:30::i;:::-;3057:46;;3114:11;3128:25;3140:12;3128:11;:25::i;:::-;3114:39;;3164:18;3185:37;3220:1;3185:30;3204:10;3185:14;3195:3;3185:5;:9;;:14;;;;:::i;:::-;:18;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;3164:58;;3325:10;3312:9;;:23;3309:135;;3359:25;3373:10;3359:9;;:13;;:25;;;;:::i;:::-;3352:32;;;;;;;;3309:135;3430:1;3415:17;;;;;;2898:565;;;;:::o;10157:318::-;10230:13;10261:16;10269:7;10261;:16::i;:::-;10256:59;;10286:29;;;;;;;;;;;;;;10256:59;10328:21;10352:10;:8;:10::i;:::-;10328:34;;10405:1;10386:7;10380:21;:26;:87;;;;;;;;;;;;;;;;;10433:7;10442:18;:7;:16;:18::i;:::-;10416:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10380:87;10373:94;;;10157:318;;;:::o;5885:164::-;5928:7;6015:15;:13;:15::i;:::-;6000:12;;5987:10;;:25;:43;5980:50;;5885:164;:::o;4521:234::-;4588:7;4607:19;4627:45;4654:17;;4627:22;4644:4;4627:12;:16;;:22;;;;:::i;:::-;:26;;:45;;;;:::i;:::-;4607:65;;4714:1;4698:14;:17;;;;:::i;:::-;4683:32;;4733:14;4726:21;;;4521:234;;;:::o;5730:145::-;5774:7;5845:11;;5838:18;;5730:145;:::o;4774:292::-;4842:7;4871:14;4888:31;4911:7;4888:18;4900:5;;4888:7;:11;;:18;;;;:::i;:::-;:22;;:31;;;;:::i;:::-;4871:48;;4947:1;4941:2;4934:6;:9;;;;:::i;:::-;:14;4931:104;;4973:1;4964:10;;4931:104;;;5021:2;5014:6;:9;;;;:::i;:::-;5005:18;;4931:104;5052:6;5045:13;;;4774:292;;;:::o;12042:164::-;12139:4;12163:18;:25;12182:5;12163:25;;;;;;;;;;;;;;;:35;12189:8;12163:35;;;;;;;;;;;;;;;;;;;;;;;;;12156:42;;12042:164;;;;:::o;6066:171::-;6136:7;6195:9;:15;6205:4;6195:15;;;;;;;;;;;;;;;:23;6211:6;6195:23;;;;;;;;;;;;6188:30;;6066:171;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13354:174:9:-;13411:4;13454:7;13435:15;:13;:15::i;:::-;:26;;:53;;;;;13475:13;;13465:7;:23;13435:53;:85;;;;;13493:11;:20;13505:7;13493:20;;;;;;;;;;;:27;;;;;;;;;;;;13492:28;13435:85;13428:92;;13354:174;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;22358:196:9:-;22500:2;22473:15;:24;22489:7;22473:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;22538:7;22534:2;22518:28;;22527:5;22518:28;;;;;;;;;;;;22358:196;;;:::o;5182:92::-;5238:7;5182:92;:::o;16586:2528::-;16705:19;16727:21;16740:7;16727:12;:21::i;:::-;16705:43;;16788:16;16799:4;16788:10;:16::i;:::-;16767:9;:15;16777:4;16767:15;;;;;;;;;;;;;;;:18;16783:1;16767:18;;;;;;;;;;;:37;;;;16836:35;16859:11;16836:9;:15;16846:4;16836:15;;;;;;;;;;;;;;;:18;16852:1;16836:18;;;;;;;;;;;;:22;;:35;;;;:::i;:::-;16815:9;:15;16825:4;16815:15;;;;;;;;;;;;;;;:18;16831:1;16815:18;;;;;;;;;;;:56;;;;16903:12;16882:9;:15;16892:4;16882:15;;;;;;;;;;;;;;;:18;16898:1;16882:18;;;;;;;;;;;:33;;;;16945:14;16956:2;16945:10;:14::i;:::-;16926:9;:13;16936:2;16926:13;;;;;;;;;;;;;;;:16;16940:1;16926:16;;;;;;;;;;;:33;;;;16989;17010:11;16989:9;:13;16999:2;16989:13;;;;;;;;;;;;;;;:16;17003:1;16989:16;;;;;;;;;;;;:20;;:33;;;;:::i;:::-;16970:9;:13;16980:2;16970:13;;;;;;;;;;;;;;;:16;16984:1;16970:16;;;;;;;;;;;:52;;;;17052:12;17033:9;:13;17043:2;17033:13;;;;;;;;;;;;;;;:16;17047:1;17033:16;;;;;;;;;;;:31;;;;17099:35;17137:21;17150:7;17137:12;:21::i;:::-;17099:59;;17197:4;17175:26;;:13;:18;;;:26;;;17171:67;;17210:28;;;;;;;;;;;;;;17171:67;17251:22;17293:4;17277:20;;:12;:10;:12::i;:::-;:20;;;:73;;;;17314:36;17331:4;17337:12;:10;:12::i;:::-;17314:16;:36::i;:::-;17277:73;:126;;;;17391:12;:10;:12::i;:::-;17367:36;;:20;17379:7;17367:11;:20::i;:::-;:36;;;17277:126;17251:153;;17422:17;17417:66;;17448:35;;;;;;;;;;;;;;17417:66;17512:1;17498:16;;:2;:16;;;17494:52;;17523:23;;;;;;;;;;;;;;17494:52;17559:43;17581:4;17587:2;17591:7;17600:1;17559:21;:43::i;:::-;17667:35;17684:1;17688:7;17697:4;17667:8;:35::i;:::-;18028:1;17998:12;:18;18011:4;17998:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18072:1;18044:12;:16;18057:2;18044:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18090:31;18124:11;:20;18136:7;18124:20;;;;;;;;;;;18090:54;;18175:2;18159:8;:13;;;:18;;;;;;;;;;;;;;;;;;18225:15;18192:8;:23;;;:49;;;;;;;;;;;;;;;;;;18493:19;18525:1;18515:7;:11;18493:33;;18541:31;18575:11;:24;18587:11;18575:24;;;;;;;;;;;18541:58;;18643:1;18618:27;;:8;:13;;;;;;;;;;;;:27;;;18614:384;;18828:13;;18813:11;:28;18809:174;;18882:4;18866:8;:13;;;:20;;;;;;;;;;;;;;;;;;18935:13;:28;;;18909:8;:23;;;:54;;;;;;;;;;;;;;;;;;18809:174;18614:384;17973:1036;;;19045:7;19041:2;19026:27;;19035:4;19026:27;;;;;;;;;;;;19064:42;19085:4;19091:2;19095:7;19104:1;19064:20;:42::i;:::-;16690:2424;;;16586:2528;;;:::o;3465:96:8:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;8448:1111:9:-;8510:21;;:::i;:::-;8544:12;8559:7;8544:22;;8627:4;8608:15;:13;:15::i;:::-;:23;8604:888;;8644:13;;8637:4;:20;8633:859;;;8678:31;8712:11;:17;8724:4;8712:17;;;;;;;;;;;8678:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8753:9;:16;;;8748:729;;8824:1;8798:28;;:9;:14;;;:28;;;8794:101;;8862:9;8855:16;;;;;;8794:101;9197:261;9204:4;9197:261;;;9237:6;;;;;;;;9282:11;:17;9294:4;9282:17;;;;;;;;;;;9270:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:1;9330:28;;:9;:14;;;:28;;;9326:109;;9398:9;9391:16;;;;;;9326:109;9197:261;;;8748:729;8659:833;8633:859;8604:888;9520:31;;;;;;;;;;;;;;8448:1111;;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;23046:667:9:-;23209:4;23246:2;23230:36;;;23267:12;:10;:12::i;:::-;23281:4;23287:7;23296:5;23230:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;23226:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23481:1;23464:6;:13;:18;23460:235;;23510:40;;;;;;;;;;;;;;23460:235;23653:6;23647:13;23638:6;23634:2;23630:15;23623:38;23226:480;23359:45;;;23349:55;;;:6;:55;;;;23342:62;;;23046:667;;;;;;:::o;3122:96:8:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;10723:185:9:-;10774:13;10800:90;;;;;;;;;;;;;;;;;;;10723:185;:::o;392:703:5:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;24361:159:9:-;;;;;:::o;25179:158::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:180::-;12022:77;12019:1;12012:88;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12160:102;12202:8;12249:5;12246:1;12242:13;12221:34;;12160:102;;;:::o;12268:848::-;12329:5;12336:4;12360:6;12351:15;;12384:5;12375:14;;12398:712;12419:1;12409:8;12406:15;12398:712;;;12514:4;12509:3;12505:14;12499:4;12496:24;12493:50;;;12523:18;;:::i;:::-;12493:50;12573:1;12563:8;12559:16;12556:451;;;12988:4;12981:5;12977:16;12968:25;;12556:451;13038:4;13032;13028:15;13020:23;;13068:32;13091:8;13068:32;:::i;:::-;13056:44;;12398:712;;;12268:848;;;;;;;:::o;13122:1073::-;13176:5;13367:8;13357:40;;13388:1;13379:10;;13390:5;;13357:40;13416:4;13406:36;;13433:1;13424:10;;13435:5;;13406:36;13502:4;13550:1;13545:27;;;;13586:1;13581:191;;;;13495:277;;13545:27;13563:1;13554:10;;13565:5;;;13581:191;13626:3;13616:8;13613:17;13610:43;;;13633:18;;:::i;:::-;13610:43;13682:8;13679:1;13675:16;13666:25;;13717:3;13710:5;13707:14;13704:40;;;13724:18;;:::i;:::-;13704:40;13757:5;;;13495:277;;13881:2;13871:8;13868:16;13862:3;13856:4;13853:13;13849:36;13831:2;13821:8;13818:16;13813:2;13807:4;13804:12;13800:35;13784:111;13781:246;;;13937:8;13931:4;13927:19;13918:28;;13972:3;13965:5;13962:14;13959:40;;;13979:18;;:::i;:::-;13959:40;14012:5;;13781:246;14052:42;14090:3;14080:8;14074:4;14071:1;14052:42;:::i;:::-;14037:57;;;;14126:4;14121:3;14117:14;14110:5;14107:25;14104:51;;;14135:18;;:::i;:::-;14104:51;14184:4;14177:5;14173:16;14164:25;;13122:1073;;;;;;:::o;14201:86::-;14236:7;14276:4;14269:5;14265:16;14254:27;;14201:86;;;:::o;14293:281::-;14351:5;14375:23;14393:4;14375:23;:::i;:::-;14367:31;;14419:25;14435:8;14419:25;:::i;:::-;14407:37;;14463:104;14500:66;14490:8;14484:4;14463:104;:::i;:::-;14454:113;;14293:281;;;;:::o;14580:180::-;14628:77;14625:1;14618:88;14725:4;14722:1;14715:15;14749:4;14746:1;14739:15;14766:176;14798:1;14815:20;14833:1;14815:20;:::i;:::-;14810:25;;14849:20;14867:1;14849:20;:::i;:::-;14844:25;;14888:1;14878:35;;14893:18;;:::i;:::-;14878:35;14934:1;14931;14927:9;14922:14;;14766:176;;;;:::o;14948:410::-;14988:7;15011:20;15029:1;15011:20;:::i;:::-;15006:25;;15045:20;15063:1;15045:20;:::i;:::-;15040:25;;15100:1;15097;15093:9;15122:30;15140:11;15122:30;:::i;:::-;15111:41;;15301:1;15292:7;15288:15;15285:1;15282:22;15262:1;15255:9;15235:83;15212:139;;15331:18;;:::i;:::-;15212:139;14996:362;14948:410;;;;:::o;15364:185::-;15404:1;15421:20;15439:1;15421:20;:::i;:::-;15416:25;;15455:20;15473:1;15455:20;:::i;:::-;15450:25;;15494:1;15484:35;;15499:18;;:::i;:::-;15484:35;15541:1;15538;15534:9;15529:14;;15364:185;;;;:::o;15555:98::-;15606:6;15640:5;15634:12;15624:22;;15555:98;;;:::o;15659:168::-;15742:11;15776:6;15771:3;15764:19;15816:4;15811:3;15807:14;15792:29;;15659:168;;;;:::o;15833:373::-;15919:3;15947:38;15979:5;15947:38;:::i;:::-;16001:70;16064:6;16059:3;16001:70;:::i;:::-;15994:77;;16080:65;16138:6;16133:3;16126:4;16119:5;16115:16;16080:65;:::i;:::-;16170:29;16192:6;16170:29;:::i;:::-;16165:3;16161:39;16154:46;;15923:283;15833:373;;;;:::o;16212:640::-;16407:4;16445:3;16434:9;16430:19;16422:27;;16459:71;16527:1;16516:9;16512:17;16503:6;16459:71;:::i;:::-;16540:72;16608:2;16597:9;16593:18;16584:6;16540:72;:::i;:::-;16622;16690:2;16679:9;16675:18;16666:6;16622:72;:::i;:::-;16741:9;16735:4;16731:20;16726:2;16715:9;16711:18;16704:48;16769:76;16840:4;16831:6;16769:76;:::i;:::-;16761:84;;16212:640;;;;;;;:::o;16858:141::-;16914:5;16945:6;16939:13;16930:22;;16961:32;16987:5;16961:32;:::i;:::-;16858:141;;;;:::o;17005:349::-;17074:6;17123:2;17111:9;17102:7;17098:23;17094:32;17091:119;;;17129:79;;:::i;:::-;17091:119;17249:1;17274:63;17329:7;17320:6;17309:9;17305:22;17274:63;:::i;:::-;17264:73;;17220:127;17005:349;;;;:::o;17360:194::-;17400:4;17420:20;17438:1;17420:20;:::i;:::-;17415:25;;17454:20;17472:1;17454:20;:::i;:::-;17449:25;;17498:1;17495;17491:9;17483:17;;17522:1;17516:4;17513:11;17510:37;;;17527:18;;:::i;:::-;17510:37;17360:194;;;;:::o;17560:191::-;17600:3;17619:20;17637:1;17619:20;:::i;:::-;17614:25;;17653:20;17671:1;17653:20;:::i;:::-;17648:25;;17696:1;17693;17689:9;17682:16;;17717:3;17714:1;17711:10;17708:36;;;17724:18;;:::i;:::-;17708:36;17560:191;;;;:::o;17757:233::-;17796:3;17819:24;17837:5;17819:24;:::i;:::-;17810:33;;17865:66;17858:5;17855:77;17852:103;;17935:18;;:::i;:::-;17852:103;17982:1;17975:5;17971:13;17964:20;;17757:233;;;:::o;17996:180::-;18044:77;18041:1;18034:88;18141:4;18138:1;18131:15;18165:4;18162:1;18155:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2215200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MineStatus(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "3035",
								"blockStatus(uint256)": "infinite",
								"difficult(uint256)": "infinite",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "4598",
								"mineInfo(address,uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenIDPower(uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalDugUp(uint256)": "infinite",
								"totalPower()": "2503",
								"totalSupply()": "4688",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4499",
								"_getAux(address)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "15",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2490,
									"end": 2884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2603,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2595,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2590,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2631,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2621,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2614,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2631,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2655,
									"end": 2660,
									"name": "PUSH",
									"source": 9,
									"value": "2710"
								},
								{
									"begin": 2642,
									"end": 2652,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2642,
									"end": 2660,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2660,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2660,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2687,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2687,
									"end": 2700,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2687,
									"end": 2700,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2702,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2687,
									"end": 2702,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2702,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2687,
									"end": 2702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2671,
									"end": 2684,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2671,
									"end": 2702,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2671,
									"end": 2702,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2671,
									"end": 2702,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2671,
									"end": 2702,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2722,
									"end": 2727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2714,
									"end": 2719,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2714,
									"end": 2727,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2714,
									"end": 2727,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2714,
									"end": 2727,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2714,
									"end": 2727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2758,
									"end": 2763,
									"name": "PUSH",
									"source": 9,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 2741,
									"end": 2755,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2741,
									"end": 2763,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2763,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2763,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2763,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2791,
									"end": 2796,
									"name": "PUSH",
									"source": 9,
									"value": "B3B0"
								},
								{
									"begin": 2777,
									"end": 2788,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2777,
									"end": 2796,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 2796,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 2796,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 2796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2827,
									"end": 2839,
									"name": "NUMBER",
									"source": 9
								},
								{
									"begin": 2807,
									"end": 2824,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2807,
									"end": 2839,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2807,
									"end": 2839,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2807,
									"end": 2839,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2807,
									"end": 2839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2863,
									"end": 2872,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 2860,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2851,
									"end": 2872,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 2872,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 2872,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 2872,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2490,
									"end": 2884,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5274,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 5182,
									"end": 5274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5238,
									"end": 5245,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5182,
									"end": 5274,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3154,
									"end": 3160,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3168,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3170,
									"end": 3176,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3184,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3215,
									"end": 3224,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3206,
									"end": 3213,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3198,
									"end": 3231,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3234,
									"end": 3313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3375,
									"end": 3376,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3360,
									"end": 3377,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3354,
									"end": 3378,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3405,
									"end": 3423,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3397,
									"end": 3403,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3394,
									"end": 3424,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3427,
									"end": 3506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3598,
									"end": 3605,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3589,
									"end": 3595,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3578,
									"end": 3587,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3574,
									"end": 3596,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3532,
									"end": 3606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3606,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3606,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3325,
									"end": 3616,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3676,
									"end": 3678,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3661,
									"end": 3679,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3655,
									"end": 3680,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3707,
									"end": 3725,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3699,
									"end": 3705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3696,
									"end": 3726,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3729,
									"end": 3808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3900,
									"end": 3907,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3891,
									"end": 3897,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3880,
									"end": 3889,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3876,
									"end": 3898,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3834,
									"end": 3908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3824,
									"end": 3908,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3824,
									"end": 3908,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3626,
									"end": 3918,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3957,
									"end": 3959,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4039,
									"end": 4046,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4030,
									"end": 4036,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4019,
									"end": 4028,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3983,
									"end": 4047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3973,
									"end": 4047,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3973,
									"end": 4047,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3928,
									"end": 4057,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4096,
									"end": 4098,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4178,
									"end": 4185,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 4169,
									"end": 4175,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4158,
									"end": 4167,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4154,
									"end": 4176,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4122,
									"end": 4186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4112,
									"end": 4186,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4112,
									"end": 4186,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4067,
									"end": 4196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4203,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4267,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4295,
									"end": 4300,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4289,
									"end": 4301,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4279,
									"end": 4301,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4279,
									"end": 4301,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4209,
									"end": 4308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4314,
									"end": 4494,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4314,
									"end": 4494,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4362,
									"end": 4439,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4359,
									"end": 4360,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4352,
									"end": 4440,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4459,
									"end": 4463,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4456,
									"end": 4457,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4449,
									"end": 4464,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4480,
									"end": 4481,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4473,
									"end": 4488,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4544,
									"end": 4550,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4581,
									"end": 4582,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4575,
									"end": 4579,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4571,
									"end": 4583,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4583,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4583,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4628,
									"end": 4629,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4622,
									"end": 4626,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4618,
									"end": 4630,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4649,
									"end": 4667,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4705,
									"end": 4709,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4697,
									"end": 4703,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4693,
									"end": 4710,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4683,
									"end": 4710,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4683,
									"end": 4710,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4767,
									"end": 4769,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4759,
									"end": 4765,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4756,
									"end": 4770,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4771,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4786,
									"end": 4804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4551,
									"end": 4820,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4500,
									"end": 4820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4875,
									"end": 4879,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4898,
									"end": 4901,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4890,
									"end": 4901,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4890,
									"end": 4901,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 4924,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4918,
									"end": 4919,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4911,
									"end": 4925,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4955,
									"end": 4959,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4952,
									"end": 4953,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4960,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4934,
									"end": 4960,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4934,
									"end": 4960,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4826,
									"end": 4967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5010,
									"end": 5016,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5057,
									"end": 5059,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5052,
									"end": 5054,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5045,
									"end": 5050,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5055,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5037,
									"end": 5060,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5060,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5060,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4973,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5116,
									"end": 5124,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5166,
									"end": 5171,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5160,
									"end": 5164,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5156,
									"end": 5172,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 5135,
									"end": 5172,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5135,
									"end": 5172,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5072,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5254,
									"end": 5260,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5304,
									"end": 5305,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5292,
									"end": 5302,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5288,
									"end": 5306,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5357,
									"end": 5423,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5346,
									"end": 5355,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5327,
									"end": 5424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5475,
									"end": 5483,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5445,
									"end": 5484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5433,
									"end": 5484,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5433,
									"end": 5484,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5517,
									"end": 5521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5506,
									"end": 5511,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5502,
									"end": 5523,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5523,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5493,
									"end": 5523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5566,
									"end": 5570,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5556,
									"end": 5564,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5552,
									"end": 5571,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5545,
									"end": 5550,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5542,
									"end": 5572,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5532,
									"end": 5572,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5532,
									"end": 5572,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5261,
									"end": 5578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5261,
									"end": 5578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5185,
									"end": 5578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5612,
									"end": 5615,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5633,
									"end": 5638,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5626,
									"end": 5638,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5626,
									"end": 5638,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5584,
									"end": 5644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5700,
									"end": 5709,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5778,
									"end": 5783,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 5760,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5751,
									"end": 5785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 5733,
									"end": 5786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5786,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5786,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5792,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5841,
									"end": 5844,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5862,
									"end": 5867,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5855,
									"end": 5867,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5855,
									"end": 5867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5798,
									"end": 5873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 6020,
									"end": 6027,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5989,
									"end": 6028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6123,
									"end": 6139,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 6099,
									"end": 6140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6091,
									"end": 6097,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6084,
									"end": 6088,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6078,
									"end": 6089,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 6050,
									"end": 6141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6044,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6037,
									"end": 6142,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 6148,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5879,
									"end": 6148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6227,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6154,
									"end": 6227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6199,
									"end": 6202,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6154,
									"end": 6227,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6310,
									"end": 6342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6409,
									"end": 6415,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6401,
									"end": 6407,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6395,
									"end": 6399,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6351,
									"end": 6416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6286,
									"end": 6422,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6233,
									"end": 6422,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6505,
									"end": 6508,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6498,
									"end": 6503,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6509,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6596,
									"end": 6597,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6589,
									"end": 6594,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6559,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6533,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6525,
									"end": 6530,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6521,
									"end": 6534,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6512,
									"end": 6534,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6512,
									"end": 6534,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6428,
									"end": 6614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6721,
									"end": 6723,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6713,
									"end": 6724,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 6787,
									"end": 6792,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 6755,
									"end": 6793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 6857,
									"end": 6867,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 6839,
									"end": 6868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6829,
									"end": 6837,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6825,
									"end": 6869,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7022,
									"end": 7024,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7010,
									"end": 7020,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7007,
									"end": 7025,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7043,
									"end": 7051,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7051,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7028,
									"end": 7051,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7140,
									"end": 7143,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 7122,
									"end": 7144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7112,
									"end": 7120,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7108,
									"end": 7145,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7095,
									"end": 7106,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 7066,
									"end": 7146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 7156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6725,
									"end": 7156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6620,
									"end": 7163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7223,
									"end": 7231,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7278,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7267,
									"end": 7271,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7263,
									"end": 7279,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7242,
									"end": 7279,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7242,
									"end": 7279,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7169,
									"end": 7286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7336,
									"end": 7342,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7417,
									"end": 7418,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7413,
									"end": 7419,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7405,
									"end": 7410,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7402,
									"end": 7403,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7398,
									"end": 7411,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7369,
									"end": 7420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7365,
									"end": 7421,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7450,
									"end": 7454,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7440,
									"end": 7455,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7430,
									"end": 7455,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7430,
									"end": 7455,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7343,
									"end": 7461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7292,
									"end": 7461,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7542,
									"end": 7546,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7713,
									"end": 7716,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7688,
									"end": 7717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7680,
									"end": 7717,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7680,
									"end": 7717,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 7753,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7747,
									"end": 7748,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7743,
									"end": 7754,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7737,
									"end": 7741,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7755,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7726,
									"end": 7755,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7726,
									"end": 7755,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7466,
									"end": 7761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7916,
									"end": 7919,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 7883,
									"end": 7920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7985,
									"end": 8003,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7977,
									"end": 7983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7974,
									"end": 8004,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 8007,
									"end": 8025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8083,
									"end": 8087,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8077,
									"end": 8088,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 8051,
									"end": 8089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8188,
									"end": 8194,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8182,
									"end": 8186,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 8136,
									"end": 8203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8230,
									"end": 8231,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8254,
									"end": 8258,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8241,
									"end": 8258,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8241,
									"end": 8258,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8286,
									"end": 8288,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8278,
									"end": 8284,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8289,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8303,
									"end": 8304,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8960,
									"end": 8961,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8977,
									"end": 8983,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9026,
									"end": 9035,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9021,
									"end": 9024,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 9017,
									"end": 9036,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9011,
									"end": 9037,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9002,
									"end": 9037,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9002,
									"end": 9037,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 9137,
									"end": 9143,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9130,
									"end": 9135,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 9077,
									"end": 9144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9071,
									"end": 9075,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9064,
									"end": 9145,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8933,
									"end": 9155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8350,
									"end": 8354,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8346,
									"end": 8355,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8338,
									"end": 8344,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8334,
									"end": 8356,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 8416,
									"end": 8420,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 8384,
									"end": 8421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8443,
									"end": 8444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8471,
									"end": 8478,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8468,
									"end": 8469,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8465,
									"end": 8479,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8550,
									"end": 8559,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8560,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8535,
									"end": 8561,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8527,
									"end": 8533,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8520,
									"end": 8562,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8601,
									"end": 8602,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8593,
									"end": 8599,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8589,
									"end": 8603,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8579,
									"end": 8603,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8579,
									"end": 8603,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8648,
									"end": 8650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8637,
									"end": 8646,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8633,
									"end": 8651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8620,
									"end": 8651,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8620,
									"end": 8651,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8494,
									"end": 8498,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8491,
									"end": 8492,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8499,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8482,
									"end": 8499,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8482,
									"end": 8499,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8693,
									"end": 8699,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8684,
									"end": 8691,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8681,
									"end": 8700,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8751,
									"end": 8760,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8746,
									"end": 8749,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8742,
									"end": 8761,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8736,
									"end": 8762,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 8836,
									"end": 8840,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8828,
									"end": 8834,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8824,
									"end": 8841,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8813,
									"end": 8822,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 8794,
									"end": 8842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8786,
									"end": 8792,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8779,
									"end": 8843,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8701,
									"end": 8857,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "tag",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 8904,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8899,
									"end": 8900,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8891,
									"end": 8897,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8887,
									"end": 8901,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8883,
									"end": 8905,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8877,
									"end": 8881,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8870,
									"end": 8906,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8305,
									"end": 8916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7858,
									"end": 9161,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7858,
									"end": 9161,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7858,
									"end": 9161,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7766,
									"end": 9161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 25340,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f39e6deea4d19750a4df0714f32daa84229bb1164a638c9907e1e222ffbd2e564736f6c63430008110033",
									".code": [
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "D5ABEB01"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "D5ABEB01"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "D993226B"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "DB3AD22C"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "E29301F9"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "EFF0730D"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "B88D4FDE"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "B8BA6007"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "C29DBCCA"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "C87B56DD"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "4BE3403C"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "81812FC"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 25340,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6697,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6697,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 6697,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 9813,
											"end": 9913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9813,
											"end": 9913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11408,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 11408,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 11408,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10970,
											"end": 11342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10970,
											"end": 11342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5408,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5408,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 12273,
											"end": 12443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 12273,
											"end": 12443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 12514,
											"end": 12699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 12514,
											"end": 12699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4100,
											"end": 4511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4100,
											"end": 4511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 9621,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9621,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7066,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7066,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7066,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9982,
											"end": 10086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9982,
											"end": 10086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 11684,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 11684,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 12770,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 12770,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3479,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3479,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3479,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2898,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2898,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10157,
											"end": 10475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 10157,
											"end": 10475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 10157,
											"end": 10475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5885,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5885,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4521,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4521,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4521,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5730,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5730,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4774,
											"end": 5066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4774,
											"end": 5066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4774,
											"end": 5066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 12042,
											"end": 12206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 12042,
											"end": 12206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 12042,
											"end": 12206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6066,
											"end": 6237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6066,
											"end": 6237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 6066,
											"end": 6237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6876,
											"name": "PUSH",
											"source": 9,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6847,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6876,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 6836,
											"end": 6941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6908,
											"end": 6941,
											"name": "PUSH",
											"source": 9,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6893,
											"end": 6941,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6941,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 6836,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6836,
											"end": 6994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6982,
											"end": 6993,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 6958,
											"end": 6994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6994,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6836,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 6994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 6994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 7002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9867,
											"end": 9880,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9900,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9893,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9893,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9813,
											"end": 9913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11476,
											"end": 11483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11501,
											"end": 11517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 11509,
											"end": 11516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 11501,
											"end": 11517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11517,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 11501,
											"end": 11517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11496,
											"end": 11560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11496,
											"end": 11560,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "PUSH",
											"source": 9,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11496,
											"end": 11560,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11496,
											"end": 11560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11595,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11603,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11573,
											"end": 11604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 11075,
											"end": 11082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 11059,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 11059,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11104,
											"end": 11109,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11100,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11109,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11094,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 11094,
											"end": 11142,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "PUSH",
											"source": 9,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11142,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11094,
											"end": 11142,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 11094,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11175,
											"end": 11180,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 11159,
											"end": 11169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 11159,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11180,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 11155,
											"end": 11294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 11203,
											"end": 11208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11210,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 11210,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 11210,
											"end": 11222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11210,
											"end": 11222,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 11210,
											"end": 11222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 11186,
											"end": 11223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11223,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 11186,
											"end": 11223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11182,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 11182,
											"end": 11294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "PUSH",
											"source": 9,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11247,
											"end": 11282,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11182,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 11182,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 11155,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 11315,
											"end": 11317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11319,
											"end": 11326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11328,
											"end": 11333,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 11306,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11334,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 11306,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11032,
											"end": 11342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 11342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 5686,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5686,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 5686,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5683,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5671,
											"end": 5683,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5668,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5655,
											"end": 5668,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5683,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12427,
											"end": 12434,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 12407,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12435,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 12407,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12273,
											"end": 12443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 12669,
											"end": 12673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12675,
											"end": 12677,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12686,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 12652,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 12652,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4227,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4210,
											"end": 4227,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4227,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4287,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4192,
											"end": 4287,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4275,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4258,
											"end": 4275,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4287,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4192,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4338,
											"end": 4342,
											"name": "PUSH",
											"source": 9,
											"value": "A70C3C40A64E6C51999090B65F67D9240000000000000"
										},
										{
											"begin": 4319,
											"end": 4333,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4319,
											"end": 4333,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4319,
											"end": 4337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 4400,
											"end": 4412,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4390,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4390,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4390,
											"end": 4413,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 4390,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4461,
											"end": 4475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4445,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4429,
											"end": 4476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9712,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 9725,
											"end": 9732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9712,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 9712,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9712,
											"end": 9733,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 9712,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9712,
											"end": 9738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9712,
											"end": 9738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9712,
											"end": 9738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9705,
											"end": 9738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9705,
											"end": 9738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9621,
											"end": 9746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7154,
											"end": 7173,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7154,
											"end": 7173,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7173,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 7150,
											"end": 7210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "PUSH",
											"source": 9,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7150,
											"end": 7210,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 7150,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7248,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7254,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7236,
											"end": 7263,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7264,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7228,
											"end": 7264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7221,
											"end": 7264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7221,
											"end": 7264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10038,
											"end": 10051,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10071,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 10064,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 10064,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11795,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 11795,
											"end": 11805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 11795,
											"end": 11807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11795,
											"end": 11807,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 11795,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11807,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 11779,
											"end": 11833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "PUSH",
											"source": 9,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11816,
											"end": 11833,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 11833,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 11779,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11891,
											"end": 11899,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11864,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 11865,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 11865,
											"end": 11877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11846,
											"end": 11878,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11887,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11944,
											"end": 11952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 11930,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH",
											"source": 9,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11954,
											"end": 11962,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 11915,
											"end": 11963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11963,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11684,
											"end": 11971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12937,
											"end": 12965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12953,
											"end": 12955,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12957,
											"end": 12964,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12937,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 12937,
											"end": 12965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12937,
											"end": 12965,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 12937,
											"end": 12965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12980,
											"end": 12995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 12980,
											"end": 12982,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 12980,
											"end": 12995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12980,
											"end": 12995,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 12980,
											"end": 12995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 13133,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 12976,
											"end": 13133,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13001,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 13032,
											"end": 13036,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13040,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13049,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13051,
											"end": 13056,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13001,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 13001,
											"end": 13057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13001,
											"end": 13057,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 13001,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 12997,
											"end": 13133,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "PUSH",
											"source": 9,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13121,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12997,
											"end": 13133,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 12997,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12976,
											"end": 13133,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 12976,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3618,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3621,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3587,
											"end": 3603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3566,
											"end": 3623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3566,
											"end": 3623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3662,
											"end": 3671,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3679,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3650,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3650,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3650,
											"end": 3681,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3650,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3718,
											"end": 3730,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3706,
											"end": 3731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3706,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3782,
											"end": 3792,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3768,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3763,
											"end": 3772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3763,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3763,
											"end": 3797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3763,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3950,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3950,
											"end": 3961,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3926,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3941,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3911,
											"end": 3925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3911,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3911,
											"end": 3949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3989,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3994,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3995,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3980,
											"end": 4002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3028,
											"end": 3045,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3011,
											"end": 3027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3011,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 3046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3073,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3103,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3073,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3128,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3153,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3128,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3204,
											"end": 3214,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3195,
											"end": 3198,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3185,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3185,
											"end": 3219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3185,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3164,
											"end": 3222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3164,
											"end": 3222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3335,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3309,
											"end": 3444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3359,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3359,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3444,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3309,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10230,
											"end": 10243,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10261,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10269,
											"end": 10276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 10261,
											"end": 10277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10277,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 10261,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10256,
											"end": 10315,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10315,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 10256,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10352,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10352,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10352,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10352,
											"end": 10362,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10352,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10405,
											"end": 10406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10401,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10406,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 10442,
											"end": 10449,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 10442,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 10416,
											"end": 10461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 10380,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10467,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6015,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 6015,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6015,
											"end": 6030,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6015,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6012,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6000,
											"end": 6012,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6012,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6030,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 6049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4626,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4654,
											"end": 4671,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4654,
											"end": 4671,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4627,
											"end": 4643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4627,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4627,
											"end": 4653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4627,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4607,
											"end": 4672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4607,
											"end": 4672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4698,
											"end": 4712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4698,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4747,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5856,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5845,
											"end": 5856,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 4885,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4911,
											"end": 4918,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4888,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 4919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 4919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4934,
											"end": 4943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4948,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4974,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4964,
											"end": 4974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5014,
											"end": 5020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5014,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4931,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4774,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12139,
											"end": 12143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12181,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12187,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12188,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12189,
											"end": 12197,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12163,
											"end": 12198,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12042,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6209,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6210,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6218,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13354,
											"end": 13528,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 13354,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13454,
											"end": 13461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13435,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 13435,
											"end": 13450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13450,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13435,
											"end": 13450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13461,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13461,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13475,
											"end": 13488,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13475,
											"end": 13488,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13488,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 13435,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13504,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13513,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 13493,
											"end": 13520,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13520,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 13435,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13428,
											"end": 13520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13428,
											"end": 13520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22358,
											"end": 22554,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 22358,
											"end": 22554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22500,
											"end": 22502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22488,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22489,
											"end": 22496,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22473,
											"end": 22502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22538,
											"end": 22545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22534,
											"end": 22536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22527,
											"end": 22532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22518,
											"end": 22546,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 22358,
											"end": 22554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22358,
											"end": 22554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22358,
											"end": 22554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22358,
											"end": 22554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 5182,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 19114,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 16586,
											"end": 19114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16705,
											"end": 16724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16727,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 16740,
											"end": 16747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16727,
											"end": 16739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 16727,
											"end": 16748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16727,
											"end": 16748,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 16727,
											"end": 16748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16705,
											"end": 16748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16705,
											"end": 16748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16788,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 16799,
											"end": 16803,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16788,
											"end": 16798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 16788,
											"end": 16804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16788,
											"end": 16804,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 16788,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16776,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16777,
											"end": 16781,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16782,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16783,
											"end": 16784,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16785,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16804,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16767,
											"end": 16804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 16859,
											"end": 16870,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16846,
											"end": 16850,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16836,
											"end": 16851,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16854,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 16836,
											"end": 16858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 16836,
											"end": 16871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16824,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16825,
											"end": 16829,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16815,
											"end": 16830,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16831,
											"end": 16832,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16815,
											"end": 16833,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16871,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16815,
											"end": 16871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16903,
											"end": 16915,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16891,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16892,
											"end": 16896,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16897,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16898,
											"end": 16899,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16900,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16915,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16882,
											"end": 16915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 16956,
											"end": 16958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 16945,
											"end": 16959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16945,
											"end": 16959,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 16945,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16935,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16936,
											"end": 16938,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16926,
											"end": 16939,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16940,
											"end": 16941,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16926,
											"end": 16942,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16959,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16926,
											"end": 16959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 17010,
											"end": 17021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 16998,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16999,
											"end": 17001,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16989,
											"end": 17002,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17003,
											"end": 17004,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17005,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 16989,
											"end": 17009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 16989,
											"end": 17022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16979,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16980,
											"end": 16982,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 16983,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 16985,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17022,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17052,
											"end": 17064,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17042,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17043,
											"end": 17045,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17033,
											"end": 17046,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17047,
											"end": 17048,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17033,
											"end": 17049,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17064,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17033,
											"end": 17064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17099,
											"end": 17134,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17137,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 17150,
											"end": 17157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17137,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 17137,
											"end": 17158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17137,
											"end": 17158,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 17137,
											"end": 17158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17099,
											"end": 17158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17099,
											"end": 17158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17197,
											"end": 17201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17201,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17175,
											"end": 17201,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17193,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17201,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17175,
											"end": 17201,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17201,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17171,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 17171,
											"end": 17238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "PUSH",
											"source": 9,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17210,
											"end": 17238,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17171,
											"end": 17238,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 17171,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17251,
											"end": 17273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17293,
											"end": 17297,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17297,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17277,
											"end": 17297,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 17277,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 17277,
											"end": 17289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17297,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17277,
											"end": 17297,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17297,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17350,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 17277,
											"end": 17350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17314,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 17331,
											"end": 17335,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17337,
											"end": 17349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 17337,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 17337,
											"end": 17349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17337,
											"end": 17349,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 17337,
											"end": 17349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17314,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 17314,
											"end": 17350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17314,
											"end": 17350,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 17314,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17350,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 17277,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17403,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 17277,
											"end": 17403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17391,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 17391,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 17391,
											"end": 17403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17391,
											"end": 17403,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 17391,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 17379,
											"end": 17386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 17367,
											"end": 17387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17387,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 17367,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17367,
											"end": 17403,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17403,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 17277,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17251,
											"end": 17404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17251,
											"end": 17404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17422,
											"end": 17439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17417,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 17417,
											"end": 17483,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "PUSH",
											"source": 9,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17448,
											"end": 17483,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17417,
											"end": 17483,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 17417,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17498,
											"end": 17500,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17498,
											"end": 17514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17494,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 17494,
											"end": 17546,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "PUSH",
											"source": 9,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17523,
											"end": 17546,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17494,
											"end": 17546,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 17494,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17559,
											"end": 17602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 17581,
											"end": 17585,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17587,
											"end": 17589,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17591,
											"end": 17598,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17600,
											"end": 17601,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17559,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 17559,
											"end": 17602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17559,
											"end": 17602,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 17559,
											"end": 17602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17667,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17684,
											"end": 17685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17688,
											"end": 17695,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17697,
											"end": 17701,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17667,
											"end": 17675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 17667,
											"end": 17702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17667,
											"end": 17702,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17667,
											"end": 17702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18028,
											"end": 18029,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17998,
											"end": 18010,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18011,
											"end": 18015,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17998,
											"end": 18016,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17998,
											"end": 18024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 17998,
											"end": 18029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18072,
											"end": 18073,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18044,
											"end": 18056,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18057,
											"end": 18059,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18044,
											"end": 18060,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18044,
											"end": 18068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18044,
											"end": 18073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18090,
											"end": 18121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18124,
											"end": 18135,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18136,
											"end": 18143,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18124,
											"end": 18144,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18090,
											"end": 18144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18090,
											"end": 18144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18175,
											"end": 18177,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18159,
											"end": 18172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18159,
											"end": 18177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18225,
											"end": 18240,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18192,
											"end": 18215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18215,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18192,
											"end": 18241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18525,
											"end": 18526,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18515,
											"end": 18522,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18493,
											"end": 18526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18541,
											"end": 18572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18575,
											"end": 18586,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18587,
											"end": 18598,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18541,
											"end": 18599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18541,
											"end": 18599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18643,
											"end": 18644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18618,
											"end": 18645,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18618,
											"end": 18645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18626,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18618,
											"end": 18631,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18645,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18618,
											"end": 18645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18618,
											"end": 18645,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 18998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18614,
											"end": 18998,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18828,
											"end": 18841,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 18828,
											"end": 18841,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18813,
											"end": 18824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18813,
											"end": 18841,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18809,
											"end": 18983,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18882,
											"end": 18886,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18866,
											"end": 18879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18866,
											"end": 18886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18935,
											"end": 18948,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18935,
											"end": 18963,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18935,
											"end": 18963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18935,
											"end": 18963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18917,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18909,
											"end": 18932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18932,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 18909,
											"end": 18963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18983,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18809,
											"end": 18983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18614,
											"end": 18998,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 18614,
											"end": 18998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17973,
											"end": 19009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17973,
											"end": 19009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17973,
											"end": 19009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19045,
											"end": 19052,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19041,
											"end": 19043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19035,
											"end": 19039,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19026,
											"end": 19053,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 19064,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 19085,
											"end": 19089,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 19091,
											"end": 19093,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 19095,
											"end": 19102,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 19104,
											"end": 19105,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 19064,
											"end": 19084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 19064,
											"end": 19106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19064,
											"end": 19106,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 19064,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 19114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 19114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 19114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 19114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 19114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 19114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 19114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8510,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8510,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 8510,
											"end": 8531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8510,
											"end": 8531,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8510,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8544,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8544,
											"end": 8566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8544,
											"end": 8566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8627,
											"end": 8631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8608,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 8608,
											"end": 8623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8623,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 8608,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8608,
											"end": 8631,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 8604,
											"end": 9492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8644,
											"end": 8657,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8657,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 9492,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 8633,
											"end": 9492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8723,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8729,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8678,
											"end": 8729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8762,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 8748,
											"end": 9477,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8826,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8798,
											"end": 8826,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8807,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8812,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8826,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8798,
											"end": 8826,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8826,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8794,
											"end": 8895,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8862,
											"end": 8871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 8855,
											"end": 8871,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8794,
											"end": 8895,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8794,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9208,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9293,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9299,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9358,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9330,
											"end": 9358,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9344,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9358,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9330,
											"end": 9358,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9358,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9326,
											"end": 9435,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9407,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 9391,
											"end": 9407,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9435,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9326,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9197,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 9477,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 8748,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8659,
											"end": 9492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8633,
											"end": 9492,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 8633,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 9492,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 8604,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "PUSH",
											"source": 9,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9551,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 9559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 9559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23209,
											"end": 23213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23246,
											"end": 23248,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23266,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23230,
											"end": 23266,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23266,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 23267,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 23267,
											"end": 23277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 23267,
											"end": 23279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23267,
											"end": 23279,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 23267,
											"end": 23279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23281,
											"end": 23285,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 23287,
											"end": 23294,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 23296,
											"end": 23301,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 23230,
											"end": 23302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 23230,
											"end": 23302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 23230,
											"end": 23302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23481,
											"end": 23482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23464,
											"end": 23470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23464,
											"end": 23477,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23464,
											"end": 23482,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23460,
											"end": 23695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 23460,
											"end": 23695,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "PUSH",
											"source": 9,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23510,
											"end": 23550,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23460,
											"end": 23695,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 23460,
											"end": 23695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23653,
											"end": 23659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23647,
											"end": 23660,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 23638,
											"end": 23644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23634,
											"end": 23636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23630,
											"end": 23645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23623,
											"end": 23661,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 23226,
											"end": 23706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23359,
											"end": 23404,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 23359,
											"end": 23404,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 23359,
											"end": 23404,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 23349,
											"end": 23355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 23349,
											"end": 23404,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 23342,
											"end": 23404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23342,
											"end": 23404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23342,
											"end": 23404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23046,
											"end": 23713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10723,
											"end": 10908,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 10723,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10787,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH data",
											"source": 9,
											"value": "D8CC7CBF95B52AFA2322FAC553D3C4E20F5096FB87DA64785A945DE91007C7B2"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 791,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 915,
											"end": 925,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 24361,
											"end": 24520,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 24361,
											"end": 24520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24361,
											"end": 24520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24361,
											"end": 24520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24361,
											"end": 24520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24361,
											"end": 24520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24361,
											"end": 24520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25179,
											"end": 25337,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 25179,
											"end": 25337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25179,
											"end": 25337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25179,
											"end": 25337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25179,
											"end": 25337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25179,
											"end": 25337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25179,
											"end": 25337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12143,
											"end": 12147,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12148,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12262,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12160,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12202,
											"end": 12210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12249,
											"end": 12254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12242,
											"end": 12255,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12255,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12255,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12262,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12262,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12334,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12336,
											"end": 12340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12366,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12351,
											"end": 12366,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12351,
											"end": 12366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12384,
											"end": 12389,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12375,
											"end": 12389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12375,
											"end": 12389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12419,
											"end": 12420,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12409,
											"end": 12417,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12406,
											"end": 12421,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12514,
											"end": 12518,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12512,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12519,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12499,
											"end": 12503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12496,
											"end": 12520,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12543,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 12493,
											"end": 12543,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12523,
											"end": 12541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12543,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 12493,
											"end": 12543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12563,
											"end": 12571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12559,
											"end": 12575,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12556,
											"end": 13007,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12556,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 12556,
											"end": 13007,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12988,
											"end": 12992,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12981,
											"end": 12986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 12993,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12968,
											"end": 12993,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12968,
											"end": 12993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12556,
											"end": 13007,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 12556,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13042,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13032,
											"end": 13036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13028,
											"end": 13043,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13020,
											"end": 13043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13020,
											"end": 13043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13068,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13091,
											"end": 13099,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13068,
											"end": 13100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 13068,
											"end": 13100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13068,
											"end": 13100,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 13068,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13056,
											"end": 13100,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13056,
											"end": 13100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 12398,
											"end": 13110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12268,
											"end": 13116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13367,
											"end": 13375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13357,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13357,
											"end": 13397,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13388,
											"end": 13389,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13379,
											"end": 13389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13379,
											"end": 13389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13390,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13390,
											"end": 13395,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13357,
											"end": 13397,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13357,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13416,
											"end": 13420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 13406,
											"end": 13442,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13433,
											"end": 13434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13424,
											"end": 13434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13435,
											"end": 13440,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13406,
											"end": 13442,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 13406,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13502,
											"end": 13506,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13550,
											"end": 13551,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13586,
											"end": 13587,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 13581,
											"end": 13772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13772,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 13581,
											"end": 13772,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13495,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13495,
											"end": 13772,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 13545,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13563,
											"end": 13564,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13554,
											"end": 13564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13554,
											"end": 13564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13565,
											"end": 13570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13565,
											"end": 13570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13565,
											"end": 13570,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13581,
											"end": 13772,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 13581,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13626,
											"end": 13629,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 13616,
											"end": 13624,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13613,
											"end": 13630,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13653,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 13610,
											"end": 13653,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 13633,
											"end": 13651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13653,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 13610,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13682,
											"end": 13690,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13679,
											"end": 13680,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 13666,
											"end": 13691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13666,
											"end": 13691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13717,
											"end": 13720,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13710,
											"end": 13715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13707,
											"end": 13721,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 13744,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 13704,
											"end": 13744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 13724,
											"end": 13742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 13744,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 13704,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13757,
											"end": 13762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13757,
											"end": 13762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13757,
											"end": 13762,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13495,
											"end": 13772,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 13495,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13495,
											"end": 13772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13881,
											"end": 13883,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13871,
											"end": 13879,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13868,
											"end": 13884,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13862,
											"end": 13865,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 13856,
											"end": 13860,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13853,
											"end": 13866,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13849,
											"end": 13885,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13831,
											"end": 13833,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 13821,
											"end": 13829,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13818,
											"end": 13834,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13813,
											"end": 13815,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 13807,
											"end": 13811,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13816,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13800,
											"end": 13835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13784,
											"end": 13895,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13781,
											"end": 14027,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13781,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 13781,
											"end": 14027,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13937,
											"end": 13945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 13935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13927,
											"end": 13946,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 13918,
											"end": 13946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13918,
											"end": 13946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13972,
											"end": 13975,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13965,
											"end": 13970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13962,
											"end": 13976,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13959,
											"end": 13999,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13959,
											"end": 13999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 13959,
											"end": 13999,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 13979,
											"end": 13997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13959,
											"end": 13999,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 13959,
											"end": 13999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14012,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 14012,
											"end": 14017,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13781,
											"end": 14027,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 13781,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14052,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 14090,
											"end": 14093,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14080,
											"end": 14088,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14052,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 14052,
											"end": 14094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14052,
											"end": 14094,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 14052,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14094,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14121,
											"end": 14124,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14117,
											"end": 14131,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14110,
											"end": 14115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14107,
											"end": 14132,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14155,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 14104,
											"end": 14155,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14135,
											"end": 14153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 14135,
											"end": 14153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 14135,
											"end": 14153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14135,
											"end": 14153,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 14135,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14155,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 14104,
											"end": 14155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14184,
											"end": 14188,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14177,
											"end": 14182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14173,
											"end": 14189,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14164,
											"end": 14189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14164,
											"end": 14189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13122,
											"end": 14195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14287,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 14201,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14236,
											"end": 14243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14276,
											"end": 14280,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 14269,
											"end": 14274,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14265,
											"end": 14281,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14254,
											"end": 14281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14254,
											"end": 14281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14287,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14287,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14201,
											"end": 14287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14574,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 14293,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14351,
											"end": 14356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14375,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 14393,
											"end": 14397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14375,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14375,
											"end": 14398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14375,
											"end": 14398,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 14375,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14398,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14419,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 14435,
											"end": 14443,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14419,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 14419,
											"end": 14444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14419,
											"end": 14444,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 14419,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14407,
											"end": 14444,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14407,
											"end": 14444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14463,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14490,
											"end": 14498,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14488,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14463,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 14463,
											"end": 14567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14463,
											"end": 14567,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 14463,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14454,
											"end": 14567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14454,
											"end": 14567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14574,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14574,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14580,
											"end": 14760,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 14580,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14705,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14625,
											"end": 14626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14725,
											"end": 14729,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14722,
											"end": 14723,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14715,
											"end": 14730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14749,
											"end": 14753,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14746,
											"end": 14747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14739,
											"end": 14754,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14942,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 14766,
											"end": 14942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 14799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14815,
											"end": 14835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14810,
											"end": 14835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14810,
											"end": 14835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14849,
											"end": 14869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14867,
											"end": 14868,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14849,
											"end": 14869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 14849,
											"end": 14869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14849,
											"end": 14869,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14849,
											"end": 14869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14844,
											"end": 14869,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14844,
											"end": 14869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14888,
											"end": 14889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 14878,
											"end": 14913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 14893,
											"end": 14911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14913,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 14878,
											"end": 14913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14934,
											"end": 14935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14931,
											"end": 14932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14927,
											"end": 14936,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 14922,
											"end": 14936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14922,
											"end": 14936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14942,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14766,
											"end": 14942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14948,
											"end": 15358,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 14948,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14988,
											"end": 14995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15011,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15029,
											"end": 15030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15011,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15011,
											"end": 15031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15011,
											"end": 15031,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 15011,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15006,
											"end": 15031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15006,
											"end": 15031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 15063,
											"end": 15064,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15045,
											"end": 15065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 15045,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15040,
											"end": 15065,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15040,
											"end": 15065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15097,
											"end": 15098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15093,
											"end": 15102,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 15140,
											"end": 15151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15122,
											"end": 15152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15122,
											"end": 15152,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 15122,
											"end": 15152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15111,
											"end": 15152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15301,
											"end": 15302,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15292,
											"end": 15299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15303,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15285,
											"end": 15286,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15282,
											"end": 15304,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 15262,
											"end": 15263,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15255,
											"end": 15264,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15235,
											"end": 15318,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 15212,
											"end": 15351,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 15331,
											"end": 15349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 15331,
											"end": 15349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15351,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 15212,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14948,
											"end": 15358,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14948,
											"end": 15358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14948,
											"end": 15358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14948,
											"end": 15358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14948,
											"end": 15358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15549,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 15364,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15404,
											"end": 15405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15421,
											"end": 15441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15439,
											"end": 15440,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15421,
											"end": 15441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15441,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 15421,
											"end": 15441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15416,
											"end": 15441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15416,
											"end": 15441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15473,
											"end": 15474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 15455,
											"end": 15475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15450,
											"end": 15475,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15450,
											"end": 15475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15494,
											"end": 15495,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 15484,
											"end": 15519,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15499,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 15499,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 15499,
											"end": 15517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15499,
											"end": 15517,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 15499,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15484,
											"end": 15519,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 15484,
											"end": 15519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15541,
											"end": 15542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15538,
											"end": 15539,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15534,
											"end": 15543,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15529,
											"end": 15543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15555,
											"end": 15653,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 15555,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15606,
											"end": 15612,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15634,
											"end": 15646,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15555,
											"end": 15653,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15555,
											"end": 15653,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15555,
											"end": 15653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15555,
											"end": 15653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15659,
											"end": 15827,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 15659,
											"end": 15827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15742,
											"end": 15753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15782,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15771,
											"end": 15774,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15816,
											"end": 15820,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15811,
											"end": 15814,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15821,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15792,
											"end": 15821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15792,
											"end": 15821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15659,
											"end": 15827,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15659,
											"end": 15827,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15659,
											"end": 15827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15659,
											"end": 15827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15659,
											"end": 15827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 16206,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 15833,
											"end": 16206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15919,
											"end": 15922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15947,
											"end": 15985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 15979,
											"end": 15984,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 15985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 15947,
											"end": 15985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 15985,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 15947,
											"end": 15985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 16064,
											"end": 16070,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16059,
											"end": 16062,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 16001,
											"end": 16071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16001,
											"end": 16071,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 16001,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15994,
											"end": 16071,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15994,
											"end": 16071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16080,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16138,
											"end": 16144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16133,
											"end": 16136,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16126,
											"end": 16130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16119,
											"end": 16124,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16115,
											"end": 16131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16080,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 16080,
											"end": 16145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16080,
											"end": 16145,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 16080,
											"end": 16145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16170,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 16192,
											"end": 16198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16170,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 16170,
											"end": 16199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16170,
											"end": 16199,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 16170,
											"end": 16199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16165,
											"end": 16168,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16161,
											"end": 16200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15923,
											"end": 16206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 16206,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 16206,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 16206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 16206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15833,
											"end": 16206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16407,
											"end": 16411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16445,
											"end": 16448,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16434,
											"end": 16443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16430,
											"end": 16449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16422,
											"end": 16449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16422,
											"end": 16449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16459,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16527,
											"end": 16528,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16516,
											"end": 16525,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16512,
											"end": 16529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16503,
											"end": 16509,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16459,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 16459,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16459,
											"end": 16530,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 16459,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16540,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16608,
											"end": 16610,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16597,
											"end": 16606,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16593,
											"end": 16611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16584,
											"end": 16590,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16540,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 16540,
											"end": 16612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16540,
											"end": 16612,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 16540,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 16690,
											"end": 16692,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16666,
											"end": 16672,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 16622,
											"end": 16694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16622,
											"end": 16694,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 16622,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16741,
											"end": 16750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16735,
											"end": 16739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16726,
											"end": 16728,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16715,
											"end": 16724,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16704,
											"end": 16752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16840,
											"end": 16844,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16831,
											"end": 16837,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 16769,
											"end": 16845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16845,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 16769,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16761,
											"end": 16845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16761,
											"end": 16845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16212,
											"end": 16852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16999,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 16858,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16914,
											"end": 16919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16945,
											"end": 16951,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16939,
											"end": 16952,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16930,
											"end": 16952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16930,
											"end": 16952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16961,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 16987,
											"end": 16992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16961,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 16961,
											"end": 16993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16961,
											"end": 16993,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 16961,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16999,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16999,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17005,
											"end": 17354,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 17005,
											"end": 17354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17074,
											"end": 17080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17123,
											"end": 17125,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17111,
											"end": 17120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17102,
											"end": 17109,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17098,
											"end": 17121,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17094,
											"end": 17126,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17210,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17091,
											"end": 17210,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 17129,
											"end": 17208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17091,
											"end": 17210,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 17091,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17249,
											"end": 17250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17274,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17329,
											"end": 17336,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17320,
											"end": 17326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17309,
											"end": 17318,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17305,
											"end": 17327,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17274,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 17274,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17274,
											"end": 17337,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 17274,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17220,
											"end": 17347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17005,
											"end": 17354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17005,
											"end": 17354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17005,
											"end": 17354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17005,
											"end": 17354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17005,
											"end": 17354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17360,
											"end": 17554,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 17360,
											"end": 17554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17400,
											"end": 17404,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17420,
											"end": 17440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 17438,
											"end": 17439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17420,
											"end": 17440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17420,
											"end": 17440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17420,
											"end": 17440,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 17420,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17415,
											"end": 17440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17415,
											"end": 17440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17454,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 17472,
											"end": 17473,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17454,
											"end": 17474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17454,
											"end": 17474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17454,
											"end": 17474,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 17454,
											"end": 17474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17449,
											"end": 17474,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17449,
											"end": 17474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17498,
											"end": 17499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17495,
											"end": 17496,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17491,
											"end": 17500,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17483,
											"end": 17500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17483,
											"end": 17500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17522,
											"end": 17523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17516,
											"end": 17520,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17513,
											"end": 17524,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17510,
											"end": 17547,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17510,
											"end": 17547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 17510,
											"end": 17547,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17527,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 17527,
											"end": 17545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 17527,
											"end": 17545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17527,
											"end": 17545,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 17527,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17510,
											"end": 17547,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 17510,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17360,
											"end": 17554,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17360,
											"end": 17554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17360,
											"end": 17554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17360,
											"end": 17554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17360,
											"end": 17554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17751,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 17560,
											"end": 17751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17619,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 17637,
											"end": 17638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17619,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17619,
											"end": 17639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17619,
											"end": 17639,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 17619,
											"end": 17639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17614,
											"end": 17639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17614,
											"end": 17639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17653,
											"end": 17673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 17671,
											"end": 17672,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17653,
											"end": 17673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17653,
											"end": 17673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17653,
											"end": 17673,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 17653,
											"end": 17673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17673,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17696,
											"end": 17697,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17693,
											"end": 17694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17689,
											"end": 17698,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17682,
											"end": 17698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17682,
											"end": 17698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17717,
											"end": 17720,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17714,
											"end": 17715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17711,
											"end": 17721,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17744,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 17708,
											"end": 17744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17724,
											"end": 17742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 17724,
											"end": 17742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 17724,
											"end": 17742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17724,
											"end": 17742,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 17724,
											"end": 17742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17708,
											"end": 17744,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 17708,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17751,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17560,
											"end": 17751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17990,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 17757,
											"end": 17990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17796,
											"end": 17799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17819,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 17837,
											"end": 17842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17819,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17819,
											"end": 17843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17819,
											"end": 17843,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 17819,
											"end": 17843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17810,
											"end": 17843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17810,
											"end": 17843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17865,
											"end": 17931,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17858,
											"end": 17863,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17855,
											"end": 17932,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17852,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17852,
											"end": 17955,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 17935,
											"end": 17953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 17935,
											"end": 17953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17852,
											"end": 17955,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17852,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17982,
											"end": 17983,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17975,
											"end": 17980,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17971,
											"end": 17984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17964,
											"end": 17984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17964,
											"end": 17984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17757,
											"end": 17990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17996,
											"end": 18176,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 17996,
											"end": 18176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18121,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18041,
											"end": 18042,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18034,
											"end": 18122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18141,
											"end": 18145,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 18138,
											"end": 18139,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18131,
											"end": 18146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18165,
											"end": 18169,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18162,
											"end": 18163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18155,
											"end": 18170,
											"name": "REVERT",
											"source": 12
										}
									],
									".data": {
										"D8CC7CBF95B52AFA2322FAC553D3C4E20F5096FB87DA64785A945DE91007C7B2": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockStatus(uint256)": "4be3403c",
							"difficult(uint256)": "d993226b",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"mineInfo(address,uint256)": "eff0730d",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenIDPower(uint256)": "e29301f9",
							"tokenURI(uint256)": "c87b56dd",
							"totalDugUp(uint256)": "c29dbcca",
							"totalPower()": "db3ad22c",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDCF_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"mineInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"totalDugUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC721A/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC721A/ERC721A.sol\":{\"keccak256\":\"0x4972641e85f5692eff682ff4ed1523984fd2ccea04f38ed7e91f08fcde86094d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cd961351161f587d1b6321f04f620e9d496db3ffe382d9426629e6f9b0a5b4f\",\"dweb:/ipfs/QmZWr9DSAqvLDA81ciWhknYcDgWMKmpMqPXxUDsDEJXBYY\"]},\"minerpunk/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]},\"minerpunk/IDCF/mineInterface.sol\":{\"keccak256\":\"0x2e29380aa88f3dc94e634c23f9846bd924e3a4465e8eec68bf072e611fa2831d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00a734c8f443312b7ea224a1540b4decfcd7fb5f17bf91d5bf1164a366b013f8\",\"dweb:/ipfs/QmUF5u4pCLTZjpBybG1tFkXxydmiFwZRywqbu71XxenTSX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1081,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_salt",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1083,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_totalDCF",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1085,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_TokenperBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1087,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_startBlockNumber",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1089,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_totalPower",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1091,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1093,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1095,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1097,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 1099,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 1104,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)2890_storage)"
							},
							{
								"astId": 1109,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(AddressData)2899_storage)"
							},
							{
								"astId": 1113,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1119,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1126,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_mineInfo",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(AddressData)2899_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)2899_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)2890_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)2890_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)2899_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 2892,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2894,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2896,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2898,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)2890_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 2885,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2887,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 2889,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC721A/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"minerpunk/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"mine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "difficult",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenIDPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "totalDugUp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"blockStatus(uint256)": "4be3403c",
							"difficult(uint256)": "d993226b",
							"tokenIDPower(uint256)": "e29301f9",
							"totalDugUp(uint256)": "c29dbcca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"difficult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"totalDugUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/IDCF/mineInterface.sol\":\"mine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"minerpunk/IDCF/mineInterface.sol\":{\"keccak256\":\"0x2e29380aa88f3dc94e634c23f9846bd924e3a4465e8eec68bf072e611fa2831d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00a734c8f443312b7ea224a1540b4decfcd7fb5f17bf91d5bf1164a366b013f8\",\"dweb:/ipfs/QmUF5u4pCLTZjpBybG1tFkXxydmiFwZRywqbu71XxenTSX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> minerpunk/ERC721A/ERC721A.sol:92:25:\n   |\n92 |     function totalDugUp(uint256 _BlockNumber)external view override returns (uint256){\n   |                         ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2938,
					"file": "minerpunk/ERC721A/ERC721A.sol",
					"start": 2918
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 740,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								739
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 115,
									"src": "3267:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 115,
									"src": "3834:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4236:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:0"
									},
									"scope": 115,
									"src": "4209:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4490:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:0"
									},
									"scope": 115,
									"src": "4429:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:0"
									},
									"scope": 115,
									"src": "4657:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4497:0",
							"usedErrors": []
						}
					],
					"src": "108:4640:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								739
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 455,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 455,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															249
														],
														"referencedDeclaration": 249,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 455,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 241,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 455,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 261,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 260,
												"id": 267,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 455,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 296,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 295,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													302,
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 305,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 312,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 317,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 455,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 329,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															371
														],
														"referencedDeclaration": 371,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 455,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 350,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 349,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													356,
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 366,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 347,
												"id": 369,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 455,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 381,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															388,
															423
														],
														"referencedDeclaration": 423,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 386,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 455,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 402,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 401,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													408,
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 421,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 455,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 435,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 439,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 449,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 446,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 445,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 448,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 450,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 443,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 434,
															"id": 437,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 455,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 462,
												"id": 465,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 477,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 477,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "Strings",
							"nameLocation": "169:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "183:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 481,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 486,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "247:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 484,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "463:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "665:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "661:51:5",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "677:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 498,
															"nodeType": "Return",
															"src": "691:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "721:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"id": 503,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "736:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "751:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:5"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "793:57:5",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:5",
																"subExpression": {
																	"id": 511,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "807:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "807:8:5"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 514,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "829:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "829:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "782:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "WhileStatement",
												"src": "775:75:5"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "859:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "891:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:5"
											},
											{
												"body": {
													"id": 557,
													"nodeType": "Block",
													"src": "927:131:5",
													"statements": [
														{
															"expression": {
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 530,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "941:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "941:11:5"
														},
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 534,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "966:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 536,
																	"indexExpression": {
																		"id": 535,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "973:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 544,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 489,
																									"src": "1009:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 545,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 542,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 539,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 537,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "966:56:5"
														},
														{
															"expression": {
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "915:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "WhileStatement",
												"src": "908:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 559,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 493,
												"id": 563,
												"nodeType": "Return",
												"src": "1067:21:5"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:5"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:5"
									},
									"scope": 703,
									"src": "392:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "1274:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1288:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "1284:54:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "1300:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 572,
															"id": 577,
															"nodeType": "Return",
															"src": "1314:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1347:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"id": 582,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "1362:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:5"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1377:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"hexValue": "30",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:5"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "1423:57:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:5",
																"subExpression": {
																	"id": 591,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1437:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:5"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1459:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1412:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "WhileStatement",
												"src": "1405:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "1508:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1515:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "1496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 572,
												"id": 604,
												"nodeType": "Return",
												"src": "1489:33:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1259:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:5"
									},
									"scope": 703,
									"src": "1200:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "1742:351:5",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "1752:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1788:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:5"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 627,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 629,
														"indexExpression": {
															"hexValue": "30",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:5"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 633,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"indexExpression": {
															"hexValue": "31",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:5"
											},
											{
												"body": {
													"id": 667,
													"nodeType": "Block",
													"src": "1904:87:5",
													"statements": [
														{
															"expression": {
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 653,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "1918:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"id": 654,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "1925:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 656,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "1930:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 660,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "1943:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:5"
														},
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1969:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"initializationExpression": {
													"assignments": [
														640
													],
													"declarations": [
														{
															"constant": false,
															"id": 640,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 668,
															"src": "1864:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 646,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 642,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1880:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:5",
														"subExpression": {
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "1901:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 652,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2008:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 676,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 680,
												"nodeType": "Return",
												"src": "2065:21:5"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1688:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1727:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:5"
									},
									"scope": 703,
									"src": "1652:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2318:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 695,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "2363:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 698,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2371:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "2335:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 700,
												"nodeType": "Return",
												"src": "2328:59:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2266:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:5"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2303:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:5"
									},
									"scope": 703,
									"src": "2245:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 704,
							"src": "161:2235:5",
							"usedErrors": []
						}
					],
					"src": "101:2296:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							727
						],
						"IERC165": [
							739
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 728,
							"sourceUnit": 740,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "754:7:6"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								739
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 719,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$739",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 724,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 727,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 728,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						]
					},
					"id": 740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 732,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 739,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 740,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 742,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 772,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															755
														],
														"declarations": [
															{
																"constant": false,
																"id": 755,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 772,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 754,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 759,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 761,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 767,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 765,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 753,
															"id": 766,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 769,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 770,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 753,
														"id": 771,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1051,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 800,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 787,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 793,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 785,
															"id": 792,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 795,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 796,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 798,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 785,
														"id": 799,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1051,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 842,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 821,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 813,
															"id": 820,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 842,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 827,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 825,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 828,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 829,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 831,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 837,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 813,
															"id": 836,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 839,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 840,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 813,
														"id": 841,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1051,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 870,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 856,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 863,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 855,
															"id": 862,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 866,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 855,
														"id": 869,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1051,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 898,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 891,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 883,
															"id": 890,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 883,
														"id": 897,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1051,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 909,
												"id": 913,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1051,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 928,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1051,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 943,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1051,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 958,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1051,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 973,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1051,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5084:106:8",
										"statements": [
											{
												"id": 998,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 988,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "5126:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 989,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "5131:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 991,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "5134:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 987,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "5168:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 995,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "5172:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 986,
														"id": 997,
														"nodeType": "Return",
														"src": "5161:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4981:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5000:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5019:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:8"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5075:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:8"
									},
									"scope": 1051,
									"src": "4959:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5799:105:8",
										"statements": [
											{
												"id": 1023,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1013,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "5841:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1016,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "5848:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1012,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1018,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "5882:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1020,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "5886:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1011,
														"id": 1022,
														"nodeType": "Return",
														"src": "5875:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5696:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5715:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5734:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:8"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5790:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:8"
									},
									"scope": 1051,
									"src": "5674:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "6675:105:8",
										"statements": [
											{
												"id": 1048,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "6717:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1041,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "6724:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1037,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "6758:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "6762:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1036,
														"id": 1047,
														"nodeType": "Return",
														"src": "6751:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6572:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6591:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6610:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:8"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:8"
									},
									"scope": 1051,
									"src": "6550:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "482:6300:8",
							"usedErrors": []
						}
					],
					"src": "107:6676:8"
				},
				"id": 8
			},
			"minerpunk/ERC721A/ERC721A.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC721A/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							455
						],
						"Context": [
							477
						],
						"ERC165": [
							727
						],
						"ERC721A": [
							2835
						],
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							2906
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"SafeMath": [
							1051
						],
						"Strings": [
							703
						],
						"mine": [
							2945
						]
					},
					"id": 2836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:9"
						},
						{
							"absolutePath": "minerpunk/ERC721A/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 2907,
							"src": "115:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "minerpunk/IDCF/mineInterface.sol",
							"file": "../IDCF/mineInterface.sol",
							"id": 1055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 2946,
							"src": "141:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 134,
							"src": "178:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 456,
							"src": "246:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1058,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 478,
							"src": "299:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 704,
							"src": "352:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1060,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 728,
							"src": "405:64:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2836,
							"sourceUnit": 1052,
							"src": "471:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1063,
										"name": "Context",
										"nameLocations": [
											"1053:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "1053:7:9"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "1053:7:9"
								},
								{
									"baseName": {
										"id": 1065,
										"name": "ERC165",
										"nameLocations": [
											"1062:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1062:6:9"
									},
									"id": 1066,
									"nodeType": "InheritanceSpecifier",
									"src": "1062:6:9"
								},
								{
									"baseName": {
										"id": 1067,
										"name": "IERC721A",
										"nameLocations": [
											"1070:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2906,
										"src": "1070:8:9"
									},
									"id": 1068,
									"nodeType": "InheritanceSpecifier",
									"src": "1070:8:9"
								},
								{
									"baseName": {
										"id": 1069,
										"name": "mine",
										"nameLocations": [
											"1079:4:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2945,
										"src": "1079:4:9"
									},
									"id": 1070,
									"nodeType": "InheritanceSpecifier",
									"src": "1079:4:9"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "532:499:9",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2835,
							"linearizedBaseContracts": [
								2835,
								2945,
								2906,
								160,
								115,
								727,
								739,
								477
							],
							"name": "ERC721A",
							"nameLocation": "1042:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1073,
									"libraryName": {
										"id": 1071,
										"name": "SafeMath",
										"nameLocations": [
											"1097:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "1097:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1091:24:9",
									"typeName": {
										"id": 1072,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1110:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1076,
									"libraryName": {
										"id": 1074,
										"name": "Address",
										"nameLocations": [
											"1127:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "1127:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1121:26:9",
									"typeName": {
										"id": 1075,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1139:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1079,
									"libraryName": {
										"id": 1077,
										"name": "Strings",
										"nameLocations": [
											"1159:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1159:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1153:26:9",
									"typeName": {
										"id": 1078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1081,
									"mutability": "mutable",
									"name": "_salt",
									"nameLocation": "1204:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1187:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1187:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1083,
									"mutability": "mutable",
									"name": "_totalDCF",
									"nameLocation": "1235:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1218:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1082,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1218:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1085,
									"mutability": "mutable",
									"name": "_TokenperBlock",
									"nameLocation": "1270:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1253:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1253:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1087,
									"mutability": "mutable",
									"name": "_startBlockNumber",
									"nameLocation": "1310:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1293:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1086,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1293:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1089,
									"mutability": "mutable",
									"name": "_totalPower",
									"nameLocation": "1353:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1336:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1088,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1336:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1091,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "1449:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1432:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1090,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1432:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1093,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nameLocation": "1490:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1473:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1092,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1473:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1095,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "1563:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1546:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1094,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1546:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1097,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1624:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1609:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1096,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1609:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1099,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1674:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1659:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1098,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1659:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1104,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1908:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1864:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
										"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 1103,
										"keyType": {
											"id": 1100,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1872:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1864:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
											"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 1102,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1101,
												"name": "TokenOwnership",
												"nameLocations": [
													"1883:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2890,
												"src": "1883:14:9"
											},
											"referencedDeclaration": 2890,
											"src": "1883:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
												"typeString": "struct IERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1109,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "2014:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "1974:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
										"typeString": "mapping(address => struct IERC721A.AddressData)"
									},
									"typeName": {
										"id": 1108,
										"keyType": {
											"id": 1105,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1982:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1974:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
											"typeString": "mapping(address => struct IERC721A.AddressData)"
										},
										"valueType": {
											"id": 1107,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1106,
												"name": "AddressData",
												"nameLocations": [
													"1993:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2899,
												"src": "1993:11:9"
											},
											"referencedDeclaration": 2899,
											"src": "1993:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$2899_storage_ptr",
												"typeString": "struct IERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1113,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2121:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "2085:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1112,
										"keyType": {
											"id": 1110,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2093:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2085:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2104:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1119,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2247:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "2194:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1118,
										"keyType": {
											"id": 1114,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2202:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2194:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1117,
											"keyType": {
												"id": 1115,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2221:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2213:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1116,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2232:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2274:122:9",
										"text": "[user][1] = last_block\n[user][2] = accumulation_power   \n[user][3] = accumulation_DCF    "
									},
									"id": 1126,
									"mutability": "mutable",
									"name": "_mineInfo",
									"nameLocation": "2460:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2835,
									"src": "2405:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1125,
										"keyType": {
											"id": 1121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2413:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2405:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1124,
											"keyType": {
												"id": 1122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2432:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2424:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2443:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "2579:305:9",
										"statements": [
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1137,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2590:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1138,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "2598:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2590:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2590:13:9"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "2614:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "2624:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2614:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2614:17:9"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2642:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2655:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2642:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "2642:18:9"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1149,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "2671:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1150,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "2687:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2687:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2671:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "2671:31:9"
											},
											{
												"expression": {
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1154,
														"name": "_salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "2714:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1155,
														"name": "salt_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2722:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2714:13:9"
											},
											{
												"expression": {
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1158,
														"name": "_TokenperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2741:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135653138",
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2758:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15000000000000000000_by_1",
															"typeString": "int_const 15000000000000000000"
														},
														"value": "15e18"
													},
													"src": "2741:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "2741:22:9"
											},
											{
												"expression": {
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1162,
														"name": "_totalPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "2777:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3436303030",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_46000_by_1",
															"typeString": "int_const 46000"
														},
														"value": "46000"
													},
													"src": "2777:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "2777:19:9"
											},
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1166,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2807:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1167,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2827:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2833:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2827:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2807:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "2807:32:9"
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "_totalDCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "2851:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "totalDCF_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2863:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2851:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2851:21:9"
											}
										]
									},
									"id": 1176,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2516:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2502:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2502:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2537:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2523:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2523:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "salt_",
												"nameLocation": "2554:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2546:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "totalDCF_",
												"nameLocation": "2568:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2560:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2560:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:77:9"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2579:0:9"
									},
									"scope": 2835,
									"src": "2490:394:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2944
									],
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "2979:484:9",
										"statements": [
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "difference",
														"nameLocation": "2998:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "2990:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2990:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"initialValue": {
													"arguments": [
														{
															"id": 1189,
															"name": "_startBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3028:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1186,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3011:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3017:6:9",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3011:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3024:3:9",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "3011:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2990:56:9"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "3065:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3057:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3057:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"arguments": [
														{
															"id": 1195,
															"name": "_startBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3085:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3073:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3073:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3057:46:9"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "3122:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3114:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3114:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1201,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3140:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3146:6:9",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3140:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3128:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3128:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3114:39:9"
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"mutability": "mutable",
														"name": "mined_area",
														"nameLocation": "3172:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3164:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1205,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3164:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3220:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1212,
																	"name": "difference",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "3204:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1209,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "3195:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1207,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "3185:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3191:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 915,
																		"src": "3185:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3185:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3200:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "3185:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3185:30:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3216:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3185:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3164:58:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "_totalDCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3312:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1219,
														"name": "mined_area",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3325:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3312:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1232,
													"nodeType": "Block",
													"src": "3400:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3430:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3422:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1227,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3422:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3422:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1183,
															"id": 1231,
															"nodeType": "Return",
															"src": "3415:17:9"
														}
													]
												},
												"id": 1233,
												"nodeType": "IfStatement",
												"src": "3309:135:9",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "3337:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "mined_area",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1206,
																		"src": "3373:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1221,
																		"name": "_totalDCF",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "3359:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3369:3:9",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 930,
																	"src": "3359:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:25:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1183,
															"id": 1225,
															"nodeType": "Return",
															"src": "3352:32:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c29dbcca",
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalDugUp",
									"nameLocation": "2907:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2953:8:9"
									},
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "2926:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2918:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2918:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2917:22:9"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2971:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2970:9:9"
									},
									"scope": 2835,
									"src": "2898:565:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2916
									],
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "3549:480:9",
										"statements": [
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "difference",
														"nameLocation": "3574:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "3566:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3566:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1248,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3604:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1250,
																"indexExpression": {
																	"id": 1249,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "3614:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3604:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1252,
															"indexExpression": {
																"hexValue": "31",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3620:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3604:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1245,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3587:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3593:6:9",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3587:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3600:3:9",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "3587:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3587:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3566:57:9"
											},
											{
												"assignments": [
													1256
												],
												"declarations": [
													{
														"constant": false,
														"id": 1256,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "3642:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "3634:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3634:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1258,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3662:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1260,
																"indexExpression": {
																	"id": 1259,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "3672:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3662:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1262,
															"indexExpression": {
																"hexValue": "31",
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3678:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3662:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3650:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3650:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3634:47:9"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "3700:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "3692:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3692:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1268,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3718:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3724:6:9",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3718:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3706:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3692:39:9"
											},
											{
												"assignments": [
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1273,
														"mutability": "mutable",
														"name": "mined_area",
														"nameLocation": "3750:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "3742:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3742:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3798:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1279,
																	"name": "difference",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "3782:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1276,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "3773:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1274,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "3763:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3769:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 915,
																		"src": "3763:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3763:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3778:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "3763:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3763:30:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3794:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3763:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3742:58:9"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "3898:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "3893:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1285,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3893:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"arguments": [
														{
															"id": 1296,
															"name": "_totalPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3950:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1289,
																			"name": "_mineInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "3926:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1291,
																		"indexExpression": {
																			"id": 1290,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "3936:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3926:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1293,
																	"indexExpression": {
																		"hexValue": "32",
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3942:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3926:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1287,
																	"name": "mined_area",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "3911:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3922:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "3911:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3911:34:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3946:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "3911:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3893:69:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "4003:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1299,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "3980:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1301,
																"indexExpression": {
																	"id": 1300,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "3990:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3980:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1303,
															"indexExpression": {
																"hexValue": "33",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3996:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3980:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3999:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "3980:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3980:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1307,
												"nodeType": "Return",
												"src": "3973:41:9"
											}
										]
									},
									"functionSelector": "b8ba6007",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "3488:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3524:8:9"
									},
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3507:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3499:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:14:9"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3541:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:9:9"
									},
									"scope": 2835,
									"src": "3479:550:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2923
									],
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "4181:330:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1317,
														"name": "_BlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "4195:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1318,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "4210:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4195:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "4192:95:9",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "4228:59:9",
													"statements": [
														{
															"expression": {
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1320,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "4243:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1321,
																	"name": "_startBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "4258:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4243:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1323,
															"nodeType": "ExpressionStatement",
															"src": "4243:32:9"
														}
													]
												}
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "DCFperBlock",
														"nameLocation": "4305:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "4297:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4297:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653534",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4338:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(47 digits omitted)...0000"
															},
															"value": "1e54"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(47 digits omitted)...0000"
															}
														],
														"expression": {
															"id": 1328,
															"name": "_TokenperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "4319:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4334:3:9",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "4319:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4297:46:9"
											},
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "BlockDifficult",
														"nameLocation": "4373:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "4365:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4365:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1338,
												"initialValue": {
													"arguments": [
														{
															"id": 1336,
															"name": "_BlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4400:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "difficult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "4390:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4390:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4365:48:9"
											},
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "DugUP",
														"nameLocation": "4437:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "4429:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1339,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4429:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1345,
												"initialValue": {
													"arguments": [
														{
															"id": 1343,
															"name": "BlockDifficult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "4461:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1341,
															"name": "DCFperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "4445:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4457:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "4445:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4445:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4429:47:9"
											},
											{
												"expression": {
													"id": 1346,
													"name": "DugUP",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "4494:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1316,
												"id": 1347,
												"nodeType": "Return",
												"src": "4487:12:9"
											}
										]
									},
									"functionSelector": "4be3403c",
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "4109:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1313,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4155:8:9"
									},
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "4130:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4122:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4121:22:9"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4173:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:9:9"
									},
									"scope": 2835,
									"src": "4100:411:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2937
									],
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "4596:159:9",
										"statements": [
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "BlockDifficult",
														"nameLocation": "4612:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "4607:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4607:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"arguments": [
														{
															"id": 1364,
															"name": "_startBlockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "4654:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4644:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1359,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "4627:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4640:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "4627:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4627:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4650:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 960,
														"src": "4627:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4607:65:9"
											},
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1367,
														"name": "BlockDifficult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "4683:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1368,
															"name": "BlockDifficult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "4698:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "34",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4714:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "4698:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4683:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "4683:32:9"
											},
											{
												"expression": {
													"id": 1373,
													"name": "BlockDifficult",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "4733:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1374,
												"nodeType": "Return",
												"src": "4726:21:9"
											}
										]
									},
									"functionSelector": "d993226b",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "difficult",
									"nameLocation": "4530:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4570:8:9"
									},
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "4545:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "4540:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4540:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4539:19:9"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "4588:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:9:9"
									},
									"scope": 2835,
									"src": "4521:234:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2930
									],
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "4850:216:9",
										"statements": [
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "_power",
														"nameLocation": "4879:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1414,
														"src": "4871:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4871:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"id": 1391,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4911:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1388,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "4900:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1386,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "4888:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4896:3:9",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "4888:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4888:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4907:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "4888:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4888:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4871:48:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1394,
															"name": "_power",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "4934:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3130",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4941:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "4934:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4947:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4934:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "4990:45:9",
													"statements": [
														{
															"expression": {
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1404,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "5005:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1405,
																		"name": "_power",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "5014:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5021:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "5014:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5005:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "5005:18:9"
														}
													]
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "4931:104:9",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "4949:37:9",
													"statements": [
														{
															"expression": {
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1399,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "4964:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4973:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4964:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1402,
															"nodeType": "ExpressionStatement",
															"src": "4964:10:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1412,
													"name": "_power",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1385,
													"src": "5052:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1413,
												"nodeType": "Return",
												"src": "5045:13:9"
											}
										]
									},
									"functionSelector": "e29301f9",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIDPower",
									"nameLocation": "4783:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4825:8:9"
									},
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4805:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4797:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4796:17:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4842:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:9:9"
									},
									"scope": 2835,
									"src": "4774:292:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "5247:27:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5265:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1420,
												"id": 1422,
												"nodeType": "Return",
												"src": "5258:8:9"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "5093:83:9",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5191:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5204:2:9"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "5238:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5237:9:9"
									},
									"scope": 2835,
									"src": "5182:92:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2905
									],
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "5470:250:9",
										"statements": [
											{
												"id": 1438,
												"nodeType": "UncheckedBlock",
												"src": "5623:90:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1431,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "5655:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1432,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "5671:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5655:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1434,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "5686:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5686:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5655:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1430,
														"id": 1437,
														"nodeType": "Return",
														"src": "5648:53:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "5282:120:9",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5417:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1427,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5443:8:9"
									},
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5428:2:9"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "5461:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:9:9"
									},
									"scope": 2835,
									"src": "5408:312:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "5783:92:9",
										"statements": [
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "5801:67:9",
												"statements": [
													{
														"expression": {
															"id": 1445,
															"name": "_totalPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "5845:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1444,
														"id": 1446,
														"nodeType": "Return",
														"src": "5838:18:9"
													}
												]
											}
										]
									},
									"functionSelector": "db3ad22c",
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPower",
									"nameLocation": "5739:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5749:2:9"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "5774:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5774:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5773:9:9"
									},
									"scope": 2835,
									"src": "5730:145:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "5937:112:9",
										"statements": [
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "5955:87:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1454,
																	"name": "_maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "5987:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1455,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "6000:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5987:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1457,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "6015:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6015:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5987:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1453,
														"id": 1460,
														"nodeType": "Return",
														"src": "5980:50:9"
													}
												]
											}
										]
									},
									"functionSelector": "d5abeb01",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "5894:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5903:2:9"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "5928:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5927:9:9"
									},
									"scope": 2835,
									"src": "5885:164:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "6145:92:9",
										"statements": [
											{
												"id": 1478,
												"nodeType": "UncheckedBlock",
												"src": "6163:67:9",
												"statements": [
													{
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1472,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "6195:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1474,
																"indexExpression": {
																	"id": 1473,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "6205:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6195:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1476,
															"indexExpression": {
																"id": 1475,
																"name": "number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "6211:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6195:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1471,
														"id": 1477,
														"nodeType": "Return",
														"src": "6188:30:9"
													}
												]
											}
										]
									},
									"functionSelector": "eff0730d",
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineInfo",
									"nameLocation": "6075:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6092:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "6084:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6084:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "6106:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "6098:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6083:30:9"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "6136:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6136:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6135:9:9"
									},
									"scope": 2835,
									"src": "6066:171:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "6398:227:9",
										"statements": [
											{
												"id": 1491,
												"nodeType": "UncheckedBlock",
												"src": "6543:75:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1486,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "6575:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1487,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "6591:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6591:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6575:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1485,
														"id": 1490,
														"nodeType": "Return",
														"src": "6568:38:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "6257:79:9",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6351:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6363:2:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "6389:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6389:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6388:9:9"
									},
									"scope": 2835,
									"src": "6342:283:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										726,
										738
									],
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "6805:197:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "6836:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1506,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "6856:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1505,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "6851:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6851:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6865:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "6851:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "6836:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "6893:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1512,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "6913:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1511,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "6908:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6908:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6930:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "6908:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "6893:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6836:105:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1519,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "6982:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1517,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "6958:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$2835_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6964:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 726,
															"src": "6958:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6958:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6836:158:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1503,
												"id": 1522,
												"nodeType": "Return",
												"src": "6816:178:9"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "6633:58:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6706:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1500,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1498,
												"name": "ERC165",
												"nameLocations": [
													"6773:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 727,
												"src": "6773:6:9"
											},
											{
												"id": 1499,
												"name": "IERC165",
												"nameLocations": [
													"6781:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 739,
												"src": "6781:7:9"
											}
										],
										"src": "6764:25:9"
									},
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "6731:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "6724:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6724:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6723:20:9"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "6799:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6799:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6798:6:9"
									},
									"scope": 2835,
									"src": "6697:305:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "7139:133:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1533,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "7154:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7171:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7163:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1534,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7163:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7163:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7154:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "7150:60:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1539,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "7182:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7182:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1541,
													"nodeType": "RevertStatement",
													"src": "7175:35:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1545,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "7236:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1547,
																"indexExpression": {
																	"id": 1546,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "7249:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7236:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7256:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2892,
															"src": "7236:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7228:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7228:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7228:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1532,
												"id": 1550,
												"nodeType": "Return",
												"src": "7221:43:9"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "7010:50:9",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7075:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1529,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7112:8:9"
									},
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7093:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "7085:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7084:15:9"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "7130:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7130:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7129:9:9"
									},
									"scope": 2835,
									"src": "7066:206:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "7424:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1562,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "7450:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1564,
																"indexExpression": {
																	"id": 1563,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "7463:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7450:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7470:12:9",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2894,
															"src": "7450:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7442:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7442:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7442:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1567,
												"nodeType": "Return",
												"src": "7435:48:9"
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "7280:68:9",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7363:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7385:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7377:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:15:9"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "7415:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7415:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7414:9:9"
									},
									"scope": 2835,
									"src": "7354:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "7659:67:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1579,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "7685:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1581,
																"indexExpression": {
																	"id": 1580,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "7698:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7685:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7705:12:9",
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2896,
															"src": "7685:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7677:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7677:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7677:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1584,
												"nodeType": "Return",
												"src": "7670:48:9"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "7499:84:9",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7598:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7620:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "7612:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7611:15:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "7650:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7650:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7649:9:9"
									},
									"scope": 2835,
									"src": "7589:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "7907:49:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1594,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "7925:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
															}
														},
														"id": 1596,
														"indexExpression": {
															"id": 1595,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7938:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7925:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$2899_storage",
															"typeString": "struct IERC721A.AddressData storage ref"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7945:3:9",
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2898,
													"src": "7925:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1598,
												"nodeType": "Return",
												"src": "7918:30:9"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "7734:104:9",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7853:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7869:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7861:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7861:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7860:15:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "7899:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1591,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7899:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:8:9"
									},
									"scope": 2835,
									"src": "7844:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "8198:48:9",
										"statements": [
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1608,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "8209:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 1610,
															"indexExpression": {
																"id": 1609,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "8222:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8209:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8229:3:9",
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2898,
														"src": "8209:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1612,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "8235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "8209:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "8209:29:9"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "7965:174:9",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8154:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8170:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "8162:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8184:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "8177:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1604,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8177:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8161:27:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8198:0:9"
									},
									"scope": 2835,
									"src": "8145:101:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "8533:1026:9",
										"statements": [
											{
												"assignments": [
													1626
												],
												"declarations": [
													{
														"constant": false,
														"id": 1626,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "8552:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "8544:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8544:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"id": 1627,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1619,
													"src": "8559:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8544:22:9"
											},
											{
												"id": 1685,
												"nodeType": "UncheckedBlock",
												"src": "8579:924:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1629,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "8608:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8608:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1631,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "8627:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8608:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1684,
														"nodeType": "IfStatement",
														"src": "8604:888:9",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1633,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "8637:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1634,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "8644:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8637:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1683,
															"nodeType": "IfStatement",
															"src": "8633:859:9",
															"trueBody": {
																"id": 1682,
																"nodeType": "Block",
																"src": "8659:833:9",
																"statements": [
																	{
																		"assignments": [
																			1638
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1638,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "8700:9:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1682,
																				"src": "8678:31:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1637,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1636,
																						"name": "TokenOwnership",
																						"nameLocations": [
																							"8678:14:9"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2890,
																						"src": "8678:14:9"
																					},
																					"referencedDeclaration": 2890,
																					"src": "8678:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																						"typeString": "struct IERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1642,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1639,
																				"name": "_ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "8712:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																					"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																				}
																			},
																			"id": 1641,
																			"indexExpression": {
																				"id": 1640,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1626,
																				"src": "8724:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8712:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																				"typeString": "struct IERC721A.TokenOwnership storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8678:51:9"
																	},
																	{
																		"condition": {
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "8752:17:9",
																			"subExpression": {
																				"expression": {
																					"id": 1643,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1638,
																					"src": "8753:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8763:6:9",
																				"memberName": "burned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2889,
																				"src": "8753:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1681,
																		"nodeType": "IfStatement",
																		"src": "8748:729:9",
																		"trueBody": {
																			"id": 1680,
																			"nodeType": "Block",
																			"src": "8771:706:9",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1646,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1638,
																								"src": "8798:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																									"typeString": "struct IERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 1647,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8808:4:9",
																							"memberName": "addr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2885,
																							"src": "8798:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1650,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8824:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1649,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "8816:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1648,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "8816:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8816:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "8798:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1656,
																					"nodeType": "IfStatement",
																					"src": "8794:101:9",
																					"trueBody": {
																						"id": 1655,
																						"nodeType": "Block",
																						"src": "8828:67:9",
																						"statements": [
																							{
																								"expression": {
																									"id": 1653,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1638,
																									"src": "8862:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"functionReturnParameters": 1624,
																								"id": 1654,
																								"nodeType": "Return",
																								"src": "8855:16:9"
																							}
																						]
																					}
																				},
																				{
																					"body": {
																						"id": 1678,
																						"nodeType": "Block",
																						"src": "9210:248:9",
																						"statements": [
																							{
																								"expression": {
																									"id": 1659,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "--",
																									"prefix": false,
																									"src": "9237:6:9",
																									"subExpression": {
																										"id": 1658,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1626,
																										"src": "9237:4:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1660,
																								"nodeType": "ExpressionStatement",
																								"src": "9237:6:9"
																							},
																							{
																								"expression": {
																									"id": 1665,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1661,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1638,
																										"src": "9270:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																											"typeString": "struct IERC721A.TokenOwnership memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1662,
																											"name": "_ownerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1104,
																											"src": "9282:11:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																												"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																											}
																										},
																										"id": 1664,
																										"indexExpression": {
																											"id": 1663,
																											"name": "curr",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1626,
																											"src": "9294:4:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "9282:17:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																											"typeString": "struct IERC721A.TokenOwnership storage ref"
																										}
																									},
																									"src": "9270:29:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"id": 1666,
																								"nodeType": "ExpressionStatement",
																								"src": "9270:29:9"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 1673,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1667,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1638,
																											"src": "9330:9:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																												"typeString": "struct IERC721A.TokenOwnership memory"
																											}
																										},
																										"id": 1668,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "9340:4:9",
																										"memberName": "addr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2885,
																										"src": "9330:14:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 1671,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "9356:1:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 1670,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "9348:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 1669,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "9348:7:9",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 1672,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9348:10:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "9330:28:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1677,
																								"nodeType": "IfStatement",
																								"src": "9326:109:9",
																								"trueBody": {
																									"id": 1676,
																									"nodeType": "Block",
																									"src": "9360:75:9",
																									"statements": [
																										{
																											"expression": {
																												"id": 1674,
																												"name": "ownership",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1638,
																												"src": "9398:9:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																													"typeString": "struct IERC721A.TokenOwnership memory"
																												}
																											},
																											"functionReturnParameters": 1624,
																											"id": 1675,
																											"nodeType": "Return",
																											"src": "9391:16:9"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"hexValue": "74727565",
																						"id": 1657,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9204:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"id": 1679,
																					"nodeType": "WhileStatement",
																					"src": "9197:261:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1686,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2868,
														"src": "9520:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9520:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "RevertStatement",
												"src": "9513:38:9"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "8254:188:9",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "8457:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8478:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "8470:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8470:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8469:17:9"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "8510:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1621,
														"name": "TokenOwnership",
														"nameLocations": [
															"8510:14:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2890,
														"src": "8510:14:9"
													},
													"referencedDeclaration": 2890,
													"src": "8510:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8509:23:9"
									},
									"scope": 2835,
									"src": "8448:1111:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "9694:52:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1700,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "9725:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1699,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "9712:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2890_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9712:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9734:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2885,
													"src": "9712:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1698,
												"id": 1703,
												"nodeType": "Return",
												"src": "9705:33:9"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "9567:48:9",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "9630:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1695,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9667:8:9"
									},
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9646:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "9638:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9637:17:9"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "9685:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9685:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9684:9:9"
									},
									"scope": 2835,
									"src": "9621:125:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "9882:31:9",
										"statements": [
											{
												"expression": {
													"id": 1712,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1097,
													"src": "9900:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1713,
												"nodeType": "Return",
												"src": "9893:12:9"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "9754:53:9",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "9822:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1708,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9849:8:9"
									},
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9826:2:9"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "9867:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1709,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9867:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9866:15:9"
									},
									"scope": 2835,
									"src": "9813:100:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "10053:33:9",
										"statements": [
											{
												"expression": {
													"id": 1722,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1099,
													"src": "10071:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1723,
												"nodeType": "Return",
												"src": "10064:14:9"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "9921:55:9",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9991:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1718,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10020:8:9"
									},
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9997:2:9"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "10038:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10038:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10037:15:9"
									},
									"scope": 2835,
									"src": "9982:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "10245:230:9",
										"statements": [
											{
												"condition": {
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10260:17:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1735,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "10269:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1734,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "10261:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10261:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1741,
												"nodeType": "IfStatement",
												"src": "10256:59:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1738,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2883,
															"src": "10286:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10286:29:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1740,
													"nodeType": "RevertStatement",
													"src": "10279:36:9"
												}
											},
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10342:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "10328:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1742,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10328:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1746,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1744,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "10352:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10352:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10328:34:9"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1749,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "10386:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10380:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1747,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10380:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10380:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10395:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10380:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10405:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10380:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10465:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10380:87:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1758,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "10433:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1759,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "10442:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10450:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "10442:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10442:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1756,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10416:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10420:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10416:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10416:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10409:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1754,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10409:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10409:53:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1766,
												"nodeType": "Return",
												"src": "10373:94:9"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "10094:57:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10166:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10212:8:9"
									},
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10183:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "10175:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10174:17:9"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "10230:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10230:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10229:15:9"
									},
									"scope": 2835,
									"src": "10157:318:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "10789:119:9",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d654e373753715459457258644d5134684c3431623166614778414b7434515741354e475646755a753978486e2f",
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10807:83:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d8cc7cbf95b52afa2322fac553d3c4e20f5096fb87da64785a945de91007c7b2",
														"typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/\""
													},
													"value": "https://gateway.pinata.cloud/ipfs/QmeN77SqTYErXdMQ4hL41b1faGxAKt4QWA5NGVFuZu9xHn/"
												},
												"functionReturnParameters": 1773,
												"id": 1775,
												"nodeType": "Return",
												"src": "10800:90:9"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "10483:234:9",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10732:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10740:2:9"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "10774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10773:15:9"
									},
									"scope": 2835,
									"src": "10723:185:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "11032:310:9",
										"statements": [
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11051:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "11043:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1786,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11043:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"arguments": [
														{
															"id": 1790,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "11075:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1788,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "11059:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$2835_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11067:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1705,
														"src": "11059:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11059:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11043:40:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1793,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "11098:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1794,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "11104:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11098:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "IfStatement",
												"src": "11094:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1796,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "11118:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11118:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1798,
													"nodeType": "RevertStatement",
													"src": "11111:31:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1800,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "11159:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11159:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1802,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "11175:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11159:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"nodeType": "IfStatement",
												"src": "11155:139:9",
												"trueBody": {
													"condition": {
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "11185:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1805,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "11203:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1806,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "11210:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11210:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1804,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1897,
																"src": "11186:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11186:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1814,
													"nodeType": "IfStatement",
													"src": "11182:112:9",
													"trueBody": {
														"id": 1813,
														"nodeType": "Block",
														"src": "11225:69:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1810,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2847,
																		"src": "11247:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11247:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1812,
																"nodeType": "RevertStatement",
																"src": "11240:42:9"
															}
														]
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1817,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "11315:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1818,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "11319:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1819,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "11328:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1816,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2753,
														"src": "11306:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11306:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "11306:28:9"
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "10916:48:9",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10979:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1784,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11023:8:9"
									},
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10995:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "10987:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11007:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "10999:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10999:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10986:29:9"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11032:0:9"
									},
									"scope": 2835,
									"src": "10970:372:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "11485:127:9",
										"statements": [
											{
												"condition": {
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11500:17:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1833,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "11509:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1832,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "11501:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11501:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1839,
												"nodeType": "IfStatement",
												"src": "11496:64:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1836,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2850,
															"src": "11526:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11526:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1838,
													"nodeType": "RevertStatement",
													"src": "11519:41:9"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1840,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "11580:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1842,
													"indexExpression": {
														"id": 1841,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "11596:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11580:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1843,
												"nodeType": "Return",
												"src": "11573:31:9"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "11350:52:9",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "11417:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1828,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11458:8:9"
									},
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11437:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "11429:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11429:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11428:17:9"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "11476:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11475:9:9"
									},
									"scope": 2835,
									"src": "11408:204:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "11768:203:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "11783:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1855,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "11795:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11795:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11783:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1861,
												"nodeType": "IfStatement",
												"src": "11779:54:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1858,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "11816:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11816:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1860,
													"nodeType": "RevertStatement",
													"src": "11809:24:9"
												}
											},
											{
												"expression": {
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1862,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "11846:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1866,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1863,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "11865:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11865:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11846:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1867,
														"indexExpression": {
															"id": 1865,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "11879:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11846:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1868,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "11891:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11846:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "11846:53:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1872,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "11930:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1874,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "11944:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1875,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "11954:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1871,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "11915:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11915:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1877,
												"nodeType": "EmitStatement",
												"src": "11910:53:9"
											}
										]
									},
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "11620:58:9",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "11693:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1852,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11759:8:9"
									},
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11719:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "11711:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11734:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "11729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11729:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11710:33:9"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11768:0:9"
									},
									"scope": 2835,
									"src": "11684:287:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "12145:61:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1890,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "12163:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1892,
														"indexExpression": {
															"id": 1891,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "12182:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12163:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1894,
													"indexExpression": {
														"id": 1893,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "12189:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12163:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1889,
												"id": 1895,
												"nodeType": "Return",
												"src": "12156:42:9"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "11979:57:9",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "12051:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1886,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12121:8:9"
									},
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12076:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "12068:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12091:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "12083:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12083:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12067:33:9"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "12139:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12139:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12138:6:9"
									},
									"scope": 2835,
									"src": "12042:164:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "12396:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1909,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "12417:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1910,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "12423:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "12427:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1908,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2484,
														"src": "12407:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12407:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "12407:28:9"
											}
										]
									},
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "12214:53:9",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "12282:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1906,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12387:8:9"
									},
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12313:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "12305:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12305:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12336:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "12328:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12328:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12357:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "12349:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12349:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12294:77:9"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12396:0:9"
									},
									"scope": 2835,
									"src": "12273:170:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "12641:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1927,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "12669:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "12675:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1929,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "12679:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12688:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1926,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1934,
															1970
														],
														"referencedDeclaration": 1970,
														"src": "12652:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12652:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "12652:39:9"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "12451:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "12523:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1924,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12632:8:9"
									},
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12558:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "12550:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12550:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12581:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "12573:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12602:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "12594:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12594:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12539:77:9"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12641:0:9"
									},
									"scope": 2835,
									"src": "12514:185:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "12926:214:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "12947:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "12953:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1950,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "12957:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1947,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2484,
														"src": "12937:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12937:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "12937:28:9"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "12980:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12983:10:9",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "12980:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12980:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1968,
												"nodeType": "IfStatement",
												"src": "12976:157:9",
												"trueBody": {
													"condition": {
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13000:57:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1957,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "13032:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1958,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "13038:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1959,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "13042:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1960,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "13051:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1956,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2808,
																"src": "13001:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13001:56:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1967,
													"nodeType": "IfStatement",
													"src": "12997:136:9",
													"trueBody": {
														"id": 1966,
														"nodeType": "Block",
														"src": "13059:74:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1963,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2877,
																		"src": "13081:38:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13081:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1965,
																"nodeType": "RevertStatement",
																"src": "13074:47:9"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "12707:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "12779:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1945,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12917:8:9"
									},
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12814:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "12806:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12806:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12837:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "12829:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12829:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12858:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "12850:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12850:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12889:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "12876:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12876:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12795:106:9"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12926:0:9"
									},
									"scope": 2835,
									"src": "12770:370:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "13417:111:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1978,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "13435:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13435:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1980,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "13454:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13435:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1982,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "13465:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1983,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "13475:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13465:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "13435:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13492:28:9",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1986,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "13493:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																		"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1988,
																"indexExpression": {
																	"id": 1987,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "13505:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13493:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																	"typeString": "struct IERC721A.TokenOwnership storage ref"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13514:6:9",
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2889,
															"src": "13493:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13435:85:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1992,
												"nodeType": "Return",
												"src": "13428:92:9"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "13148:200:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   (`_mint`),"
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "13363:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13379:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "13371:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13371:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13370:17:9"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "13411:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13411:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13410:6:9"
									},
									"scope": 2835,
									"src": "13354:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "13670:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "13691:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2004,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "13695:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13705:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2002,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2009,
															2240
														],
														"referencedDeclaration": 2240,
														"src": "13681:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13681:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "13681:27:9"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "13536:70:9",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13621:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13639:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "13631:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13631:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "13651:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "13643:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13643:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13630:30:9"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13670:0:9"
									},
									"scope": 2835,
									"src": "13612:104:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "14201:2124:9",
										"statements": [
											{
												"assignments": [
													2020
												],
												"declarations": [
													{
														"constant": false,
														"id": 2020,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "14223:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 2239,
														"src": "14215:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14215:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"id": 2021,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1091,
													"src": "14238:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14215:36:9"
											},
											{
												"expression": {
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2023,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "14278:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2027,
															"indexExpression": {
																"expression": {
																	"id": 2024,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14288:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14292:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14288:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14278:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2028,
														"indexExpression": {
															"hexValue": "33",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14300:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14278:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2030,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14316:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14320:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14316:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2029,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "14305:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14305:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14278:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "14278:49:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2035,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "14369:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14383:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14375:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2036,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14375:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14375:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14369:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2044,
												"nodeType": "IfStatement",
												"src": "14365:48:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2041,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "14394:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14394:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2043,
													"nodeType": "RevertStatement",
													"src": "14387:26:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2045,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "14428:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14440:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14428:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2051,
												"nodeType": "IfStatement",
												"src": "14424:44:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2048,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "14450:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14450:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2050,
													"nodeType": "RevertStatement",
													"src": "14443:25:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14511:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14503:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2053,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14503:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14503:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2057,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "14515:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2058,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "14519:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2059,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "14533:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2052,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2821,
														"src": "14481:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14481:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "14481:61:9"
											},
											{
												"id": 2218,
												"nodeType": "UncheckedBlock",
												"src": "14794:1403:9",
												"statements": [
													{
														"expression": {
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2062,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "14819:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2064,
																	"indexExpression": {
																		"id": 2063,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "14832:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14819:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14836:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2892,
																"src": "14819:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2068,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "14854:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14847:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2066,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "14847:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14847:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14819:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2071,
														"nodeType": "ExpressionStatement",
														"src": "14819:44:9"
													},
													{
														"expression": {
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2072,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "14878:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2074,
																	"indexExpression": {
																		"id": 2073,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "14891:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14878:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14895:12:9",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2894,
																"src": "14878:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2078,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "14918:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14911:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2076,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "14911:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14911:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14878:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2081,
														"nodeType": "ExpressionStatement",
														"src": "14878:49:9"
													},
													{
														"expression": {
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2082,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "14944:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2084,
																	"indexExpression": {
																		"id": 2083,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "14956:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14944:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14970:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2885,
																"src": "14944:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2086,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "14977:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14944:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2088,
														"nodeType": "ExpressionStatement",
														"src": "14944:35:9"
													},
													{
														"expression": {
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2089,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "14994:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2091,
																	"indexExpression": {
																		"id": 2090,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "15006:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14994:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15020:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2887,
																"src": "14994:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2095,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "15044:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15050:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "15044:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15037:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2093,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "15037:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15037:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14994:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2099,
														"nodeType": "ExpressionStatement",
														"src": "14994:66:9"
													},
													{
														"assignments": [
															2101
														],
														"declarations": [
															{
																"constant": false,
																"id": 2101,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "15085:12:9",
																"nodeType": "VariableDeclaration",
																"scope": 2218,
																"src": "15077:20:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2100,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15077:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2103,
														"initialValue": {
															"id": 2102,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "15100:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15077:35:9"
													},
													{
														"assignments": [
															2105
														],
														"declarations": [
															{
																"constant": false,
																"id": 2105,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "15135:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 2218,
																"src": "15127:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15127:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2109,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2106,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "15141:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2107,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "15156:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15141:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15127:37:9"
													},
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2110,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "15185:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15188:10:9",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "15185:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15185:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2212,
															"nodeType": "Block",
															"src": "15845:298:9",
															"statements": [
																{
																	"body": {
																		"id": 2207,
																		"nodeType": "Block",
																		"src": "15867:233:9",
																		"statements": [
																			{
																				"assignments": [
																					2175
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2175,
																						"mutability": "mutable",
																						"name": "power",
																						"nameLocation": "15895:5:9",
																						"nodeType": "VariableDeclaration",
																						"scope": 2207,
																						"src": "15890:10:9",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2174,
																							"name": "uint",
																							"nodeType": "ElementaryTypeName",
																							"src": "15890:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2179,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 2177,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2101,
																							"src": "15916:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2176,
																						"name": "tokenIDPower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1415,
																						"src": "15903:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 2178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15903:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "15890:39:9"
																			},
																			{
																				"expression": {
																					"id": 2195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2180,
																								"name": "_mineInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1126,
																								"src": "15952:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 2184,
																							"indexExpression": {
																								"expression": {
																									"id": 2181,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "15962:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2182,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15966:6:9",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "15962:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15952:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 2185,
																						"indexExpression": {
																							"hexValue": "32",
																							"id": 2183,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15974:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "15952:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2193,
																								"name": "power",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2175,
																								"src": "16006:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 2186,
																										"name": "_mineInfo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1126,
																										"src": "15977:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(uint256 => uint256))"
																										}
																									},
																									"id": 2189,
																									"indexExpression": {
																										"expression": {
																											"id": 2187,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "15987:3:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2188,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "15991:6:9",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "15987:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15977:21:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 2191,
																								"indexExpression": {
																									"hexValue": "32",
																									"id": 2190,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15999:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "15977:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2192,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "16002:3:9",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 915,
																							"src": "15977:28:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15977:35:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15952:60:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2196,
																				"nodeType": "ExpressionStatement",
																				"src": "15952:60:9"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2200,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "16057:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2199,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "16049:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2198,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "16049:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2201,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "16049:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2202,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2012,
																							"src": "16061:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2204,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "16065:14:9",
																							"subExpression": {
																								"id": 2203,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2101,
																								"src": "16065:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2197,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "16040:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16040:40:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2206,
																				"nodeType": "EmitStatement",
																				"src": "16035:45:9"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2208,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2101,
																			"src": "16108:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2209,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "16123:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16108:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2211,
																	"nodeType": "DoWhileStatement",
																	"src": "15864:264:9"
																}
															]
														},
														"id": 2213,
														"nodeType": "IfStatement",
														"src": "15181:962:9",
														"trueBody": {
															"id": 2173,
															"nodeType": "Block",
															"src": "15202:637:9",
															"statements": [
																{
																	"body": {
																		"id": 2161,
																		"nodeType": "Block",
																		"src": "15224:451:9",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2116,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15269:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15261:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2114,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15261:7:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15261:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2118,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2012,
																							"src": "15273:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2119,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2101,
																							"src": "15277:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2113,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "15252:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15252:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2121,
																				"nodeType": "EmitStatement",
																				"src": "15247:43:9"
																			},
																			{
																				"assignments": [
																					2123
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2123,
																						"mutability": "mutable",
																						"name": "power",
																						"nameLocation": "15318:5:9",
																						"nodeType": "VariableDeclaration",
																						"scope": 2161,
																						"src": "15313:10:9",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2122,
																							"name": "uint",
																							"nodeType": "ElementaryTypeName",
																							"src": "15313:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2127,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 2125,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2101,
																							"src": "15339:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2124,
																						"name": "tokenIDPower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1415,
																						"src": "15326:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 2126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15326:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "15313:39:9"
																			},
																			{
																				"expression": {
																					"id": 2143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2128,
																								"name": "_mineInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1126,
																								"src": "15375:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 2132,
																							"indexExpression": {
																								"expression": {
																									"id": 2129,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "15385:3:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2130,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15389:6:9",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "15385:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15375:21:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 2133,
																						"indexExpression": {
																							"hexValue": "32",
																							"id": 2131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15397:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "15375:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2141,
																								"name": "power",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2123,
																								"src": "15429:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 2134,
																										"name": "_mineInfo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1126,
																										"src": "15400:9:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(uint256 => uint256))"
																										}
																									},
																									"id": 2137,
																									"indexExpression": {
																										"expression": {
																											"id": 2135,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "15410:3:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2136,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "15414:6:9",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "15410:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15400:21:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 2139,
																								"indexExpression": {
																									"hexValue": "32",
																									"id": 2138,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15422:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "15400:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2140,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15425:3:9",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 915,
																							"src": "15400:28:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2142,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15400:35:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15375:60:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2144,
																				"nodeType": "ExpressionStatement",
																				"src": "15375:60:9"
																			},
																			{
																				"condition": {
																					"id": 2155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "15462:70:9",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2148,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15502:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2147,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "15494:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2146,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "15494:7:9",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15494:10:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2150,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2012,
																								"src": "15506:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2152,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "15510:14:9",
																								"subExpression": {
																									"id": 2151,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2101,
																									"src": "15510:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2153,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2016,
																								"src": "15526:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 2145,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2808,
																							"src": "15463:30:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15463:69:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2160,
																				"nodeType": "IfStatement",
																				"src": "15458:198:9",
																				"trueBody": {
																					"id": 2159,
																					"nodeType": "Block",
																					"src": "15534:122:9",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2156,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2877,
																									"src": "15568:38:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2157,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15568:40:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2158,
																							"nodeType": "RevertStatement",
																							"src": "15561:47:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2162,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2101,
																			"src": "15683:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2163,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "15698:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15683:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2165,
																	"nodeType": "DoWhileStatement",
																	"src": "15221:482:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2166,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "15784:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2167,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2020,
																			"src": "15801:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15784:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2172,
																	"nodeType": "IfStatement",
																	"src": "15780:43:9",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2169,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "15815:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15815:8:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2171,
																		"nodeType": "ExpressionStatement",
																		"src": "15815:8:9"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2214,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "16157:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2215,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "16173:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16157:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2217,
														"nodeType": "ExpressionStatement",
														"src": "16157:28:9"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16236:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16228:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16228:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16228:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2224,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "16240:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2225,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "16244:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2226,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "16258:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2219,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "16207:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16207:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2228,
												"nodeType": "ExpressionStatement",
												"src": "16207:60:9"
											},
											{
												"expression": {
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2229,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16278:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2233,
															"indexExpression": {
																"expression": {
																	"id": 2230,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "16288:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16292:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "16288:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16278:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2234,
														"indexExpression": {
															"hexValue": "31",
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16300:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16278:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2235,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16305:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16311:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16305:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16278:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "16278:39:9"
											}
										]
									},
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "13724:359:9",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "14098:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14126:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "14118:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14118:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "14147:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "14139:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14139:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14179:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "14166:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14166:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14107:84:9"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14201:0:9"
									},
									"scope": 2835,
									"src": "14089:2236:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "16690:2424:9",
										"statements": [
											{
												"assignments": [
													2251
												],
												"declarations": [
													{
														"constant": false,
														"id": 2251,
														"mutability": "mutable",
														"name": "powerNumber",
														"nameLocation": "16713:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "16705:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16705:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2255,
												"initialValue": {
													"arguments": [
														{
															"id": 2253,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "16740:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2252,
														"name": "tokenIDPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "16727:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16727:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16705:43:9"
											},
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2256,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16767:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2259,
															"indexExpression": {
																"id": 2257,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "16777:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16767:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2260,
														"indexExpression": {
															"hexValue": "33",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16783:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16767:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2262,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "16799:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2261,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "16788:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16788:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16767:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "16767:37:9"
											},
											{
												"expression": {
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2266,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16815:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2269,
															"indexExpression": {
																"id": 2267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "16825:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16815:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2270,
														"indexExpression": {
															"hexValue": "32",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16831:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16815:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2277,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "16859:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2271,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "16836:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2273,
																	"indexExpression": {
																		"id": 2272,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "16846:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16836:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2275,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16852:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16836:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16855:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "16836:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16836:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16815:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2280,
												"nodeType": "ExpressionStatement",
												"src": "16815:56:9"
											},
											{
												"expression": {
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2281,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16882:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2284,
															"indexExpression": {
																"id": 2282,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "16892:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16882:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2285,
														"indexExpression": {
															"hexValue": "31",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16898:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16882:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2286,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16903:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16909:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16903:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16882:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "16882:33:9"
											},
											{
												"expression": {
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2290,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16926:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2293,
															"indexExpression": {
																"id": 2291,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "16936:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16926:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2294,
														"indexExpression": {
															"hexValue": "33",
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16940:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16926:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2296,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "16956:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2295,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "16945:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16945:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16926:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2299,
												"nodeType": "ExpressionStatement",
												"src": "16926:33:9"
											},
											{
												"expression": {
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2300,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "16970:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2303,
															"indexExpression": {
																"id": 2301,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "16980:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16970:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2304,
														"indexExpression": {
															"hexValue": "32",
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16984:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16970:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2311,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "17010:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2305,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "16989:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2307,
																	"indexExpression": {
																		"id": 2306,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "16999:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16989:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2309,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16989:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17006:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "16989:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16989:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16970:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2314,
												"nodeType": "ExpressionStatement",
												"src": "16970:52:9"
											},
											{
												"expression": {
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2315,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "17033:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2318,
															"indexExpression": {
																"id": 2316,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "17043:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17033:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2319,
														"indexExpression": {
															"hexValue": "31",
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17047:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17033:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2320,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "17052:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17058:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "17052:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17033:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "17033:31:9"
											},
											{
												"assignments": [
													2326
												],
												"declarations": [
													{
														"constant": false,
														"id": 2326,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "17121:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "17099:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2325,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2324,
																"name": "TokenOwnership",
																"nameLocations": [
																	"17099:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2890,
																"src": "17099:14:9"
															},
															"referencedDeclaration": 2890,
															"src": "17099:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2330,
												"initialValue": {
													"arguments": [
														{
															"id": 2328,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "17150:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2327,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "17137:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2890_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17137:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17099:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2331,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "17175:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17189:4:9",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2885,
														"src": "17175:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2333,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "17197:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17175:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2338,
												"nodeType": "IfStatement",
												"src": "17171:67:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2335,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "17210:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17210:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2337,
													"nodeType": "RevertStatement",
													"src": "17203:35:9"
												}
											},
											{
												"assignments": [
													2340
												],
												"declarations": [
													{
														"constant": false,
														"id": 2340,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "17256:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "17251:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2339,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17251:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2359,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2341,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "17277:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17277:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2343,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "17293:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17277:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2346,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2243,
																			"src": "17331:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2347,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 467,
																				"src": "17337:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17337:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2345,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "17314:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17314:36:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17277:73:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2352,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2247,
																			"src": "17379:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2351,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "17367:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17367:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2354,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "17391:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17391:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "17367:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17277:126:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2358,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17276:128:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17251:153:9"
											},
											{
												"condition": {
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17421:18:9",
													"subExpression": {
														"id": 2360,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2340,
														"src": "17422:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2365,
												"nodeType": "IfStatement",
												"src": "17417:66:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2362,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2871,
															"src": "17448:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17448:35:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2364,
													"nodeType": "RevertStatement",
													"src": "17441:42:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2366,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "17498:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17512:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17504:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2367,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17504:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17504:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17498:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2375,
												"nodeType": "IfStatement",
												"src": "17494:52:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2372,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "17523:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17523:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2374,
													"nodeType": "RevertStatement",
													"src": "17516:30:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2377,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "17581:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "17587:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "17591:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17600:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2376,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2821,
														"src": "17559:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17559:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "17559:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17684:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17676:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17676:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17676:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2388,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "17688:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2389,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "17697:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2383,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2753,
														"src": "17667:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17667:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "17667:35:9"
											},
											{
												"id": 2469,
												"nodeType": "UncheckedBlock",
												"src": "17973:1036:9",
												"statements": [
													{
														"expression": {
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2392,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "17998:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2394,
																	"indexExpression": {
																		"id": 2393,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "18011:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17998:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18017:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2892,
																"src": "17998:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18028:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17998:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2398,
														"nodeType": "ExpressionStatement",
														"src": "17998:31:9"
													},
													{
														"expression": {
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2399,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "18044:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2401,
																	"indexExpression": {
																		"id": 2400,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2245,
																		"src": "18057:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18044:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18061:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2892,
																"src": "18044:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18072:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18044:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2405,
														"nodeType": "ExpressionStatement",
														"src": "18044:29:9"
													},
													{
														"assignments": [
															2408
														],
														"declarations": [
															{
																"constant": false,
																"id": 2408,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "18113:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2469,
																"src": "18090:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2407,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2406,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"18090:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2890,
																		"src": "18090:14:9"
																	},
																	"referencedDeclaration": 2890,
																	"src": "18090:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2412,
														"initialValue": {
															"baseExpression": {
																"id": 2409,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "18124:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2411,
															"indexExpression": {
																"id": 2410,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "18136:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18124:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18090:54:9"
													},
													{
														"expression": {
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2413,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2408,
																	"src": "18159:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18168:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2885,
																"src": "18159:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2416,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "18175:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18159:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2418,
														"nodeType": "ExpressionStatement",
														"src": "18159:18:9"
													},
													{
														"expression": {
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2419,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2408,
																	"src": "18192:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "18201:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2887,
																"src": "18192:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2424,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "18225:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18231:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "18225:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18218:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2422,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "18218:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18218:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "18192:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2428,
														"nodeType": "ExpressionStatement",
														"src": "18192:49:9"
													},
													{
														"assignments": [
															2430
														],
														"declarations": [
															{
																"constant": false,
																"id": 2430,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "18501:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2469,
																"src": "18493:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18493:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2434,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "18515:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18525:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18515:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18493:33:9"
													},
													{
														"assignments": [
															2437
														],
														"declarations": [
															{
																"constant": false,
																"id": 2437,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "18564:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2469,
																"src": "18541:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2436,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2435,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"18541:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2890,
																		"src": "18541:14:9"
																	},
																	"referencedDeclaration": 2890,
																	"src": "18541:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2441,
														"initialValue": {
															"baseExpression": {
																"id": 2438,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "18575:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2440,
															"indexExpression": {
																"id": 2439,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "18587:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18575:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18541:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2442,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2437,
																	"src": "18618:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18627:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2885,
																"src": "18618:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18643:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18635:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2444,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18635:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18635:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18618:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2468,
														"nodeType": "IfStatement",
														"src": "18614:384:9",
														"trueBody": {
															"id": 2467,
															"nodeType": "Block",
															"src": "18647:351:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2449,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2430,
																			"src": "18813:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2450,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "18828:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18813:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2466,
																	"nodeType": "IfStatement",
																	"src": "18809:174:9",
																	"trueBody": {
																		"id": 2465,
																		"nodeType": "Block",
																		"src": "18843:140:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 2456,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2452,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2437,
																							"src": "18866:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2454,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18875:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2885,
																						"src": "18866:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2455,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2243,
																						"src": "18882:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "18866:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2457,
																				"nodeType": "ExpressionStatement",
																				"src": "18866:20:9"
																			},
																			{
																				"expression": {
																					"id": 2463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2458,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2437,
																							"src": "18909:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2460,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18918:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2887,
																						"src": "18909:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2461,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2326,
																							"src": "18935:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2462,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "18949:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2887,
																						"src": "18935:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "18909:54:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2464,
																				"nodeType": "ExpressionStatement",
																				"src": "18909:54:9"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2471,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "19035:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2472,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "19041:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "19045:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2470,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "19026:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19026:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2475,
												"nodeType": "EmitStatement",
												"src": "19021:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "19085:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "19091:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2479,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "19095:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19104:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2476,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "19064:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19064:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2482,
												"nodeType": "ExpressionStatement",
												"src": "19064:42:9"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "16340:240:9",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16595:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16623:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "16615:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16615:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16646:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "16638:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16638:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16667:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "16659:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16659:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16604:77:9"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16690:0:9"
									},
									"scope": 2835,
									"src": "16586:2528:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2495,
										"nodeType": "Block",
										"src": "19241:40:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2491,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "19258:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19267:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2490,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2496,
															2730
														],
														"referencedDeclaration": 2730,
														"src": "19252:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19252:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2494,
												"nodeType": "ExpressionStatement",
												"src": "19252:21:9"
											}
										]
									},
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "19122:64:9",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19201:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19215:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "19207:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19207:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19206:17:9"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19241:0:9"
									},
									"scope": 2835,
									"src": "19192:89:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "19579:2661:9",
										"statements": [
											{
												"assignments": [
													2505
												],
												"declarations": [
													{
														"constant": false,
														"id": 2505,
														"mutability": "mutable",
														"name": "powerNumber",
														"nameLocation": "19600:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2729,
														"src": "19592:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19592:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"arguments": [
														{
															"id": 2507,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "19627:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2506,
														"name": "tokenIDPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "19614:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19614:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19592:43:9"
											},
											{
												"expression": {
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2510,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "19654:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2514,
															"indexExpression": {
																"expression": {
																	"id": 2511,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19664:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19668:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19664:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19654:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2515,
														"indexExpression": {
															"hexValue": "33",
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19654:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2517,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19692:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19696:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19692:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2516,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "19681:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19681:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19654:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2521,
												"nodeType": "ExpressionStatement",
												"src": "19654:49:9"
											},
											{
												"expression": {
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2522,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "19714:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2526,
															"indexExpression": {
																"expression": {
																	"id": 2523,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19724:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19728:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19724:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19714:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2527,
														"indexExpression": {
															"hexValue": "32",
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19736:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19714:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2535,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "19770:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2528,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "19741:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2531,
																	"indexExpression": {
																		"expression": {
																			"id": 2529,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "19751:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19755:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "19751:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19741:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2533,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19763:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19741:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19766:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "19741:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19741:41:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19714:68:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2538,
												"nodeType": "ExpressionStatement",
												"src": "19714:68:9"
											},
											{
												"expression": {
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2539,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "19793:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2543,
															"indexExpression": {
																"expression": {
																	"id": 2540,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19803:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19807:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19803:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19793:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2544,
														"indexExpression": {
															"hexValue": "31",
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19815:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19793:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2545,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "19820:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19826:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "19820:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19793:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2548,
												"nodeType": "ExpressionStatement",
												"src": "19793:39:9"
											},
											{
												"expression": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2549,
														"name": "_totalPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "19843:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2552,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "19873:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2550,
																"name": "_totalPower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "19857:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19869:3:9",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "19857:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19857:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19843:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "19843:42:9"
											},
											{
												"assignments": [
													2558
												],
												"declarations": [
													{
														"constant": false,
														"id": 2558,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "19933:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 2729,
														"src": "19911:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2557,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2556,
																"name": "TokenOwnership",
																"nameLocations": [
																	"19911:14:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2890,
																"src": "19911:14:9"
															},
															"referencedDeclaration": 2890,
															"src": "19911:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2562,
												"initialValue": {
													"arguments": [
														{
															"id": 2560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "19962:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2559,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "19949:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2890_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19949:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19911:59:9"
											},
											{
												"assignments": [
													2564
												],
												"declarations": [
													{
														"constant": false,
														"id": 2564,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "19992:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2729,
														"src": "19984:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2563,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19984:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2567,
												"initialValue": {
													"expression": {
														"id": 2565,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2558,
														"src": "19999:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20013:4:9",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2885,
													"src": "19999:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19984:33:9"
											},
											{
												"condition": {
													"id": 2568,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2501,
													"src": "20034:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2597,
												"nodeType": "IfStatement",
												"src": "20030:290:9",
												"trueBody": {
													"id": 2596,
													"nodeType": "Block",
													"src": "20049:271:9",
													"statements": [
														{
															"assignments": [
																2570
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2570,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "20069:17:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2596,
																	"src": "20064:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2569,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "20064:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2589,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2571,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "20090:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20090:12:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 2573,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2564,
																					"src": "20106:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "20090:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2576,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2564,
																						"src": "20148:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2577,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 467,
																							"src": "20154:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2578,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "20154:12:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2575,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "20131:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 2579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20131:36:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20090:77:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2582,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2499,
																						"src": "20200:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2581,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1845,
																					"src": "20188:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 2583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20188:20:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2584,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "20212:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20212:12:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "20188:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "20090:134:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2588,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20089:136:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20064:161:9"
														},
														{
															"condition": {
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "20246:18:9",
																"subExpression": {
																	"id": 2590,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "20247:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2595,
															"nodeType": "IfStatement",
															"src": "20242:66:9",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2592,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2871,
																		"src": "20273:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20273:35:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2594,
																"nodeType": "RevertStatement",
																"src": "20266:42:9"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2599,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "20354:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20368:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20360:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20360:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20360:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "20372:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20381:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2598,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2821,
														"src": "20332:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20332:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2607,
												"nodeType": "ExpressionStatement",
												"src": "20332:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20465:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20457:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20457:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20457:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2613,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "20469:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2614,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "20478:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2608,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2753,
														"src": "20448:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20448:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2616,
												"nodeType": "ExpressionStatement",
												"src": "20448:35:9"
											},
											{
												"id": 2705,
												"nodeType": "UncheckedBlock",
												"src": "20754:1213:9",
												"statements": [
													{
														"assignments": [
															2619
														],
														"declarations": [
															{
																"constant": false,
																"id": 2619,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "20799:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2705,
																"src": "20779:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$2899_storage_ptr",
																	"typeString": "struct IERC721A.AddressData"
																},
																"typeName": {
																	"id": 2618,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2617,
																		"name": "AddressData",
																		"nameLocations": [
																			"20779:11:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2899,
																		"src": "20779:11:9"
																	},
																	"referencedDeclaration": 2899,
																	"src": "20779:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage_ptr",
																		"typeString": "struct IERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2623,
														"initialValue": {
															"baseExpression": {
																"id": 2620,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "20813:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$2899_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 2622,
															"indexExpression": {
																"id": 2621,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "20826:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20813:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$2899_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20779:52:9"
													},
													{
														"expression": {
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2624,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "20846:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2626,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20858:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2892,
																"src": "20846:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20869:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20846:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2629,
														"nodeType": "ExpressionStatement",
														"src": "20846:24:9"
													},
													{
														"expression": {
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2630,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "20885:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$2899_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20897:12:9",
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2896,
																"src": "20885:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20913:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20885:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2635,
														"nodeType": "ExpressionStatement",
														"src": "20885:29:9"
													},
													{
														"assignments": [
															2638
														],
														"declarations": [
															{
																"constant": false,
																"id": 2638,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "21036:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2705,
																"src": "21013:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2637,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2636,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"21013:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2890,
																		"src": "21013:14:9"
																	},
																	"referencedDeclaration": 2890,
																	"src": "21013:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2642,
														"initialValue": {
															"baseExpression": {
																"id": 2639,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "21047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2641,
															"indexExpression": {
																"id": 2640,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "21059:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21047:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21013:54:9"
													},
													{
														"expression": {
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2643,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2638,
																	"src": "21082:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2645,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "21091:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2885,
																"src": "21082:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2646,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "21098:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21082:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2648,
														"nodeType": "ExpressionStatement",
														"src": "21082:20:9"
													},
													{
														"expression": {
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2649,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2638,
																	"src": "21117:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2651,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "21126:14:9",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2887,
																"src": "21117:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2654,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "21150:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "21156:9:9",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "21150:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21143:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2652,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "21143:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21143:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "21117:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2658,
														"nodeType": "ExpressionStatement",
														"src": "21117:49:9"
													},
													{
														"expression": {
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2659,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2638,
																	"src": "21181:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "21190:6:9",
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2889,
																"src": "21181:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21199:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "21181:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2664,
														"nodeType": "ExpressionStatement",
														"src": "21181:22:9"
													},
													{
														"assignments": [
															2666
														],
														"declarations": [
															{
																"constant": false,
																"id": 2666,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "21459:11:9",
																"nodeType": "VariableDeclaration",
																"scope": 2705,
																"src": "21451:19:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2665,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21451:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2670,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2667,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "21473:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21483:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "21473:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21451:33:9"
													},
													{
														"assignments": [
															2673
														],
														"declarations": [
															{
																"constant": false,
																"id": 2673,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "21522:8:9",
																"nodeType": "VariableDeclaration",
																"scope": 2705,
																"src": "21499:31:9",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2672,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2671,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"21499:14:9"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 2890,
																		"src": "21499:14:9"
																	},
																	"referencedDeclaration": 2890,
																	"src": "21499:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2677,
														"initialValue": {
															"baseExpression": {
																"id": 2674,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "21533:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$2890_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2676,
															"indexExpression": {
																"id": 2675,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "21545:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21533:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21499:58:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2678,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2673,
																	"src": "21576:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21585:4:9",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2885,
																"src": "21576:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21601:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21593:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21593:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21593:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21576:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "21572:384:9",
														"trueBody": {
															"id": 2703,
															"nodeType": "Block",
															"src": "21605:351:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2685,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2666,
																			"src": "21771:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2686,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "21786:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21771:28:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2702,
																	"nodeType": "IfStatement",
																	"src": "21767:174:9",
																	"trueBody": {
																		"id": 2701,
																		"nodeType": "Block",
																		"src": "21801:140:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 2692,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2688,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2673,
																							"src": "21824:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2690,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "21833:4:9",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2885,
																						"src": "21824:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2691,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2564,
																						"src": "21840:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "21824:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2693,
																				"nodeType": "ExpressionStatement",
																				"src": "21824:20:9"
																			},
																			{
																				"expression": {
																					"id": 2699,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2694,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2673,
																							"src": "21867:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2890_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2696,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "21876:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2887,
																						"src": "21867:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2697,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2558,
																							"src": "21893:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$2890_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2698,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "21907:14:9",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2887,
																						"src": "21893:28:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "21867:54:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2700,
																				"nodeType": "ExpressionStatement",
																				"src": "21867:54:9"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2707,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "21993:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22007:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21999:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2708,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21999:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21999:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2712,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "22011:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2706,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "21984:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21984:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2714,
												"nodeType": "EmitStatement",
												"src": "21979:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "22051:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22065:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22057:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22057:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22057:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2721,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "22069:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22078:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2715,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "22030:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22030:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "22030:50:9"
											},
											{
												"id": 2728,
												"nodeType": "UncheckedBlock",
												"src": "22182:51:9",
												"statements": [
													{
														"expression": {
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "22207:14:9",
															"subExpression": {
																"id": 2725,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "22207:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2727,
														"nodeType": "ExpressionStatement",
														"src": "22207:14:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "19289:215:9",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19519:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19533:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "19525:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19525:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "19547:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "19542:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19542:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19524:37:9"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19579:0:9"
									},
									"scope": 2835,
									"src": "19510:2730:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "22462:92:9",
										"statements": [
											{
												"expression": {
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2740,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "22473:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2742,
														"indexExpression": {
															"id": 2741,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2735,
															"src": "22489:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22473:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2743,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "22500:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22473:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "22473:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2747,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "22527:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2733,
															"src": "22534:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2749,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2735,
															"src": "22538:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2746,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "22518:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22518:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2751,
												"nodeType": "EmitStatement",
												"src": "22513:33:9"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "22248:104:9",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "22367:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22394:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "22386:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22386:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22415:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "22407:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22407:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22441:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "22433:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22433:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22375:78:9"
									},
									"returnParameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22462:0:9"
									},
									"scope": 2835,
									"src": "22358:196:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2807,
										"nodeType": "Block",
										"src": "23215:498:9",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2788,
															"nodeType": "Block",
															"src": "23327:89:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2780,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2778,
																			"src": "23349:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2782,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2758,
																							"src": "23375:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2781,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 133,
																						"src": "23359:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 2783,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23359:19:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 2784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "23379:16:9",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "23359:36:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "23396:8:9",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "23359:45:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "23349:55:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2766,
																	"id": 2787,
																	"nodeType": "Return",
																	"src": "23342:62:9"
																}
															]
														},
														"errorName": "",
														"id": 2789,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2779,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2778,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "23319:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2789,
																	"src": "23312:13:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2777,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "23312:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "23311:15:9"
														},
														"src": "23303:113:9"
													},
													{
														"block": {
															"id": 2804,
															"nodeType": "Block",
															"src": "23445:261:9",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2793,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2791,
																				"src": "23464:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "23471:6:9",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "23464:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23481:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "23464:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2802,
																		"nodeType": "Block",
																		"src": "23572:123:9",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "23600:80:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "23634:2:9",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "23638:6:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "23630:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "23630:15:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "23653:6:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "23647:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "23647:13:9"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "23623:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23623:38:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "23623:38:9"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2791,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "23638:6:9",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2791,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "23653:6:9",
																						"valueSize": 1
																					}
																				],
																				"id": 2801,
																				"nodeType": "InlineAssembly",
																				"src": "23591:89:9"
																			}
																		]
																	},
																	"id": 2803,
																	"nodeType": "IfStatement",
																	"src": "23460:235:9",
																	"trueBody": {
																		"id": 2800,
																		"nodeType": "Block",
																		"src": "23484:82:9",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2797,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "23510:38:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2798,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23510:40:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2799,
																				"nodeType": "RevertStatement",
																				"src": "23503:47:9"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2805,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2792,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2791,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "23437:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2805,
																	"src": "23424:19:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2790,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "23424:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "23423:21:9"
														},
														"src": "23417:289:9"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2771,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "23267:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23267:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "23281:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "23287:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2775,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "23296:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2768,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "23246:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2767,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "23230:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23230:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23250:16:9",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "23230:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23230:72:9",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2806,
												"nodeType": "TryStatement",
												"src": "23226:480:9"
											}
										]
									},
									"documentation": {
										"id": 2754,
										"nodeType": "StructuredDocumentation",
										"src": "22562:478:9",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "23055:30:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23104:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "23096:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23096:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23127:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "23119:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23119:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23148:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "23140:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23140:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "23179:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "23166:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23166:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23085:106:9"
									},
									"returnParameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "23209:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23209:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23208:6:9"
									},
									"scope": 2835,
									"src": "23046:667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "24518:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2809,
										"nodeType": "StructuredDocumentation",
										"src": "23721:634:9",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "24370:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24410:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "24402:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24402:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24433:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "24425:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24425:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "24454:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "24446:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24446:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24485:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "24477:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24477:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24391:109:9"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24518:0:9"
									},
									"scope": 2835,
									"src": "24361:159:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2833,
										"nodeType": "Block",
										"src": "25335:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "24528:645:9",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "25188:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25227:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "25219:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25219:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25250:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "25242:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25242:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25271:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "25263:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25263:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25302:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "25294:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25294:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25208:109:9"
									},
									"returnParameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25335:0:9"
									},
									"scope": 2835,
									"src": "25179:158:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2836,
							"src": "1033:24307:9",
							"usedErrors": [
								2847,
								2850,
								2853,
								2856,
								2859,
								2862,
								2865,
								2868,
								2871,
								2874,
								2877,
								2880,
								2883
							]
						}
					],
					"src": "88:25252:9"
				},
				"id": 9
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC721A/IERC721A.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							2906
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 2907,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2837,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2907,
							"sourceUnit": 116,
							"src": "115:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 2839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2907,
							"sourceUnit": 161,
							"src": "175:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2841,
										"name": "IERC721",
										"nameLocations": [
											"341:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "341:7:10"
									},
									"id": 2842,
									"nodeType": "InheritanceSpecifier",
									"src": "341:7:10"
								},
								{
									"baseName": {
										"id": 2843,
										"name": "IERC721Metadata",
										"nameLocations": [
											"350:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "350:15:10"
									},
									"id": 2844,
									"nodeType": "InheritanceSpecifier",
									"src": "350:15:10"
								}
							],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2840,
								"nodeType": "StructuredDocumentation",
								"src": "256:61:10",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2906,
							"linearizedBaseContracts": [
								2906,
								160,
								115,
								739
							],
							"name": "IERC721A",
							"nameLocation": "329:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "373:78:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2847,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "463:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:10"
									},
									"src": "457:42:10"
								},
								{
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "507:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2850,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "565:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:10"
									},
									"src": "559:41:10"
								},
								{
									"documentation": {
										"id": 2851,
										"nodeType": "StructuredDocumentation",
										"src": "608:68:10",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 2853,
									"name": "ApproveToCaller",
									"nameLocation": "688:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:2:10"
									},
									"src": "682:24:10"
								},
								{
									"documentation": {
										"id": 2854,
										"nodeType": "StructuredDocumentation",
										"src": "714:68:10",
										"text": " The caller cannot approve to the current owner."
									},
									"errorSelector": "943f7b8c",
									"id": 2856,
									"name": "ApprovalToCurrentOwner",
									"nameLocation": "794:22:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:10"
									},
									"src": "788:31:10"
								},
								{
									"documentation": {
										"id": 2857,
										"nodeType": "StructuredDocumentation",
										"src": "827:67:10",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2859,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "906:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:10"
									},
									"src": "900:35:10"
								},
								{
									"documentation": {
										"id": 2860,
										"nodeType": "StructuredDocumentation",
										"src": "943:53:10",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2862,
									"name": "MintToZeroAddress",
									"nameLocation": "1008:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:10"
									},
									"src": "1002:26:10"
								},
								{
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "1036:74:10",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2865,
									"name": "MintZeroQuantity",
									"nameLocation": "1122:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:2:10"
									},
									"src": "1116:25:10"
								},
								{
									"documentation": {
										"id": 2866,
										"nodeType": "StructuredDocumentation",
										"src": "1149:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2868,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "1207:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:10"
									},
									"src": "1201:38:10"
								},
								{
									"documentation": {
										"id": 2869,
										"nodeType": "StructuredDocumentation",
										"src": "1247:78:10",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2871,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1337:33:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:10"
									},
									"src": "1331:42:10"
								},
								{
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "1381:55:10",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2874,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1448:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:10"
									},
									"src": "1442:35:10"
								},
								{
									"documentation": {
										"id": 2875,
										"nodeType": "StructuredDocumentation",
										"src": "1485:111:10",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2877,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1608:38:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:10"
									},
									"src": "1602:47:10"
								},
								{
									"documentation": {
										"id": 2878,
										"nodeType": "StructuredDocumentation",
										"src": "1657:57:10",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2880,
									"name": "TransferToZeroAddress",
									"nameLocation": "1726:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:10"
									},
									"src": "1720:30:10"
								},
								{
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "1758:46:10",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2883,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1816:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:10"
									},
									"src": "1810:36:10"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2890,
									"members": [
										{
											"constant": false,
											"id": 2885,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1992:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2890,
											"src": "1984:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2884,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1984:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2887,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2107:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 2890,
											"src": "2100:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2886,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2100:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2889,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2184:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2890,
											"src": "2179:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2888,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2179:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1920:14:10",
									"nodeType": "StructDefinition",
									"scope": 2906,
									"src": "1913:285:10",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC721A.AddressData",
									"id": 2899,
									"members": [
										{
											"constant": false,
											"id": 2892,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2358:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2899,
											"src": "2351:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2891,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2351:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2894,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2459:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2899,
											"src": "2452:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2893,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2452:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2896,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "2565:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2899,
											"src": "2558:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2895,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2558:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2898,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "2796:3:10",
											"nodeType": "VariableDeclaration",
											"scope": 2899,
											"src": "2789:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2897,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2789:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "2272:11:10",
									"nodeType": "StructDefinition",
									"scope": 2906,
									"src": "2265:542:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2900,
										"nodeType": "StructuredDocumentation",
										"src": "2815:198:10",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n \n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 2905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3028:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3039:2:10"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2905,
												"src": "3065:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:9:10"
									},
									"scope": 2906,
									"src": "3019:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2907,
							"src": "319:2762:10",
							"usedErrors": [
								2847,
								2850,
								2853,
								2856,
								2859,
								2862,
								2865,
								2868,
								2871,
								2874,
								2877,
								2880,
								2883
							]
						}
					],
					"src": "88:2993:10"
				},
				"id": 10
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"ast": {
					"absolutePath": "minerpunk/IDCF/mineInterface.sol",
					"exportedSymbols": {
						"mine": [
							2945
						]
					},
					"id": 2946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2908,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "mine",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2909,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:11",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2945,
							"linearizedBaseContracts": [
								2945
							],
							"name": "mine",
							"nameLocation": "192:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b8ba6007",
									"id": 2916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "219:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "230:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:11"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "265:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:11"
									},
									"scope": 2945,
									"src": "210:64:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4be3403c",
									"id": 2923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "294:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "315:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "307:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:22:11"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "351:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:11"
									},
									"scope": 2945,
									"src": "285:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e29301f9",
									"id": 2930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIDPower",
									"nameLocation": "375:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "397:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "389:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:11"
									},
									"returnParameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "427:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:9:11"
									},
									"scope": 2945,
									"src": "366:70:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d993226b",
									"id": 2937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "difficult",
									"nameLocation": "451:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "466:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "461:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:19:11"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "502:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:9:11"
									},
									"scope": 2945,
									"src": "442:69:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c29dbcca",
									"id": 2944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalDugUp",
									"nameLocation": "526:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "545:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "537:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:22:11"
									},
									"returnParameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "581:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:9:11"
									},
									"scope": 2945,
									"src": "517:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2946,
							"src": "182:419:11",
							"usedErrors": []
						}
					],
					"src": "88:513:11"
				},
				"id": 11
			}
		}
	}
}