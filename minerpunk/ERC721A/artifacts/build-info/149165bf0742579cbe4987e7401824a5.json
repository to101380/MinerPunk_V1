{
	"id": "149165bf0742579cbe4987e7401824a5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/ERC721A/test.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport '../IDCF/IDCF.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\r\n *\r\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n *\r\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is Context, ERC165, IERC721A, IDCF {\r\n    using SafeMath for uint;\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    uint256 public _salt;\r\n\r\n    uint256 public _DCFperBlock;\r\n\r\n    // The tokenId of the next token to be minted.\r\n    uint256 internal _currentIndex;\r\n\r\n    uint256 internal _maxSupply;\r\n\r\n    // The number of tokens burned.\r\n    uint256 internal _burnCounter;    \r\n  \r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     *[user][1] = last_block\r\n     *[user][2] = accumulation_block \r\n    */   \r\n    mapping(address => mapping(uint256 => uint256))private _BlockScore;\r\n\r\n    constructor(string memory name_, string memory symbol_, uint256 maxSupply_, uint256 salt_, uint256 DCFperBlock_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _maxSupply = maxSupply_;\r\n        _currentIndex = _startTokenId(); \r\n        _salt = salt_;   \r\n        _DCFperBlock = DCFperBlock_;       \r\n    }\r\n\r\n  \r\n\r\n    function BlockScore(address user)public view returns(uint256){\r\n        uint256 difference = block.number.sub(_BlockScore[user][1]);\r\n        uint256 Product = balanceOf(user).mul(difference);\r\n        uint256 accumulation = _BlockScore[user][2].add(Product);\r\n        return accumulation;\r\n    }\r\n\r\n    function updateBlockScore(address user)private{\r\n        uint256 accumulation = BlockScore(user);       \r\n        _BlockScore[user][2]= accumulation;       \r\n        _BlockScore[user][1] = block.number;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n   \r\n\r\n    /**\r\n     * To change the starting tokenId, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than _currentIndex - _startTokenId() times\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n\r\n    function maxSupply() public view override returns (uint256) {       \r\n        unchecked {\r\n            return _maxSupply - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view returns (uint256) {\r\n        // Counter underflow is impossible as _currentIndex does not decrement,\r\n        // and it is initialized to _startTokenId()\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberBurned);\r\n    }\r\n\r\n    /**\r\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return _addressData[owner].aux;\r\n    }\r\n \r\n    /**\r\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal {\r\n        _addressData[owner].aux = aux;\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr) if (curr < _currentIndex) {\r\n                TokenOwnership memory ownership = _ownerships[curr];\r\n                if (!ownership.burned) {\r\n                    if (ownership.addr != address(0)) {\r\n                        return ownership;\r\n                    }\r\n                    // Invariant:\r\n                    // There will always be an ownership that has an address and is not burned\r\n                    // before an ownership that does not have an address and is not burned.\r\n                    // Hence, curr will not underflow.\r\n                    while (true) {\r\n                        curr--;\r\n                        ownership = _ownerships[curr];\r\n                        if (ownership.addr != address(0)) {\r\n                            return ownership;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return _ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return 'https://gateway.pinata.cloud/ipfs/QmeyKnvXXMxAuWG5pt35Ez8QhJhR63RDVSwUfsjKayR42Z/';\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        if (to == owner) revert ApprovalToCurrentOwner();\r\n\r\n        if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {\r\n            revert ApprovalCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (operator == _msgSender()) revert ApproveToCaller();\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n        if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n            revert TransferToNonERC721ReceiverImplementer();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     *   (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {           \r\n        updateBlockScore(to);\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\r\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\r\n        unchecked {\r\n            _addressData[to].balance += uint64(quantity);\r\n            _addressData[to].numberMinted += uint64(quantity);\r\n\r\n            _ownerships[startTokenId].addr = to;\r\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n            uint256 updatedIndex = startTokenId;\r\n            uint256 end = updatedIndex + quantity;\r\n\r\n            if (to.isContract()) {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex);\r\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (updatedIndex < end);\r\n                // Reentrancy protection\r\n                if (_currentIndex != startTokenId) revert();\r\n            } else {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex++);\r\n                } while (updatedIndex < end);\r\n            }\r\n            _currentIndex = updatedIndex;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n   \r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {\r\n        updateBlockScore(from);\r\n        updateBlockScore(to);\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == from ||\r\n            isApprovedForAll(from, _msgSender()) ||\r\n            getApproved(tokenId) == _msgSender());\r\n\r\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            _addressData[from].balance -= 1;\r\n            _addressData[to].balance += 1;\r\n\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = to;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        updateBlockScore(msg.sender);\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        address from = prevOwnership.addr;\r\n\r\n        if (approvalCheck) {\r\n            bool isApprovedOrOwner = (_msgSender() == from ||\r\n                isApprovedForAll(from, _msgSender()) ||\r\n                getApproved(tokenId) == _msgSender());\r\n\r\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            AddressData storage addressData = _addressData[from];\r\n            addressData.balance -= 1;\r\n            addressData.numberBurned += 1;\r\n\r\n            // Keep track of who burned the token, and the timestamp of burning.\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = from;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n            currSlot.burned = true;\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n            return retval == IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IDCF  {   \r\n\r\n    function BlockScore(address user)external view returns(uint);\r\n    function maxSupply() external view returns (uint256);\r\n\r\n}"
			},
			"Dcoffer/ERC721A/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IERC721A is IERC721, IERC721Metadata {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller cannot approve to their own address.\r\n     */\r\n    error ApproveToCaller();\r\n\r\n    /**\r\n     * The caller cannot approve to the current owner.\r\n     */\r\n    error ApprovalToCurrentOwner();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n    }\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct AddressData {\r\n        // Realistically, 2**64-1 is more than enough.\r\n        uint64 balance;\r\n        // Keeps track of mint count with minimal overhead for tokenomics.\r\n        uint64 numberMinted;\r\n        // Keeps track of burn count with minimal overhead for tokenomics.\r\n        uint64 numberBurned;\r\n        // For miscellaneous variable(s) pertaining to the address\r\n        // (e.g. number of whitelist mint slots used).\r\n        // If there are multiple variables, please pack them into a uint64.\r\n        uint64 aux;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     * \r\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() external view returns (uint256);    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/ERC721A/IERC721A.sol",
								"Dcoffer/ERC721A/test.sol",
								"Dcoffer/IDCF/IDCF.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF REVERT 0xED PUSH20 0x2AEBF91122FCA0FD45FC9F602EC710ED32BEEF91 PUSH31 0xBC45ECBC29A65C64736F6C6343000811003300000000000000000000000000 ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bffded732aebf91122fca0fd45fc9f602ec710ed32beef917ebc45ecbc29a65c64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/ERC721A/IERC721A.sol",
								"Dcoffer/ERC721A/test.sol",
								"Dcoffer/IDCF/IDCF.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/ERC721A/IERC721A.sol",
								"Dcoffer/ERC721A/test.sol",
								"Dcoffer/IDCF/IDCF.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/ERC721A/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/ERC721A/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"Dcoffer/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/ERC721A/test.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salt_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "DCFperBlock_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_DCFperBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_salt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/ERC721A/test.sol\":1024:22016  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/ERC721A/test.sol\":2300:2622  constructor(string memory name_, string memory symbol_, uint256 maxSupply_, uint256 salt_, uint256 DCFperBlock_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Dcoffer/ERC721A/test.sol\":2432:2437  name_ */\n  dup5\n    /* \"Dcoffer/ERC721A/test.sol\":2424:2429  _name */\n  0x05\n    /* \"Dcoffer/ERC721A/test.sol\":2424:2437  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":2458:2465  symbol_ */\n  dup4\n    /* \"Dcoffer/ERC721A/test.sol\":2448:2455  _symbol */\n  0x06\n    /* \"Dcoffer/ERC721A/test.sol\":2448:2465  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":2489:2499  maxSupply_ */\n  dup3\n    /* \"Dcoffer/ERC721A/test.sol\":2476:2486  _maxSupply */\n  0x03\n    /* \"Dcoffer/ERC721A/test.sol\":2476:2499  _maxSupply = maxSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":2526:2541  _startTokenId() */\n  tag_9\n    /* \"Dcoffer/ERC721A/test.sol\":2526:2539  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"Dcoffer/ERC721A/test.sol\":2526:2541  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"Dcoffer/ERC721A/test.sol\":2510:2523  _currentIndex */\n  0x02\n    /* \"Dcoffer/ERC721A/test.sol\":2510:2541  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":2561:2566  salt_ */\n  dup2\n    /* \"Dcoffer/ERC721A/test.sol\":2553:2558  _salt */\n  0x00\n    /* \"Dcoffer/ERC721A/test.sol\":2553:2566  _salt = salt_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":2595:2607  DCFperBlock_ */\n  dup1\n    /* \"Dcoffer/ERC721A/test.sol\":2580:2592  _DCFperBlock */\n  0x01\n    /* \"Dcoffer/ERC721A/test.sol\":2580:2607  _DCFperBlock = DCFperBlock_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":2300:2622  constructor(string memory name_, string memory symbol_, uint256 maxSupply_, uint256 salt_, uint256 DCFperBlock_) {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"Dcoffer/ERC721A/test.sol\":1024:22016  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\n  jump(tag_11)\n    /* \"Dcoffer/ERC721A/test.sol\":3267:3359  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"Dcoffer/ERC721A/test.sol\":3323:3330  uint256 */\n  0x00\n    /* \"Dcoffer/ERC721A/test.sol\":3267:3359  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_56\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_58\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1030:1118   */\ntag_57:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_60\n  tag_13\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_61\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_64\n  tag_19\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1434:1490   */\ntag_63:\n    /* \"#utility.yul\":1508:1537   */\n  tag_65\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_23:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_67:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_24:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_71\n    /* \"#utility.yul\":1992:2041   */\n  tag_72\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1976:2042   */\n  tag_21\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_74\n  tag_17\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2117:2229   */\ntag_73:\n    /* \"#utility.yul\":2238:2290   */\n  tag_75\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_23\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_25:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_78\n  tag_16\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2399:2521   */\ntag_77:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_79\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_26:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_27:\n    /* \"#utility.yul\":2833:2857   */\n  tag_82\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_26\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_83:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_28:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_85\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_27\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4360   */\ntag_3:\n    /* \"#utility.yul\":3163:3169   */\n  0x00\n    /* \"#utility.yul\":3171:3177   */\n  dup1\n    /* \"#utility.yul\":3179:3185   */\n  0x00\n    /* \"#utility.yul\":3187:3193   */\n  dup1\n    /* \"#utility.yul\":3195:3201   */\n  0x00\n    /* \"#utility.yul\":3244:3247   */\n  0xa0\n    /* \"#utility.yul\":3232:3241   */\n  dup7\n    /* \"#utility.yul\":3223:3230   */\n  dup9\n    /* \"#utility.yul\":3219:3242   */\n  sub\n    /* \"#utility.yul\":3215:3248   */\n  slt\n    /* \"#utility.yul\":3212:3332   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3251:3330   */\n  tag_88\n  tag_14\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3212:3332   */\ntag_87:\n    /* \"#utility.yul\":3392:3393   */\n  0x00\n    /* \"#utility.yul\":3381:3390   */\n  dup7\n    /* \"#utility.yul\":3377:3394   */\n  add\n    /* \"#utility.yul\":3371:3395   */\n  mload\n    /* \"#utility.yul\":3422:3440   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3414:3420   */\n  dup2\n    /* \"#utility.yul\":3411:3441   */\n  gt\n    /* \"#utility.yul\":3408:3525   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3444:3523   */\n  tag_90\n  tag_15\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3408:3525   */\ntag_89:\n    /* \"#utility.yul\":3549:3623   */\n  tag_91\n    /* \"#utility.yul\":3615:3622   */\n  dup9\n    /* \"#utility.yul\":3606:3612   */\n  dup3\n    /* \"#utility.yul\":3595:3604   */\n  dup10\n    /* \"#utility.yul\":3591:3613   */\n  add\n    /* \"#utility.yul\":3549:3623   */\n  tag_25\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3539:3623   */\n  swap6\n  pop\n    /* \"#utility.yul\":3342:3633   */\n  pop\n    /* \"#utility.yul\":3693:3695   */\n  0x20\n    /* \"#utility.yul\":3682:3691   */\n  dup7\n    /* \"#utility.yul\":3678:3696   */\n  add\n    /* \"#utility.yul\":3672:3697   */\n  mload\n    /* \"#utility.yul\":3724:3742   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3716:3722   */\n  dup2\n    /* \"#utility.yul\":3713:3743   */\n  gt\n    /* \"#utility.yul\":3710:3827   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3746:3825   */\n  tag_93\n  tag_15\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3710:3827   */\ntag_92:\n    /* \"#utility.yul\":3851:3925   */\n  tag_94\n    /* \"#utility.yul\":3917:3924   */\n  dup9\n    /* \"#utility.yul\":3908:3914   */\n  dup3\n    /* \"#utility.yul\":3897:3906   */\n  dup10\n    /* \"#utility.yul\":3893:3915   */\n  add\n    /* \"#utility.yul\":3851:3925   */\n  tag_25\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3841:3925   */\n  swap5\n  pop\n    /* \"#utility.yul\":3643:3935   */\n  pop\n    /* \"#utility.yul\":3974:3976   */\n  0x40\n    /* \"#utility.yul\":4000:4064   */\n  tag_95\n    /* \"#utility.yul\":4056:4063   */\n  dup9\n    /* \"#utility.yul\":4047:4053   */\n  dup3\n    /* \"#utility.yul\":4036:4045   */\n  dup10\n    /* \"#utility.yul\":4032:4054   */\n  add\n    /* \"#utility.yul\":4000:4064   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3990:4064   */\n  swap4\n  pop\n    /* \"#utility.yul\":3945:4074   */\n  pop\n    /* \"#utility.yul\":4113:4115   */\n  0x60\n    /* \"#utility.yul\":4139:4203   */\n  tag_96\n    /* \"#utility.yul\":4195:4202   */\n  dup9\n    /* \"#utility.yul\":4186:4192   */\n  dup3\n    /* \"#utility.yul\":4175:4184   */\n  dup10\n    /* \"#utility.yul\":4171:4193   */\n  add\n    /* \"#utility.yul\":4139:4203   */\n  tag_28\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4129:4203   */\n  swap3\n  pop\n    /* \"#utility.yul\":4084:4213   */\n  pop\n    /* \"#utility.yul\":4252:4255   */\n  0x80\n    /* \"#utility.yul\":4279:4343   */\n  tag_97\n    /* \"#utility.yul\":4335:4342   */\n  dup9\n    /* \"#utility.yul\":4326:4332   */\n  dup3\n    /* \"#utility.yul\":4315:4324   */\n  dup10\n    /* \"#utility.yul\":4311:4333   */\n  add\n    /* \"#utility.yul\":4279:4343   */\n  tag_28\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4269:4343   */\n  swap2\n  pop\n    /* \"#utility.yul\":4223:4353   */\n  pop\n    /* \"#utility.yul\":3037:4360   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4366:4465   */\ntag_29:\n    /* \"#utility.yul\":4418:4424   */\n  0x00\n    /* \"#utility.yul\":4452:4457   */\n  dup2\n    /* \"#utility.yul\":4446:4458   */\n  mload\n    /* \"#utility.yul\":4436:4458   */\n  swap1\n  pop\n    /* \"#utility.yul\":4366:4465   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4471:4651   */\ntag_30:\n    /* \"#utility.yul\":4519:4596   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4516:4517   */\n  0x00\n    /* \"#utility.yul\":4509:4597   */\n  mstore\n    /* \"#utility.yul\":4616:4620   */\n  0x22\n    /* \"#utility.yul\":4613:4614   */\n  0x04\n    /* \"#utility.yul\":4606:4621   */\n  mstore\n    /* \"#utility.yul\":4640:4644   */\n  0x24\n    /* \"#utility.yul\":4637:4638   */\n  0x00\n    /* \"#utility.yul\":4630:4645   */\n  revert\n    /* \"#utility.yul\":4657:4977   */\ntag_31:\n    /* \"#utility.yul\":4701:4707   */\n  0x00\n    /* \"#utility.yul\":4738:4739   */\n  0x02\n    /* \"#utility.yul\":4732:4736   */\n  dup3\n    /* \"#utility.yul\":4728:4740   */\n  div\n    /* \"#utility.yul\":4718:4740   */\n  swap1\n  pop\n    /* \"#utility.yul\":4785:4786   */\n  0x01\n    /* \"#utility.yul\":4779:4783   */\n  dup3\n    /* \"#utility.yul\":4775:4787   */\n  and\n    /* \"#utility.yul\":4806:4824   */\n  dup1\n    /* \"#utility.yul\":4796:4877   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4862:4866   */\n  0x7f\n    /* \"#utility.yul\":4854:4860   */\n  dup3\n    /* \"#utility.yul\":4850:4867   */\n  and\n    /* \"#utility.yul\":4840:4867   */\n  swap2\n  pop\n    /* \"#utility.yul\":4796:4877   */\ntag_101:\n    /* \"#utility.yul\":4924:4926   */\n  0x20\n    /* \"#utility.yul\":4916:4922   */\n  dup3\n    /* \"#utility.yul\":4913:4927   */\n  lt\n    /* \"#utility.yul\":4893:4911   */\n  dup2\n    /* \"#utility.yul\":4890:4928   */\n  sub\n    /* \"#utility.yul\":4887:4971   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4943:4961   */\n  tag_103\n  tag_30\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4887:4971   */\ntag_102:\n    /* \"#utility.yul\":4708:4977   */\n  pop\n    /* \"#utility.yul\":4657:4977   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4983:5124   */\ntag_32:\n    /* \"#utility.yul\":5032:5036   */\n  0x00\n    /* \"#utility.yul\":5055:5058   */\n  dup2\n    /* \"#utility.yul\":5047:5058   */\n  swap1\n  pop\n    /* \"#utility.yul\":5078:5081   */\n  dup2\n    /* \"#utility.yul\":5075:5076   */\n  0x00\n    /* \"#utility.yul\":5068:5082   */\n  mstore\n    /* \"#utility.yul\":5112:5116   */\n  0x20\n    /* \"#utility.yul\":5109:5110   */\n  0x00\n    /* \"#utility.yul\":5099:5117   */\n  keccak256\n    /* \"#utility.yul\":5091:5117   */\n  swap1\n  pop\n    /* \"#utility.yul\":4983:5124   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5130:5223   */\ntag_33:\n    /* \"#utility.yul\":5167:5173   */\n  0x00\n    /* \"#utility.yul\":5214:5216   */\n  0x20\n    /* \"#utility.yul\":5209:5211   */\n  0x1f\n    /* \"#utility.yul\":5202:5207   */\n  dup4\n    /* \"#utility.yul\":5198:5212   */\n  add\n    /* \"#utility.yul\":5194:5217   */\n  div\n    /* \"#utility.yul\":5184:5217   */\n  swap1\n  pop\n    /* \"#utility.yul\":5130:5223   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5229:5336   */\ntag_34:\n    /* \"#utility.yul\":5273:5281   */\n  0x00\n    /* \"#utility.yul\":5323:5328   */\n  dup3\n    /* \"#utility.yul\":5317:5321   */\n  dup3\n    /* \"#utility.yul\":5313:5329   */\n  shl\n    /* \"#utility.yul\":5292:5329   */\n  swap1\n  pop\n    /* \"#utility.yul\":5229:5336   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5342:5735   */\ntag_35:\n    /* \"#utility.yul\":5411:5417   */\n  0x00\n    /* \"#utility.yul\":5461:5462   */\n  0x08\n    /* \"#utility.yul\":5449:5459   */\n  dup4\n    /* \"#utility.yul\":5445:5463   */\n  mul\n    /* \"#utility.yul\":5484:5581   */\n  tag_108\n    /* \"#utility.yul\":5514:5580   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5503:5512   */\n  dup3\n    /* \"#utility.yul\":5484:5581   */\n  tag_34\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5602:5641   */\n  tag_109\n    /* \"#utility.yul\":5632:5640   */\n  dup7\n    /* \"#utility.yul\":5621:5630   */\n  dup4\n    /* \"#utility.yul\":5602:5641   */\n  tag_34\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5590:5641   */\n  swap6\n  pop\n    /* \"#utility.yul\":5674:5678   */\n  dup1\n    /* \"#utility.yul\":5670:5679   */\n  not\n    /* \"#utility.yul\":5663:5668   */\n  dup5\n    /* \"#utility.yul\":5659:5680   */\n  and\n    /* \"#utility.yul\":5650:5680   */\n  swap4\n  pop\n    /* \"#utility.yul\":5723:5727   */\n  dup1\n    /* \"#utility.yul\":5713:5721   */\n  dup7\n    /* \"#utility.yul\":5709:5728   */\n  and\n    /* \"#utility.yul\":5702:5707   */\n  dup5\n    /* \"#utility.yul\":5699:5729   */\n  or\n    /* \"#utility.yul\":5689:5729   */\n  swap3\n  pop\n    /* \"#utility.yul\":5418:5735   */\n  pop\n  pop\n    /* \"#utility.yul\":5342:5735   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5741:5801   */\ntag_36:\n    /* \"#utility.yul\":5769:5772   */\n  0x00\n    /* \"#utility.yul\":5790:5795   */\n  dup2\n    /* \"#utility.yul\":5783:5795   */\n  swap1\n  pop\n    /* \"#utility.yul\":5741:5801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5807:5949   */\ntag_37:\n    /* \"#utility.yul\":5857:5866   */\n  0x00\n    /* \"#utility.yul\":5890:5943   */\n  tag_112\n    /* \"#utility.yul\":5908:5942   */\n  tag_113\n    /* \"#utility.yul\":5917:5941   */\n  tag_114\n    /* \"#utility.yul\":5935:5940   */\n  dup5\n    /* \"#utility.yul\":5917:5941   */\n  tag_26\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5908:5942   */\n  tag_36\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5890:5943   */\n  tag_26\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5877:5943   */\n  swap1\n  pop\n    /* \"#utility.yul\":5807:5949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5955:6030   */\ntag_38:\n    /* \"#utility.yul\":5998:6001   */\n  0x00\n    /* \"#utility.yul\":6019:6024   */\n  dup2\n    /* \"#utility.yul\":6012:6024   */\n  swap1\n  pop\n    /* \"#utility.yul\":5955:6030   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6036:6305   */\ntag_39:\n    /* \"#utility.yul\":6146:6185   */\n  tag_117\n    /* \"#utility.yul\":6177:6184   */\n  dup4\n    /* \"#utility.yul\":6146:6185   */\n  tag_37\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6207:6298   */\n  tag_118\n    /* \"#utility.yul\":6256:6297   */\n  tag_119\n    /* \"#utility.yul\":6280:6296   */\n  dup3\n    /* \"#utility.yul\":6256:6297   */\n  tag_38\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6248:6254   */\n  dup5\n    /* \"#utility.yul\":6241:6245   */\n  dup5\n    /* \"#utility.yul\":6235:6246   */\n  sload\n    /* \"#utility.yul\":6207:6298   */\n  tag_35\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6201:6205   */\n  dup3\n    /* \"#utility.yul\":6194:6299   */\n  sstore\n    /* \"#utility.yul\":6112:6305   */\n  pop\n    /* \"#utility.yul\":6036:6305   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6311:6384   */\ntag_40:\n    /* \"#utility.yul\":6356:6359   */\n  0x00\n    /* \"#utility.yul\":6311:6384   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6390:6579   */\ntag_41:\n    /* \"#utility.yul\":6467:6499   */\n  tag_122\n  tag_40\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6508:6573   */\n  tag_123\n    /* \"#utility.yul\":6566:6572   */\n  dup2\n    /* \"#utility.yul\":6558:6564   */\n  dup5\n    /* \"#utility.yul\":6552:6556   */\n  dup5\n    /* \"#utility.yul\":6508:6573   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6443:6579   */\n  pop\n    /* \"#utility.yul\":6390:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6771   */\ntag_42:\n    /* \"#utility.yul\":6645:6765   */\ntag_125:\n    /* \"#utility.yul\":6662:6665   */\n  dup2\n    /* \"#utility.yul\":6655:6660   */\n  dup2\n    /* \"#utility.yul\":6652:6666   */\n  lt\n    /* \"#utility.yul\":6645:6765   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6716:6755   */\n  tag_128\n    /* \"#utility.yul\":6753:6754   */\n  0x00\n    /* \"#utility.yul\":6746:6751   */\n  dup3\n    /* \"#utility.yul\":6716:6755   */\n  tag_41\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6689:6690   */\n  0x01\n    /* \"#utility.yul\":6682:6687   */\n  dup2\n    /* \"#utility.yul\":6678:6691   */\n  add\n    /* \"#utility.yul\":6669:6691   */\n  swap1\n  pop\n    /* \"#utility.yul\":6645:6765   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":6585:6771   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6777:7320   */\ntag_43:\n    /* \"#utility.yul\":6878:6880   */\n  0x1f\n    /* \"#utility.yul\":6873:6876   */\n  dup3\n    /* \"#utility.yul\":6870:6881   */\n  gt\n    /* \"#utility.yul\":6867:7313   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6912:6950   */\n  tag_131\n    /* \"#utility.yul\":6944:6949   */\n  dup2\n    /* \"#utility.yul\":6912:6950   */\n  tag_32\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6996:7025   */\n  tag_132\n    /* \"#utility.yul\":7014:7024   */\n  dup5\n    /* \"#utility.yul\":6996:7025   */\n  tag_33\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6986:6994   */\n  dup2\n    /* \"#utility.yul\":6982:7026   */\n  add\n    /* \"#utility.yul\":7179:7181   */\n  0x20\n    /* \"#utility.yul\":7167:7177   */\n  dup6\n    /* \"#utility.yul\":7164:7182   */\n  lt\n    /* \"#utility.yul\":7161:7210   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7200:7208   */\n  dup2\n    /* \"#utility.yul\":7185:7208   */\n  swap1\n  pop\n    /* \"#utility.yul\":7161:7210   */\ntag_133:\n    /* \"#utility.yul\":7223:7303   */\n  tag_134\n    /* \"#utility.yul\":7279:7301   */\n  tag_135\n    /* \"#utility.yul\":7297:7300   */\n  dup6\n    /* \"#utility.yul\":7279:7301   */\n  tag_33\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7269:7277   */\n  dup4\n    /* \"#utility.yul\":7265:7302   */\n  add\n    /* \"#utility.yul\":7252:7263   */\n  dup3\n    /* \"#utility.yul\":7223:7303   */\n  tag_42\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6882:7313   */\n  pop\n  pop\n    /* \"#utility.yul\":6867:7313   */\ntag_130:\n    /* \"#utility.yul\":6777:7320   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7326:7443   */\ntag_44:\n    /* \"#utility.yul\":7380:7388   */\n  0x00\n    /* \"#utility.yul\":7430:7435   */\n  dup3\n    /* \"#utility.yul\":7424:7428   */\n  dup3\n    /* \"#utility.yul\":7420:7436   */\n  shr\n    /* \"#utility.yul\":7399:7436   */\n  swap1\n  pop\n    /* \"#utility.yul\":7326:7443   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7449:7618   */\ntag_45:\n    /* \"#utility.yul\":7493:7499   */\n  0x00\n    /* \"#utility.yul\":7526:7577   */\n  tag_138\n    /* \"#utility.yul\":7574:7575   */\n  0x00\n    /* \"#utility.yul\":7570:7576   */\n  not\n    /* \"#utility.yul\":7562:7567   */\n  dup5\n    /* \"#utility.yul\":7559:7560   */\n  0x08\n    /* \"#utility.yul\":7555:7568   */\n  mul\n    /* \"#utility.yul\":7526:7577   */\n  tag_44\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7522:7578   */\n  not\n    /* \"#utility.yul\":7607:7611   */\n  dup1\n    /* \"#utility.yul\":7601:7605   */\n  dup4\n    /* \"#utility.yul\":7597:7612   */\n  and\n    /* \"#utility.yul\":7587:7612   */\n  swap2\n  pop\n    /* \"#utility.yul\":7500:7618   */\n  pop\n    /* \"#utility.yul\":7449:7618   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7623:7918   */\ntag_46:\n    /* \"#utility.yul\":7699:7703   */\n  0x00\n    /* \"#utility.yul\":7845:7874   */\n  tag_140\n    /* \"#utility.yul\":7870:7873   */\n  dup4\n    /* \"#utility.yul\":7864:7868   */\n  dup4\n    /* \"#utility.yul\":7845:7874   */\n  tag_45\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7837:7874   */\n  swap2\n  pop\n    /* \"#utility.yul\":7907:7910   */\n  dup3\n    /* \"#utility.yul\":7904:7905   */\n  0x02\n    /* \"#utility.yul\":7900:7911   */\n  mul\n    /* \"#utility.yul\":7894:7898   */\n  dup3\n    /* \"#utility.yul\":7891:7912   */\n  or\n    /* \"#utility.yul\":7883:7912   */\n  swap1\n  pop\n    /* \"#utility.yul\":7623:7918   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7923:9318   */\ntag_7:\n    /* \"#utility.yul\":8040:8077   */\n  tag_142\n    /* \"#utility.yul\":8073:8076   */\n  dup3\n    /* \"#utility.yul\":8040:8077   */\n  tag_29\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8142:8160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8134:8140   */\n  dup2\n    /* \"#utility.yul\":8131:8161   */\n  gt\n    /* \"#utility.yul\":8128:8184   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8164:8182   */\n  tag_144\n  tag_19\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8128:8184   */\ntag_143:\n    /* \"#utility.yul\":8208:8246   */\n  tag_145\n    /* \"#utility.yul\":8240:8244   */\n  dup3\n    /* \"#utility.yul\":8234:8245   */\n  sload\n    /* \"#utility.yul\":8208:8246   */\n  tag_31\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8293:8360   */\n  tag_146\n    /* \"#utility.yul\":8353:8359   */\n  dup3\n    /* \"#utility.yul\":8345:8351   */\n  dup3\n    /* \"#utility.yul\":8339:8343   */\n  dup6\n    /* \"#utility.yul\":8293:8360   */\n  tag_43\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8387:8388   */\n  0x00\n    /* \"#utility.yul\":8411:8415   */\n  0x20\n    /* \"#utility.yul\":8398:8415   */\n  swap1\n  pop\n    /* \"#utility.yul\":8443:8445   */\n  0x1f\n    /* \"#utility.yul\":8435:8441   */\n  dup4\n    /* \"#utility.yul\":8432:8446   */\n  gt\n    /* \"#utility.yul\":8460:8461   */\n  0x01\n    /* \"#utility.yul\":8455:9073   */\n  dup2\n  eq\n  tag_148\n  jumpi\n    /* \"#utility.yul\":9117:9118   */\n  0x00\n    /* \"#utility.yul\":9134:9140   */\n  dup5\n    /* \"#utility.yul\":9131:9208   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":9183:9192   */\n  dup3\n    /* \"#utility.yul\":9178:9181   */\n  dup8\n    /* \"#utility.yul\":9174:9193   */\n  add\n    /* \"#utility.yul\":9168:9194   */\n  mload\n    /* \"#utility.yul\":9159:9194   */\n  swap1\n  pop\n    /* \"#utility.yul\":9131:9208   */\ntag_149:\n    /* \"#utility.yul\":9234:9301   */\n  tag_150\n    /* \"#utility.yul\":9294:9300   */\n  dup6\n    /* \"#utility.yul\":9287:9292   */\n  dup3\n    /* \"#utility.yul\":9234:9301   */\n  tag_46\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":9228:9232   */\n  dup7\n    /* \"#utility.yul\":9221:9302   */\n  sstore\n    /* \"#utility.yul\":9090:9312   */\n  pop\n    /* \"#utility.yul\":8425:9312   */\n  jump(tag_147)\n    /* \"#utility.yul\":8455:9073   */\ntag_148:\n    /* \"#utility.yul\":8507:8511   */\n  0x1f\n    /* \"#utility.yul\":8503:8512   */\n  not\n    /* \"#utility.yul\":8495:8501   */\n  dup5\n    /* \"#utility.yul\":8491:8513   */\n  and\n    /* \"#utility.yul\":8541:8578   */\n  tag_151\n    /* \"#utility.yul\":8573:8577   */\n  dup7\n    /* \"#utility.yul\":8541:8578   */\n  tag_32\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8600:8601   */\n  0x00\n    /* \"#utility.yul\":8614:8822   */\ntag_152:\n    /* \"#utility.yul\":8628:8635   */\n  dup3\n    /* \"#utility.yul\":8625:8626   */\n  dup2\n    /* \"#utility.yul\":8622:8636   */\n  lt\n    /* \"#utility.yul\":8614:8822   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8707:8716   */\n  dup5\n    /* \"#utility.yul\":8702:8705   */\n  dup10\n    /* \"#utility.yul\":8698:8717   */\n  add\n    /* \"#utility.yul\":8692:8718   */\n  mload\n    /* \"#utility.yul\":8684:8690   */\n  dup3\n    /* \"#utility.yul\":8677:8719   */\n  sstore\n    /* \"#utility.yul\":8758:8759   */\n  0x01\n    /* \"#utility.yul\":8750:8756   */\n  dup3\n    /* \"#utility.yul\":8746:8760   */\n  add\n    /* \"#utility.yul\":8736:8760   */\n  swap2\n  pop\n    /* \"#utility.yul\":8805:8807   */\n  0x20\n    /* \"#utility.yul\":8794:8803   */\n  dup6\n    /* \"#utility.yul\":8790:8808   */\n  add\n    /* \"#utility.yul\":8777:8808   */\n  swap5\n  pop\n    /* \"#utility.yul\":8651:8655   */\n  0x20\n    /* \"#utility.yul\":8648:8649   */\n  dup2\n    /* \"#utility.yul\":8644:8656   */\n  add\n    /* \"#utility.yul\":8639:8656   */\n  swap1\n  pop\n    /* \"#utility.yul\":8614:8822   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":8850:8856   */\n  dup7\n    /* \"#utility.yul\":8841:8848   */\n  dup4\n    /* \"#utility.yul\":8838:8857   */\n  lt\n    /* \"#utility.yul\":8835:9014   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":8908:8917   */\n  dup5\n    /* \"#utility.yul\":8903:8906   */\n  dup10\n    /* \"#utility.yul\":8899:8918   */\n  add\n    /* \"#utility.yul\":8893:8919   */\n  mload\n    /* \"#utility.yul\":8951:8999   */\n  tag_156\n    /* \"#utility.yul\":8993:8997   */\n  0x1f\n    /* \"#utility.yul\":8985:8991   */\n  dup10\n    /* \"#utility.yul\":8981:8998   */\n  and\n    /* \"#utility.yul\":8970:8979   */\n  dup3\n    /* \"#utility.yul\":8951:8999   */\n  tag_45\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8943:8949   */\n  dup4\n    /* \"#utility.yul\":8936:9000   */\n  sstore\n    /* \"#utility.yul\":8858:9014   */\n  pop\n    /* \"#utility.yul\":8835:9014   */\ntag_155:\n    /* \"#utility.yul\":9060:9061   */\n  0x01\n    /* \"#utility.yul\":9056:9057   */\n  0x02\n    /* \"#utility.yul\":9048:9054   */\n  dup9\n    /* \"#utility.yul\":9044:9058   */\n  mul\n    /* \"#utility.yul\":9040:9062   */\n  add\n    /* \"#utility.yul\":9034:9038   */\n  dup9\n    /* \"#utility.yul\":9027:9063   */\n  sstore\n    /* \"#utility.yul\":8462:9073   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8425:9312   */\ntag_147:\n  pop\n    /* \"#utility.yul\":8015:9318   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7923:9318   */\n  pop\n  pop\n  jump\t// out\n    /* \"Dcoffer/ERC721A/test.sol\":1024:22016  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/ERC721A/test.sol\":1024:22016  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f773399\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x18160ddd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x325b272a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x38020dcc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":4435:4740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":7551:7651  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":9146:9350  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":8708:9080  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Dcoffer/ERC721A/test.sol\":3493:3805  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":10011:10181  function transferFrom(... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Dcoffer/ERC721A/test.sol\":2636:2932  function BlockScore(address user)public view returns(uint256){... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":1208:1235  uint256 public _DCFperBlock */\n    tag_10:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":10252:10437  function safeTransferFrom(... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"Dcoffer/ERC721A/test.sol\":7359:7484  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":4804:5010  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":7720:7824  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":1179:1199  uint256 public _salt */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":9422:9709  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"Dcoffer/ERC721A/test.sol\":10508:10878  function safeTransferFrom(... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"Dcoffer/ERC721A/test.sol\":7895:8213  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":3815:3987  function maxSupply() public view override returns (uint256) {       ... */\n    tag_19:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":9780:9944  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/ERC721A/test.sol\":4435:4740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"Dcoffer/ERC721A/test.sol\":4537:4541  bool */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":4589:4614  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4614  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4585  interfaceId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4614  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4679  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":4646:4679  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"Dcoffer/ERC721A/test.sol\":4631:4679  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":4631:4642  interfaceId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":4631:4679  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4679  interfaceId == type(IERC721).interfaceId ||... */\n    tag_98:\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4732  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":4696:4732  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"Dcoffer/ERC721A/test.sol\":4720:4731  interfaceId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":4696:4719  super.supportsInterface */\n      tag_101\n        /* \"Dcoffer/ERC721A/test.sol\":4696:4732  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"Dcoffer/ERC721A/test.sol\":4574:4732  interfaceId == type(IERC721).interfaceId ||... */\n    tag_99:\n        /* \"Dcoffer/ERC721A/test.sol\":4554:4732  return... */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":4435:4740  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":7551:7651  function name() public view virtual override returns (string memory) {... */\n    tag_31:\n        /* \"Dcoffer/ERC721A/test.sol\":7605:7618  string memory */\n      0x60\n        /* \"Dcoffer/ERC721A/test.sol\":7638:7643  _name */\n      0x05\n        /* \"Dcoffer/ERC721A/test.sol\":7631:7643  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":7551:7651  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":9146:9350  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_37:\n        /* \"Dcoffer/ERC721A/test.sol\":9214:9221  address */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9239:9255  _exists(tokenId) */\n      tag_110\n        /* \"Dcoffer/ERC721A/test.sol\":9247:9254  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":9239:9246  _exists */\n      tag_111\n        /* \"Dcoffer/ERC721A/test.sol\":9239:9255  _exists(tokenId) */\n      jump\t// in\n    tag_110:\n        /* \"Dcoffer/ERC721A/test.sol\":9234:9298  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_112\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":9264:9298  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":9234:9298  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_112:\n        /* \"Dcoffer/ERC721A/test.sol\":9318:9333  _tokenApprovals */\n      0x09\n        /* \"Dcoffer/ERC721A/test.sol\":9318:9342  _tokenApprovals[tokenId] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9334:9341  tokenId */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":9318:9342  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":9311:9342  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":9146:9350  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":8708:9080  function approve(address to, uint256 tokenId) public override {... */\n    tag_43:\n        /* \"Dcoffer/ERC721A/test.sol\":8781:8794  address owner */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":8797:8821  ERC721A.ownerOf(tokenId) */\n      tag_114\n        /* \"Dcoffer/ERC721A/test.sol\":8813:8820  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":8797:8812  ERC721A.ownerOf */\n      tag_65\n        /* \"Dcoffer/ERC721A/test.sol\":8797:8821  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_114:\n        /* \"Dcoffer/ERC721A/test.sol\":8781:8821  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":8842:8847  owner */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":8836:8847  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":8836:8838  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":8836:8847  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":8832:8880  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_115\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":8856:8880  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":8832:8880  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_115:\n        /* \"Dcoffer/ERC721A/test.sol\":8913:8918  owner */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":8897:8918  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":8897:8909  _msgSender() */\n      tag_116\n        /* \"Dcoffer/ERC721A/test.sol\":8897:8907  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":8897:8909  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"Dcoffer/ERC721A/test.sol\":8897:8918  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":8893:9032  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_118\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":8924:8961  isApprovedForAll(owner, _msgSender()) */\n      tag_119\n        /* \"Dcoffer/ERC721A/test.sol\":8941:8946  owner */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":8948:8960  _msgSender() */\n      tag_120\n        /* \"Dcoffer/ERC721A/test.sol\":8948:8958  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":8948:8960  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"Dcoffer/ERC721A/test.sol\":8924:8940  isApprovedForAll */\n      tag_95\n        /* \"Dcoffer/ERC721A/test.sol\":8924:8961  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_119:\n        /* \"Dcoffer/ERC721A/test.sol\":8920:9032  if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_121\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":8985:9020  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":8920:9032  if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_121:\n        /* \"Dcoffer/ERC721A/test.sol\":8893:9032  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_118:\n        /* \"Dcoffer/ERC721A/test.sol\":9044:9072  _approve(to, tokenId, owner) */\n      tag_122\n        /* \"Dcoffer/ERC721A/test.sol\":9053:9055  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":9057:9064  tokenId */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":9066:9071  owner */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":9044:9052  _approve */\n      tag_123\n        /* \"Dcoffer/ERC721A/test.sol\":9044:9072  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_122:\n        /* \"Dcoffer/ERC721A/test.sol\":8770:9080  {... */\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":8708:9080  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":3493:3805  function totalSupply() public view override returns (uint256) {... */\n    tag_45:\n        /* \"Dcoffer/ERC721A/test.sol\":3546:3553  uint256 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3771:3786  _startTokenId() */\n      tag_125\n        /* \"Dcoffer/ERC721A/test.sol\":3771:3784  _startTokenId */\n      tag_126\n        /* \"Dcoffer/ERC721A/test.sol\":3771:3786  _startTokenId() */\n      jump\t// in\n    tag_125:\n        /* \"Dcoffer/ERC721A/test.sol\":3756:3768  _burnCounter */\n      sload(0x04)\n        /* \"Dcoffer/ERC721A/test.sol\":3740:3753  _currentIndex */\n      sload(0x02)\n        /* \"Dcoffer/ERC721A/test.sol\":3740:3768  _currentIndex - _burnCounter */\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":3740:3786  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":3733:3786  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":3493:3805  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":10011:10181  function transferFrom(... */\n    tag_51:\n        /* \"Dcoffer/ERC721A/test.sol\":10145:10173  _transfer(from, to, tokenId) */\n      tag_128\n        /* \"Dcoffer/ERC721A/test.sol\":10155:10159  from */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10161:10163  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10165:10172  tokenId */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10145:10154  _transfer */\n      tag_129\n        /* \"Dcoffer/ERC721A/test.sol\":10145:10173  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_128:\n        /* \"Dcoffer/ERC721A/test.sol\":10011:10181  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":2636:2932  function BlockScore(address user)public view returns(uint256){... */\n    tag_55:\n        /* \"Dcoffer/ERC721A/test.sol\":2689:2696  uint256 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2708:2726  uint256 difference */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":2729:2767  block.number.sub(_BlockScore[user][1]) */\n      tag_131\n        /* \"Dcoffer/ERC721A/test.sol\":2746:2757  _BlockScore */\n      0x0b\n        /* \"Dcoffer/ERC721A/test.sol\":2746:2763  _BlockScore[user] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2758:2762  user */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":2746:2763  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":2746:2766  _BlockScore[user][1] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2764:2765  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":2746:2766  _BlockScore[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/ERC721A/test.sol\":2729:2741  block.number */\n      number\n        /* \"Dcoffer/ERC721A/test.sol\":2729:2745  block.number.sub */\n      tag_132\n      swap1\n        /* \"Dcoffer/ERC721A/test.sol\":2729:2767  block.number.sub(_BlockScore[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"Dcoffer/ERC721A/test.sol\":2708:2767  uint256 difference = block.number.sub(_BlockScore[user][1]) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":2778:2793  uint256 Product */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2796:2827  balanceOf(user).mul(difference) */\n      tag_133\n        /* \"Dcoffer/ERC721A/test.sol\":2816:2826  difference */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":2796:2811  balanceOf(user) */\n      tag_134\n        /* \"Dcoffer/ERC721A/test.sol\":2806:2810  user */\n      dup7\n        /* \"Dcoffer/ERC721A/test.sol\":2796:2805  balanceOf */\n      tag_69\n        /* \"Dcoffer/ERC721A/test.sol\":2796:2811  balanceOf(user) */\n      jump\t// in\n    tag_134:\n        /* \"Dcoffer/ERC721A/test.sol\":2796:2815  balanceOf(user).mul */\n      tag_135\n      swap1\n        /* \"Dcoffer/ERC721A/test.sol\":2796:2827  balanceOf(user).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"Dcoffer/ERC721A/test.sol\":2778:2827  uint256 Product = balanceOf(user).mul(difference) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":2838:2858  uint256 accumulation */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2894  _BlockScore[user][2].add(Product) */\n      tag_136\n        /* \"Dcoffer/ERC721A/test.sol\":2886:2893  Product */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2872  _BlockScore */\n      0x0b\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2878  _BlockScore[user] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2873:2877  user */\n      dup9\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2878  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2881  _BlockScore[user][2] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":2879:2880  2 */\n      0x02\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2881  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2885  _BlockScore[user][2].add */\n      tag_137\n      swap1\n        /* \"Dcoffer/ERC721A/test.sol\":2861:2894  _BlockScore[user][2].add(Product) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"Dcoffer/ERC721A/test.sol\":2838:2894  uint256 accumulation = _BlockScore[user][2].add(Product) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":2912:2924  accumulation */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":2905:2924  return accumulation */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":2636:2932  function BlockScore(address user)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":1208:1235  uint256 public _DCFperBlock */\n    tag_58:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":10252:10437  function safeTransferFrom(... */\n    tag_62:\n        /* \"Dcoffer/ERC721A/test.sol\":10390:10429  safeTransferFrom(from, to, tokenId, '') */\n      tag_139\n        /* \"Dcoffer/ERC721A/test.sol\":10407:10411  from */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10413:10415  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10417:10424  tokenId */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10390:10429  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":10390:10406  safeTransferFrom */\n      tag_84\n        /* \"Dcoffer/ERC721A/test.sol\":10390:10429  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_139:\n        /* \"Dcoffer/ERC721A/test.sol\":10252:10437  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":7359:7484  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_65:\n        /* \"Dcoffer/ERC721A/test.sol\":7423:7430  address */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":7450:7471  _ownershipOf(tokenId) */\n      tag_141\n        /* \"Dcoffer/ERC721A/test.sol\":7463:7470  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":7450:7462  _ownershipOf */\n      tag_142\n        /* \"Dcoffer/ERC721A/test.sol\":7450:7471  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \"Dcoffer/ERC721A/test.sol\":7450:7476  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":7443:7476  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":7359:7484  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":4804:5010  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_69:\n        /* \"Dcoffer/ERC721A/test.sol\":4868:4875  uint256 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":4909:4910  0 */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":4892:4911  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":4892:4897  owner */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":4892:4911  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":4888:4948  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_144\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":4920:4948  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":4888:4948  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_144:\n        /* \"Dcoffer/ERC721A/test.sol\":4974:4986  _addressData */\n      0x08\n        /* \"Dcoffer/ERC721A/test.sol\":4974:4993  _addressData[owner] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":4987:4992  owner */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":4974:4993  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":4974:5001  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":4966:5002  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":4959:5002  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":4804:5010  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":7720:7824  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"Dcoffer/ERC721A/test.sol\":7776:7789  string memory */\n      0x60\n        /* \"Dcoffer/ERC721A/test.sol\":7809:7816  _symbol */\n      0x06\n        /* \"Dcoffer/ERC721A/test.sol\":7802:7816  return _symbol */\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_104\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_104\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":7720:7824  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":1179:1199  uint256 public _salt */\n    tag_75:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":9422:9709  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_80:\n        /* \"Dcoffer/ERC721A/test.sol\":9533:9545  _msgSender() */\n      tag_152\n        /* \"Dcoffer/ERC721A/test.sol\":9533:9543  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":9533:9545  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"Dcoffer/ERC721A/test.sol\":9521:9545  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":9521:9529  operator */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":9521:9545  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":9517:9571  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_153\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":9554:9571  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":9517:9571  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_153:\n        /* \"Dcoffer/ERC721A/test.sol\":9629:9637  approved */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":9584:9602  _operatorApprovals */\n      0x0a\n        /* \"Dcoffer/ERC721A/test.sol\":9584:9616  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9603:9615  _msgSender() */\n      tag_154\n        /* \"Dcoffer/ERC721A/test.sol\":9603:9613  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":9603:9615  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"Dcoffer/ERC721A/test.sol\":9584:9616  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":9584:9626  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9617:9625  operator */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":9584:9626  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9584:9637  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":9682:9690  operator */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":9653:9701  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":9668:9680  _msgSender() */\n      tag_155\n        /* \"Dcoffer/ERC721A/test.sol\":9668:9678  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":9668:9680  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"Dcoffer/ERC721A/test.sol\":9653:9701  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"Dcoffer/ERC721A/test.sol\":9692:9700  approved */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":9653:9701  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Dcoffer/ERC721A/test.sol\":9422:9709  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":10508:10878  function safeTransferFrom(... */\n    tag_84:\n        /* \"Dcoffer/ERC721A/test.sol\":10675:10703  _transfer(from, to, tokenId) */\n      tag_158\n        /* \"Dcoffer/ERC721A/test.sol\":10685:10689  from */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10691:10693  to */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10695:10702  tokenId */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10675:10684  _transfer */\n      tag_129\n        /* \"Dcoffer/ERC721A/test.sol\":10675:10703  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_158:\n        /* \"Dcoffer/ERC721A/test.sol\":10718:10733  to.isContract() */\n      tag_159\n        /* \"Dcoffer/ERC721A/test.sol\":10718:10720  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":10718:10731  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_160\n        /* \"Dcoffer/ERC721A/test.sol\":10718:10733  to.isContract() */\n      jump\t// in\n    tag_159:\n        /* \"Dcoffer/ERC721A/test.sol\":10714:10871  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":10739:10795  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_162\n        /* \"Dcoffer/ERC721A/test.sol\":10770:10774  from */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10776:10778  to */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10780:10787  tokenId */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10789:10794  _data */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":10739:10769  _checkContractOnERC721Received */\n      tag_163\n        /* \"Dcoffer/ERC721A/test.sol\":10739:10795  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_162:\n        /* \"Dcoffer/ERC721A/test.sol\":10735:10871  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_164\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":10819:10859  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":10735:10871  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_164:\n        /* \"Dcoffer/ERC721A/test.sol\":10714:10871  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"Dcoffer/ERC721A/test.sol\":10508:10878  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":7895:8213  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_87:\n        /* \"Dcoffer/ERC721A/test.sol\":7968:7981  string memory */\n      0x60\n        /* \"Dcoffer/ERC721A/test.sol\":7999:8015  _exists(tokenId) */\n      tag_166\n        /* \"Dcoffer/ERC721A/test.sol\":8007:8014  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":7999:8006  _exists */\n      tag_111\n        /* \"Dcoffer/ERC721A/test.sol\":7999:8015  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"Dcoffer/ERC721A/test.sol\":7994:8053  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_167\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":8024:8053  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":7994:8053  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_167:\n        /* \"Dcoffer/ERC721A/test.sol\":8066:8087  string memory baseURI */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":8090:8100  _baseURI() */\n      tag_168\n        /* \"Dcoffer/ERC721A/test.sol\":8090:8098  _baseURI */\n      tag_169\n        /* \"Dcoffer/ERC721A/test.sol\":8090:8100  _baseURI() */\n      jump\t// in\n    tag_168:\n        /* \"Dcoffer/ERC721A/test.sol\":8066:8100  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":8143:8144  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":8124:8131  baseURI */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":8118:8139  bytes(baseURI).length */\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":8118:8144  bytes(baseURI).length != 0 */\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":8118:8205  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_170\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_171)\n    tag_170:\n        /* \"Dcoffer/ERC721A/test.sol\":8171:8178  baseURI */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":8180:8198  tokenId.toString() */\n      tag_172\n        /* \"Dcoffer/ERC721A/test.sol\":8180:8187  tokenId */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":8180:8196  tokenId.toString */\n      tag_173\n        /* \"Dcoffer/ERC721A/test.sol\":8180:8198  tokenId.toString() */\n      jump\t// in\n    tag_172:\n        /* \"Dcoffer/ERC721A/test.sol\":8154:8199  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Dcoffer/ERC721A/test.sol\":8118:8205  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_171:\n        /* \"Dcoffer/ERC721A/test.sol\":8111:8205  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":7895:8213  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":3815:3987  function maxSupply() public view override returns (uint256) {       ... */\n    tag_90:\n        /* \"Dcoffer/ERC721A/test.sol\":3866:3873  uint256 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3953:3968  _startTokenId() */\n      tag_177\n        /* \"Dcoffer/ERC721A/test.sol\":3953:3966  _startTokenId */\n      tag_126\n        /* \"Dcoffer/ERC721A/test.sol\":3953:3968  _startTokenId() */\n      jump\t// in\n    tag_177:\n        /* \"Dcoffer/ERC721A/test.sol\":3938:3950  _burnCounter */\n      sload(0x04)\n        /* \"Dcoffer/ERC721A/test.sol\":3925:3935  _maxSupply */\n      sload(0x03)\n        /* \"Dcoffer/ERC721A/test.sol\":3925:3950  _maxSupply - _burnCounter */\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":3925:3968  _maxSupply - _burnCounter - _startTokenId() */\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":3918:3968  return _maxSupply - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":3815:3987  function maxSupply() public view override returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":9780:9944  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_95:\n        /* \"Dcoffer/ERC721A/test.sol\":9877:9881  bool */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9901:9919  _operatorApprovals */\n      0x0a\n        /* \"Dcoffer/ERC721A/test.sol\":9901:9926  _operatorApprovals[owner] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9920:9925  owner */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":9901:9926  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":9901:9936  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":9927:9935  operator */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":9901:9936  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":9894:9936  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":9780:9944  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":11092:11266  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_111:\n        /* \"Dcoffer/ERC721A/test.sol\":11149:11153  bool */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":11192:11199  tokenId */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11188  _startTokenId() */\n      tag_181\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11186  _startTokenId */\n      tag_126\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11188  _startTokenId() */\n      jump\t// in\n    tag_181:\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11199  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11226  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_182\n      jumpi\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":11213:11226  _currentIndex */\n      sload(0x02)\n        /* \"Dcoffer/ERC721A/test.sol\":11203:11210  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":11203:11226  tokenId < _currentIndex */\n      lt\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11226  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_182:\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11258  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":11231:11242  _ownerships */\n      0x07\n        /* \"Dcoffer/ERC721A/test.sol\":11231:11251  _ownerships[tokenId] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":11243:11250  tokenId */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":11231:11251  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":11231:11258  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":11230:11258  !_ownerships[tokenId].burned */\n      iszero\n        /* \"Dcoffer/ERC721A/test.sol\":11173:11258  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_183:\n        /* \"Dcoffer/ERC721A/test.sol\":11166:11258  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":11092:11266  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":19034:19230  function _approve(... */\n    tag_123:\n        /* \"Dcoffer/ERC721A/test.sol\":19176:19178  to */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":19149:19164  _tokenApprovals */\n      0x09\n        /* \"Dcoffer/ERC721A/test.sol\":19149:19173  _tokenApprovals[tokenId] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":19165:19172  tokenId */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":19149:19173  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":19149:19178  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":19214:19221  tokenId */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":19210:19212  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":19194:19222  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":19203:19208  owner */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":19194:19222  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Dcoffer/ERC721A/test.sol\":19034:19230  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":3267:3359  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_126:\n        /* \"Dcoffer/ERC721A/test.sol\":3323:3330  uint256 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3267:3359  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":13879:16073  function _transfer(... */\n    tag_129:\n        /* \"Dcoffer/ERC721A/test.sol\":13994:14016  updateBlockScore(from) */\n      tag_188\n        /* \"Dcoffer/ERC721A/test.sol\":14011:14015  from */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":13994:14010  updateBlockScore */\n      tag_189\n        /* \"Dcoffer/ERC721A/test.sol\":13994:14016  updateBlockScore(from) */\n      jump\t// in\n    tag_188:\n        /* \"Dcoffer/ERC721A/test.sol\":14027:14047  updateBlockScore(to) */\n      tag_190\n        /* \"Dcoffer/ERC721A/test.sol\":14044:14046  to */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":14027:14043  updateBlockScore */\n      tag_189\n        /* \"Dcoffer/ERC721A/test.sol\":14027:14047  updateBlockScore(to) */\n      jump\t// in\n    tag_190:\n        /* \"Dcoffer/ERC721A/test.sol\":14058:14093  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":14096:14117  _ownershipOf(tokenId) */\n      tag_191\n        /* \"Dcoffer/ERC721A/test.sol\":14109:14116  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":14096:14108  _ownershipOf */\n      tag_142\n        /* \"Dcoffer/ERC721A/test.sol\":14096:14117  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"Dcoffer/ERC721A/test.sol\":14058:14117  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":14156:14160  from */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":14134:14160  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":14134:14147  prevOwnership */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":14134:14152  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":14134:14160  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":14130:14197  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_192\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":14169:14197  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":14130:14197  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_192:\n        /* \"Dcoffer/ERC721A/test.sol\":14210:14232  bool isApprovedOrOwner */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":14252:14256  from */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14256  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14248  _msgSender() */\n      tag_193\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14246  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14248  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14256  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14309  _msgSender() == from ||... */\n      dup1\n      tag_194\n      jumpi\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":14273:14309  isApprovedForAll(from, _msgSender()) */\n      tag_195\n        /* \"Dcoffer/ERC721A/test.sol\":14290:14294  from */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":14296:14308  _msgSender() */\n      tag_196\n        /* \"Dcoffer/ERC721A/test.sol\":14296:14306  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":14296:14308  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"Dcoffer/ERC721A/test.sol\":14273:14289  isApprovedForAll */\n      tag_95\n        /* \"Dcoffer/ERC721A/test.sol\":14273:14309  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_195:\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14309  _msgSender() == from ||... */\n    tag_194:\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14362  _msgSender() == from ||... */\n      dup1\n      tag_197\n      jumpi\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":14350:14362  _msgSender() */\n      tag_198\n        /* \"Dcoffer/ERC721A/test.sol\":14350:14360  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":14350:14362  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"Dcoffer/ERC721A/test.sol\":14326:14362  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":14326:14346  getApproved(tokenId) */\n      tag_199\n        /* \"Dcoffer/ERC721A/test.sol\":14338:14345  tokenId */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":14326:14337  getApproved */\n      tag_37\n        /* \"Dcoffer/ERC721A/test.sol\":14326:14346  getApproved(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"Dcoffer/ERC721A/test.sol\":14326:14362  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":14236:14362  _msgSender() == from ||... */\n    tag_197:\n        /* \"Dcoffer/ERC721A/test.sol\":14210:14363  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":14381:14398  isApprovedOrOwner */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":14376:14442  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_200\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":14407:14442  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":14376:14442  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_200:\n        /* \"Dcoffer/ERC721A/test.sol\":14471:14472  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":14457:14473  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":14457:14459  to */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":14457:14473  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":14453:14505  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_201\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":14482:14505  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":14453:14505  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_201:\n        /* \"Dcoffer/ERC721A/test.sol\":14518:14561  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_202\n        /* \"Dcoffer/ERC721A/test.sol\":14540:14544  from */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":14546:14548  to */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":14550:14557  tokenId */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":14559:14560  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":14518:14539  _beforeTokenTransfers */\n      tag_203\n        /* \"Dcoffer/ERC721A/test.sol\":14518:14561  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_202:\n        /* \"Dcoffer/ERC721A/test.sol\":14626:14661  _approve(address(0), tokenId, from) */\n      tag_204\n        /* \"Dcoffer/ERC721A/test.sol\":14643:14644  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":14647:14654  tokenId */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":14656:14660  from */\n      dup8\n        /* \"Dcoffer/ERC721A/test.sol\":14626:14634  _approve */\n      tag_123\n        /* \"Dcoffer/ERC721A/test.sol\":14626:14661  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_204:\n        /* \"Dcoffer/ERC721A/test.sol\":14987:14988  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":14957:14969  _addressData */\n      0x08\n        /* \"Dcoffer/ERC721A/test.sol\":14957:14975  _addressData[from] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":14970:14974  from */\n      dup8\n        /* \"Dcoffer/ERC721A/test.sol\":14957:14975  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":14957:14983  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":14957:14988  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15031:15032  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":15003:15015  _addressData */\n      0x08\n        /* \"Dcoffer/ERC721A/test.sol\":15003:15019  _addressData[to] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15016:15018  to */\n      dup7\n        /* \"Dcoffer/ERC721A/test.sol\":15003:15019  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":15003:15027  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15003:15032  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15049:15080  TokenOwnership storage currSlot */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15083:15094  _ownerships */\n      0x07\n        /* \"Dcoffer/ERC721A/test.sol\":15083:15103  _ownerships[tokenId] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15095:15102  tokenId */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":15083:15103  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":15049:15103  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15134:15136  to */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":15118:15126  currSlot */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":15118:15131  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15118:15136  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15184:15199  block.timestamp */\n      timestamp\n        /* \"Dcoffer/ERC721A/test.sol\":15151:15159  currSlot */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":15151:15174  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"Dcoffer/ERC721A/test.sol\":15151:15200  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15452:15471  uint256 nextTokenId */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15484:15485  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":15474:15481  tokenId */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":15474:15485  tokenId + 1 */\n      add\n        /* \"Dcoffer/ERC721A/test.sol\":15452:15485  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15500:15531  TokenOwnership storage nextSlot */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15534:15545  _ownerships */\n      0x07\n        /* \"Dcoffer/ERC721A/test.sol\":15534:15558  _ownerships[nextTokenId] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15546:15557  nextTokenId */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":15534:15558  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":15500:15558  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15602:15603  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15577:15604  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":15577:15585  nextSlot */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":15577:15590  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":15577:15604  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":15573:15957  if (nextSlot.addr == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":15787:15800  _currentIndex */\n      sload(0x02)\n        /* \"Dcoffer/ERC721A/test.sol\":15772:15783  nextTokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":15772:15800  nextTokenId != _currentIndex */\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":15768:15942  if (nextTokenId != _currentIndex) {... */\n      tag_206\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":15841:15845  from */\n      dup8\n        /* \"Dcoffer/ERC721A/test.sol\":15825:15833  nextSlot */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":15825:15838  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":15825:15845  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15894:15907  prevOwnership */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":15894:15922  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":15868:15876  nextSlot */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":15868:15891  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"Dcoffer/ERC721A/test.sol\":15868:15922  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":15768:15942  if (nextTokenId != _currentIndex) {... */\n    tag_206:\n        /* \"Dcoffer/ERC721A/test.sol\":15573:15957  if (nextSlot.addr == address(0)) {... */\n    tag_205:\n        /* \"Dcoffer/ERC721A/test.sol\":14932:15968  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":16004:16011  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":16000:16002  to */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":15985:16012  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":15994:15998  from */\n      dup7\n        /* \"Dcoffer/ERC721A/test.sol\":15985:16012  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Dcoffer/ERC721A/test.sol\":16023:16065  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_207\n        /* \"Dcoffer/ERC721A/test.sol\":16044:16048  from */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":16050:16052  to */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":16054:16061  tokenId */\n      dup6\n        /* \"Dcoffer/ERC721A/test.sol\":16063:16064  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":16023:16043  _afterTokenTransfers */\n      tag_208\n        /* \"Dcoffer/ERC721A/test.sol\":16023:16065  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_207:\n        /* \"Dcoffer/ERC721A/test.sol\":13983:16073  {... */\n      pop\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":13879:16073  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":6186:7297  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_142:\n        /* \"Dcoffer/ERC721A/test.sol\":6248:6269  TokenOwnership memory */\n      tag_218\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"Dcoffer/ERC721A/test.sol\":6282:6294  uint256 curr */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":6297:6304  tokenId */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":6282:6304  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":6365:6369  curr */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":6346:6361  _startTokenId() */\n      tag_221\n        /* \"Dcoffer/ERC721A/test.sol\":6346:6359  _startTokenId */\n      tag_126\n        /* \"Dcoffer/ERC721A/test.sol\":6346:6361  _startTokenId() */\n      jump\t// in\n    tag_221:\n        /* \"Dcoffer/ERC721A/test.sol\":6346:6369  _startTokenId() <= curr */\n      gt\n        /* \"Dcoffer/ERC721A/test.sol\":6342:7230  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n      tag_222\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":6382:6395  _currentIndex */\n      sload(0x02)\n        /* \"Dcoffer/ERC721A/test.sol\":6375:6379  curr */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":6375:6395  curr < _currentIndex */\n      lt\n        /* \"Dcoffer/ERC721A/test.sol\":6371:7230  if (curr < _currentIndex) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":6416:6447  TokenOwnership memory ownership */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":6450:6461  _ownerships */\n      0x07\n        /* \"Dcoffer/ERC721A/test.sol\":6450:6467  _ownerships[curr] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":6462:6466  curr */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":6450:6467  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":6416:6467  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":6491:6500  ownership */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":6491:6507  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":6486:7215  if (!ownership.burned) {... */\n      tag_224\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":6562:6563  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":6536:6564  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":6536:6545  ownership */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":6536:6550  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":6536:6564  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":6532:6633  if (ownership.addr != address(0)) {... */\n      tag_225\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":6600:6609  ownership */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":6593:6609  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_220)\n        /* \"Dcoffer/ERC721A/test.sol\":6532:6633  if (ownership.addr != address(0)) {... */\n    tag_225:\n        /* \"Dcoffer/ERC721A/test.sol\":6935:7196  while (true) {... */\n    tag_226:\n        /* \"Dcoffer/ERC721A/test.sol\":6942:6946  true */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":6935:7196  while (true) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":6975:6981  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":7020:7031  _ownerships */\n      0x07\n        /* \"Dcoffer/ERC721A/test.sol\":7020:7037  _ownerships[curr] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":7032:7036  curr */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":7020:7037  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":7008:7037  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":7094:7095  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":7068:7096  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":7068:7077  ownership */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":7068:7082  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":7068:7096  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":7064:7173  if (ownership.addr != address(0)) {... */\n      tag_228\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":7136:7145  ownership */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":7129:7145  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_220)\n        /* \"Dcoffer/ERC721A/test.sol\":7064:7173  if (ownership.addr != address(0)) {... */\n    tag_228:\n        /* \"Dcoffer/ERC721A/test.sol\":6935:7196  while (true) {... */\n      jump(tag_226)\n    tag_227:\n        /* \"Dcoffer/ERC721A/test.sol\":6486:7215  if (!ownership.burned) {... */\n    tag_224:\n        /* \"Dcoffer/ERC721A/test.sol\":6397:7230  {... */\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":6371:7230  if (curr < _currentIndex) {... */\n    tag_223:\n        /* \"Dcoffer/ERC721A/test.sol\":6342:7230  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n    tag_222:\n        /* \"Dcoffer/ERC721A/test.sol\":7258:7289  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":6186:7297  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_220:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":19722:20389  function _checkContractOnERC721Received(... */\n    tag_163:\n        /* \"Dcoffer/ERC721A/test.sol\":19885:19889  bool */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":19922:19924  to */\n      dup4\n        /* \"Dcoffer/ERC721A/test.sol\":19906:19942  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"Dcoffer/ERC721A/test.sol\":19943:19955  _msgSender() */\n      tag_231\n        /* \"Dcoffer/ERC721A/test.sol\":19943:19953  _msgSender */\n      tag_117\n        /* \"Dcoffer/ERC721A/test.sol\":19943:19955  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"Dcoffer/ERC721A/test.sol\":19957:19961  from */\n      dup8\n        /* \"Dcoffer/ERC721A/test.sol\":19963:19970  tokenId */\n      dup7\n        /* \"Dcoffer/ERC721A/test.sol\":19972:19977  _data */\n      dup7\n        /* \"Dcoffer/ERC721A/test.sol\":19906:19978  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x01\n    tag_234:\n        /* \"Dcoffer/ERC721A/test.sol\":19902:20382  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_237\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":20157:20158  0 */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":20140:20146  reason */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":20140:20153  reason.length */\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":20140:20158  reason.length == 0 */\n      sub\n        /* \"Dcoffer/ERC721A/test.sol\":20136:20371  if (reason.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"Dcoffer/ERC721A/test.sol\":20186:20226  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":20136:20371  if (reason.length == 0) {... */\n    tag_243:\n        /* \"Dcoffer/ERC721A/test.sol\":20329:20335  reason */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":20323:20336  mload(reason) */\n      mload\n        /* \"Dcoffer/ERC721A/test.sol\":20314:20320  reason */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":20310:20312  32 */\n      0x20\n        /* \"Dcoffer/ERC721A/test.sol\":20306:20321  add(32, reason) */\n      add\n        /* \"Dcoffer/ERC721A/test.sol\":20299:20337  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"Dcoffer/ERC721A/test.sol\":19902:20382  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_237:\n        /* \"Dcoffer/ERC721A/test.sol\":20035:20080  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"Dcoffer/ERC721A/test.sol\":20025:20080  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Dcoffer/ERC721A/test.sol\":20025:20031  retval */\n      dup2\n        /* \"Dcoffer/ERC721A/test.sol\":20025:20080  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Dcoffer/ERC721A/test.sol\":20018:20080  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":19722:20389  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":8461:8646  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_169:\n        /* \"Dcoffer/ERC721A/test.sol\":8512:8525  string memory */\n      0x60\n        /* \"Dcoffer/ERC721A/test.sol\":8538:8628  return 'https://gateway.pinata.cloud/ipfs/QmeyKnvXXMxAuWG5pt35Ez8QhJhR63RDVSwUfsjKayR42Z/' */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_626642f6930f156f677ccaa99d1115840f2527d6f062eede1de4dda1bd081a2d\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":8461:8646  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":674:675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:670  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_247)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:741  uint256 temp = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":751:765  uint256 digits */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":790:791  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:786  temp */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      dup1\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup3\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_249)\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_256\n      tag_257\n      jump\t// in\n    tag_256:\n    tag_255:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_258:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:920  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup3\n      tag_261\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_261:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_264\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_266\n      tag_267\n      jump\t// in\n    tag_266:\n    tag_265:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup6\n      tag_268\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_268:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_259)\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1087  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1067:1088  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_247:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":2940:3149  function updateBlockScore(address user)private{... */\n    tag_189:\n        /* \"Dcoffer/ERC721A/test.sol\":2997:3017  uint256 accumulation */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3020:3036  BlockScore(user) */\n      tag_270\n        /* \"Dcoffer/ERC721A/test.sol\":3031:3035  user */\n      dup3\n        /* \"Dcoffer/ERC721A/test.sol\":3020:3030  BlockScore */\n      tag_55\n        /* \"Dcoffer/ERC721A/test.sol\":3020:3036  BlockScore(user) */\n      jump\t// in\n    tag_270:\n        /* \"Dcoffer/ERC721A/test.sol\":2997:3036  uint256 accumulation = BlockScore(user) */\n      swap1\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":3076:3088  accumulation */\n      dup1\n        /* \"Dcoffer/ERC721A/test.sol\":3054:3065  _BlockScore */\n      0x0b\n        /* \"Dcoffer/ERC721A/test.sol\":3054:3071  _BlockScore[user] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3066:3070  user */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":3054:3071  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":3054:3074  _BlockScore[user][2] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3072:3073  2 */\n      0x02\n        /* \"Dcoffer/ERC721A/test.sol\":3054:3074  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":3054:3088  _BlockScore[user][2]= accumulation */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":3129:3141  block.number */\n      number\n        /* \"Dcoffer/ERC721A/test.sol\":3106:3117  _BlockScore */\n      0x0b\n        /* \"Dcoffer/ERC721A/test.sol\":3106:3123  _BlockScore[user] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3118:3122  user */\n      dup5\n        /* \"Dcoffer/ERC721A/test.sol\":3106:3123  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":3106:3126  _BlockScore[user][1] */\n      0x00\n        /* \"Dcoffer/ERC721A/test.sol\":3124:3125  1 */\n      0x01\n        /* \"Dcoffer/ERC721A/test.sol\":3106:3126  _BlockScore[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/ERC721A/test.sol\":3106:3141  _BlockScore[user][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":2986:3149  {... */\n      pop\n        /* \"Dcoffer/ERC721A/test.sol\":2940:3149  function updateBlockScore(address user)private{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":21037:21196  function _beforeTokenTransfers(... */\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/ERC721A/test.sol\":21855:22013  function _afterTokenTransfers(... */\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_219:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_273:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_274:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_275:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_276:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_277:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_276\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_278:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_277\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_274\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_278\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_279:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_280:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_279\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_280\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_281:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_282:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_283:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_336:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_284:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_285:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_341\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_281\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2329:2400   */\n      tag_342\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_282\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_343\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_283\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2499:2528   */\n      tag_344\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_284\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_33:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_346\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_285\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_286:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_287:\n        /* \"#utility.yul\":3016:3040   */\n      tag_349\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_286\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_350:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_288:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_352\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_287\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_36:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_355\n      tag_274\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3292:3411   */\n    tag_354:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_356\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_288\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_289:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_290:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_359\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_289\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_291:\n        /* \"#utility.yul\":3872:3896   */\n      tag_361\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_290\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_39:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_363\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_291\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_292:\n        /* \"#utility.yul\":4210:4234   */\n      tag_365\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_290\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_366:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_293:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_368\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_292\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_42:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_371\n      tag_274\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4503:4622   */\n    tag_370:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_372\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_293\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_373\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_288\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_294:\n        /* \"#utility.yul\":4977:5001   */\n      tag_375\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_286\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_47:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_377\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_294\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_50:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_380\n      tag_274\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5352:5471   */\n    tag_379:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_381\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_293\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_382\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_293\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_383\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_288\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_54:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_386\n      tag_274\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5943:6062   */\n    tag_385:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_387\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_293\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_295:\n        /* \"#utility.yul\":6272:6293   */\n      tag_389\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_279\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_390:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_296:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_392\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_295\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_79:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_395\n      tag_274\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6553:6672   */\n    tag_394:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_396\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_293\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_397\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_296\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_297:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_298:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_257:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_299:\n        /* \"#utility.yul\":7452:7479   */\n      tag_402\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_284\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_404\n      tag_257\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7525:7613   */\n    tag_403:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_300:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_406\n      tag_273\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_407\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_299\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_301:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_410\n      tag_257\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7928:7984   */\n    tag_409:\n        /* \"#utility.yul\":8002:8031   */\n      tag_411\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_284\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_302:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_303:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_414\n        /* \"#utility.yul\":8374:8422   */\n      tag_415\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_301\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8358:8423   */\n      tag_300\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_417\n      tag_298\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8498:8610   */\n    tag_416:\n        /* \"#utility.yul\":8619:8673   */\n      tag_418\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_302\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_304:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_421\n      tag_297\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8769:8891   */\n    tag_420:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_422\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_303\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_83:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_425\n      tag_274\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9178:9298   */\n    tag_424:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_426\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_293\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_427\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_293\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_428\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_288\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_430\n      tag_275\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9765:9882   */\n    tag_429:\n        /* \"#utility.yul\":9906:9968   */\n      tag_431\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_304\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_94:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_434\n      tag_274\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10084:10203   */\n    tag_433:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_435\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_293\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_436\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_293\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_305:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_104:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_439:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_441\n      tag_305\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10887:10971   */\n    tag_440:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_306:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_307:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_444\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_281\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11326:11415   */\n      tag_445\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_306\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_446\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_283\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_175:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_448\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_307\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_449\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_307\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12154   */\n    tag_308:\n        /* \"#utility.yul\":12022:12099   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12019:12020   */\n      0x00\n        /* \"#utility.yul\":12012:12100   */\n      mstore\n        /* \"#utility.yul\":12119:12123   */\n      0x11\n        /* \"#utility.yul\":12116:12117   */\n      0x04\n        /* \"#utility.yul\":12109:12124   */\n      mstore\n        /* \"#utility.yul\":12143:12147   */\n      0x24\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12133:12148   */\n      revert\n        /* \"#utility.yul\":12160:12354   */\n    tag_211:\n        /* \"#utility.yul\":12200:12204   */\n      0x00\n        /* \"#utility.yul\":12220:12240   */\n      tag_452\n        /* \"#utility.yul\":12238:12239   */\n      dup3\n        /* \"#utility.yul\":12220:12240   */\n      tag_286\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12215:12240   */\n      swap2\n      pop\n        /* \"#utility.yul\":12254:12274   */\n      tag_453\n        /* \"#utility.yul\":12272:12273   */\n      dup4\n        /* \"#utility.yul\":12254:12274   */\n      tag_286\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12249:12274   */\n      swap3\n      pop\n        /* \"#utility.yul\":12298:12299   */\n      dup3\n        /* \"#utility.yul\":12295:12296   */\n      dup3\n        /* \"#utility.yul\":12291:12300   */\n      sub\n        /* \"#utility.yul\":12283:12300   */\n      swap1\n      pop\n        /* \"#utility.yul\":12322:12323   */\n      dup2\n        /* \"#utility.yul\":12316:12320   */\n      dup2\n        /* \"#utility.yul\":12313:12324   */\n      gt\n        /* \"#utility.yul\":12310:12347   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":12327:12345   */\n      tag_455\n      tag_308\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12310:12347   */\n    tag_454:\n        /* \"#utility.yul\":12160:12354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12360:12770   */\n    tag_214:\n        /* \"#utility.yul\":12400:12407   */\n      0x00\n        /* \"#utility.yul\":12423:12443   */\n      tag_457\n        /* \"#utility.yul\":12441:12442   */\n      dup3\n        /* \"#utility.yul\":12423:12443   */\n      tag_286\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12418:12443   */\n      swap2\n      pop\n        /* \"#utility.yul\":12457:12477   */\n      tag_458\n        /* \"#utility.yul\":12475:12476   */\n      dup4\n        /* \"#utility.yul\":12457:12477   */\n      tag_286\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12452:12477   */\n      swap3\n      pop\n        /* \"#utility.yul\":12512:12513   */\n      dup3\n        /* \"#utility.yul\":12509:12510   */\n      dup3\n        /* \"#utility.yul\":12505:12514   */\n      mul\n        /* \"#utility.yul\":12534:12564   */\n      tag_459\n        /* \"#utility.yul\":12552:12563   */\n      dup2\n        /* \"#utility.yul\":12534:12564   */\n      tag_286\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12523:12564   */\n      swap2\n      pop\n        /* \"#utility.yul\":12713:12714   */\n      dup3\n        /* \"#utility.yul\":12704:12711   */\n      dup3\n        /* \"#utility.yul\":12700:12715   */\n      div\n        /* \"#utility.yul\":12697:12698   */\n      dup5\n        /* \"#utility.yul\":12694:12716   */\n      eq\n        /* \"#utility.yul\":12674:12675   */\n      dup4\n        /* \"#utility.yul\":12667:12676   */\n      iszero\n        /* \"#utility.yul\":12647:12730   */\n      or\n        /* \"#utility.yul\":12624:12763   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":12743:12761   */\n      tag_461\n      tag_308\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12624:12763   */\n    tag_460:\n        /* \"#utility.yul\":12408:12770   */\n      pop\n        /* \"#utility.yul\":12360:12770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12776:12967   */\n    tag_217:\n        /* \"#utility.yul\":12816:12819   */\n      0x00\n        /* \"#utility.yul\":12835:12855   */\n      tag_463\n        /* \"#utility.yul\":12853:12854   */\n      dup3\n        /* \"#utility.yul\":12835:12855   */\n      tag_286\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12830:12855   */\n      swap2\n      pop\n        /* \"#utility.yul\":12869:12889   */\n      tag_464\n        /* \"#utility.yul\":12887:12888   */\n      dup4\n        /* \"#utility.yul\":12869:12889   */\n      tag_286\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12864:12889   */\n      swap3\n      pop\n        /* \"#utility.yul\":12912:12913   */\n      dup3\n        /* \"#utility.yul\":12909:12910   */\n      dup3\n        /* \"#utility.yul\":12905:12914   */\n      add\n        /* \"#utility.yul\":12898:12914   */\n      swap1\n      pop\n        /* \"#utility.yul\":12933:12936   */\n      dup1\n        /* \"#utility.yul\":12930:12931   */\n      dup3\n        /* \"#utility.yul\":12927:12937   */\n      gt\n        /* \"#utility.yul\":12924:12960   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":12940:12958   */\n      tag_466\n      tag_308\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12924:12960   */\n    tag_465:\n        /* \"#utility.yul\":12776:12967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12973:13071   */\n    tag_309:\n        /* \"#utility.yul\":13024:13030   */\n      0x00\n        /* \"#utility.yul\":13058:13063   */\n      dup2\n        /* \"#utility.yul\":13052:13064   */\n      mload\n        /* \"#utility.yul\":13042:13064   */\n      swap1\n      pop\n        /* \"#utility.yul\":12973:13071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13077:13245   */\n    tag_310:\n        /* \"#utility.yul\":13160:13171   */\n      0x00\n        /* \"#utility.yul\":13194:13200   */\n      dup3\n        /* \"#utility.yul\":13189:13192   */\n      dup3\n        /* \"#utility.yul\":13182:13201   */\n      mstore\n        /* \"#utility.yul\":13234:13238   */\n      0x20\n        /* \"#utility.yul\":13229:13232   */\n      dup3\n        /* \"#utility.yul\":13225:13239   */\n      add\n        /* \"#utility.yul\":13210:13239   */\n      swap1\n      pop\n        /* \"#utility.yul\":13077:13245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13251:13624   */\n    tag_311:\n        /* \"#utility.yul\":13337:13340   */\n      0x00\n        /* \"#utility.yul\":13365:13403   */\n      tag_470\n        /* \"#utility.yul\":13397:13402   */\n      dup3\n        /* \"#utility.yul\":13365:13403   */\n      tag_309\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13419:13489   */\n      tag_471\n        /* \"#utility.yul\":13482:13488   */\n      dup2\n        /* \"#utility.yul\":13477:13480   */\n      dup6\n        /* \"#utility.yul\":13419:13489   */\n      tag_310\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13412:13489   */\n      swap4\n      pop\n        /* \"#utility.yul\":13498:13563   */\n      tag_472\n        /* \"#utility.yul\":13556:13562   */\n      dup2\n        /* \"#utility.yul\":13551:13554   */\n      dup6\n        /* \"#utility.yul\":13544:13548   */\n      0x20\n        /* \"#utility.yul\":13537:13542   */\n      dup7\n        /* \"#utility.yul\":13533:13549   */\n      add\n        /* \"#utility.yul\":13498:13563   */\n      tag_283\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13588:13617   */\n      tag_473\n        /* \"#utility.yul\":13610:13616   */\n      dup2\n        /* \"#utility.yul\":13588:13617   */\n      tag_284\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13583:13586   */\n      dup5\n        /* \"#utility.yul\":13579:13618   */\n      add\n        /* \"#utility.yul\":13572:13618   */\n      swap2\n      pop\n        /* \"#utility.yul\":13341:13624   */\n      pop\n        /* \"#utility.yul\":13251:13624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13630:14270   */\n    tag_233:\n        /* \"#utility.yul\":13825:13829   */\n      0x00\n        /* \"#utility.yul\":13863:13866   */\n      0x80\n        /* \"#utility.yul\":13852:13861   */\n      dup3\n        /* \"#utility.yul\":13848:13867   */\n      add\n        /* \"#utility.yul\":13840:13867   */\n      swap1\n      pop\n        /* \"#utility.yul\":13877:13948   */\n      tag_475\n        /* \"#utility.yul\":13945:13946   */\n      0x00\n        /* \"#utility.yul\":13934:13943   */\n      dup4\n        /* \"#utility.yul\":13930:13947   */\n      add\n        /* \"#utility.yul\":13921:13927   */\n      dup8\n        /* \"#utility.yul\":13877:13948   */\n      tag_291\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13958:14030   */\n      tag_476\n        /* \"#utility.yul\":14026:14028   */\n      0x20\n        /* \"#utility.yul\":14015:14024   */\n      dup4\n        /* \"#utility.yul\":14011:14029   */\n      add\n        /* \"#utility.yul\":14002:14008   */\n      dup7\n        /* \"#utility.yul\":13958:14030   */\n      tag_291\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":14040:14112   */\n      tag_477\n        /* \"#utility.yul\":14108:14110   */\n      0x40\n        /* \"#utility.yul\":14097:14106   */\n      dup4\n        /* \"#utility.yul\":14093:14111   */\n      add\n        /* \"#utility.yul\":14084:14090   */\n      dup6\n        /* \"#utility.yul\":14040:14112   */\n      tag_294\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14159:14168   */\n      dup2\n        /* \"#utility.yul\":14153:14157   */\n      dup2\n        /* \"#utility.yul\":14149:14169   */\n      sub\n        /* \"#utility.yul\":14144:14146   */\n      0x60\n        /* \"#utility.yul\":14133:14142   */\n      dup4\n        /* \"#utility.yul\":14129:14147   */\n      add\n        /* \"#utility.yul\":14122:14170   */\n      mstore\n        /* \"#utility.yul\":14187:14263   */\n      tag_478\n        /* \"#utility.yul\":14258:14262   */\n      dup2\n        /* \"#utility.yul\":14249:14255   */\n      dup5\n        /* \"#utility.yul\":14187:14263   */\n      tag_311\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14179:14263   */\n      swap1\n      pop\n        /* \"#utility.yul\":13630:14270   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14276:14417   */\n    tag_312:\n        /* \"#utility.yul\":14332:14337   */\n      0x00\n        /* \"#utility.yul\":14363:14369   */\n      dup2\n        /* \"#utility.yul\":14357:14370   */\n      mload\n        /* \"#utility.yul\":14348:14370   */\n      swap1\n      pop\n        /* \"#utility.yul\":14379:14411   */\n      tag_480\n        /* \"#utility.yul\":14405:14410   */\n      dup2\n        /* \"#utility.yul\":14379:14411   */\n      tag_277\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14276:14417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14423:14772   */\n    tag_236:\n        /* \"#utility.yul\":14492:14498   */\n      0x00\n        /* \"#utility.yul\":14541:14543   */\n      0x20\n        /* \"#utility.yul\":14529:14538   */\n      dup3\n        /* \"#utility.yul\":14520:14527   */\n      dup5\n        /* \"#utility.yul\":14516:14539   */\n      sub\n        /* \"#utility.yul\":14512:14544   */\n      slt\n        /* \"#utility.yul\":14509:14628   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":14547:14626   */\n      tag_483\n      tag_274\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14509:14628   */\n    tag_482:\n        /* \"#utility.yul\":14667:14668   */\n      0x00\n        /* \"#utility.yul\":14692:14755   */\n      tag_484\n        /* \"#utility.yul\":14747:14754   */\n      dup5\n        /* \"#utility.yul\":14738:14744   */\n      dup3\n        /* \"#utility.yul\":14727:14736   */\n      dup6\n        /* \"#utility.yul\":14723:14745   */\n      add\n        /* \"#utility.yul\":14692:14755   */\n      tag_312\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14682:14755   */\n      swap2\n      pop\n        /* \"#utility.yul\":14638:14765   */\n      pop\n        /* \"#utility.yul\":14423:14772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14778:15011   */\n    tag_252:\n        /* \"#utility.yul\":14817:14820   */\n      0x00\n        /* \"#utility.yul\":14840:14864   */\n      tag_486\n        /* \"#utility.yul\":14858:14863   */\n      dup3\n        /* \"#utility.yul\":14840:14864   */\n      tag_286\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14831:14864   */\n      swap2\n      pop\n        /* \"#utility.yul\":14886:14952   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14879:14884   */\n      dup3\n        /* \"#utility.yul\":14876:14953   */\n      sub\n        /* \"#utility.yul\":14873:14976   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":14956:14974   */\n      tag_488\n      tag_308\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14873:14976   */\n    tag_487:\n        /* \"#utility.yul\":15003:15004   */\n      0x01\n        /* \"#utility.yul\":14996:15001   */\n      dup3\n        /* \"#utility.yul\":14992:15005   */\n      add\n        /* \"#utility.yul\":14985:15005   */\n      swap1\n      pop\n        /* \"#utility.yul\":14778:15011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15017:15197   */\n    tag_313:\n        /* \"#utility.yul\":15065:15142   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15062:15063   */\n      0x00\n        /* \"#utility.yul\":15055:15143   */\n      mstore\n        /* \"#utility.yul\":15162:15166   */\n      0x12\n        /* \"#utility.yul\":15159:15160   */\n      0x04\n        /* \"#utility.yul\":15152:15167   */\n      mstore\n        /* \"#utility.yul\":15186:15190   */\n      0x24\n        /* \"#utility.yul\":15183:15184   */\n      0x00\n        /* \"#utility.yul\":15176:15191   */\n      revert\n        /* \"#utility.yul\":15203:15388   */\n    tag_254:\n        /* \"#utility.yul\":15243:15244   */\n      0x00\n        /* \"#utility.yul\":15260:15280   */\n      tag_491\n        /* \"#utility.yul\":15278:15279   */\n      dup3\n        /* \"#utility.yul\":15260:15280   */\n      tag_286\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":15255:15280   */\n      swap2\n      pop\n        /* \"#utility.yul\":15294:15314   */\n      tag_492\n        /* \"#utility.yul\":15312:15313   */\n      dup4\n        /* \"#utility.yul\":15294:15314   */\n      tag_286\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15289:15314   */\n      swap3\n      pop\n        /* \"#utility.yul\":15333:15334   */\n      dup3\n        /* \"#utility.yul\":15323:15358   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":15338:15356   */\n      tag_494\n      tag_313\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15323:15358   */\n    tag_493:\n        /* \"#utility.yul\":15380:15381   */\n      dup3\n        /* \"#utility.yul\":15377:15378   */\n      dup3\n        /* \"#utility.yul\":15373:15382   */\n      div\n        /* \"#utility.yul\":15368:15382   */\n      swap1\n      pop\n        /* \"#utility.yul\":15203:15388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15394:15570   */\n    tag_263:\n        /* \"#utility.yul\":15426:15427   */\n      0x00\n        /* \"#utility.yul\":15443:15463   */\n      tag_496\n        /* \"#utility.yul\":15461:15462   */\n      dup3\n        /* \"#utility.yul\":15443:15463   */\n      tag_286\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15438:15463   */\n      swap2\n      pop\n        /* \"#utility.yul\":15477:15497   */\n      tag_497\n        /* \"#utility.yul\":15495:15496   */\n      dup4\n        /* \"#utility.yul\":15477:15497   */\n      tag_286\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15472:15497   */\n      swap3\n      pop\n        /* \"#utility.yul\":15516:15517   */\n      dup3\n        /* \"#utility.yul\":15506:15541   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":15521:15539   */\n      tag_499\n      tag_313\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":15506:15541   */\n    tag_498:\n        /* \"#utility.yul\":15562:15563   */\n      dup3\n        /* \"#utility.yul\":15559:15560   */\n      dup3\n        /* \"#utility.yul\":15555:15564   */\n      mod\n        /* \"#utility.yul\":15550:15564   */\n      swap1\n      pop\n        /* \"#utility.yul\":15394:15570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15576:15756   */\n    tag_267:\n        /* \"#utility.yul\":15624:15701   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15621:15622   */\n      0x00\n        /* \"#utility.yul\":15614:15702   */\n      mstore\n        /* \"#utility.yul\":15721:15725   */\n      0x32\n        /* \"#utility.yul\":15718:15719   */\n      0x04\n        /* \"#utility.yul\":15711:15726   */\n      mstore\n        /* \"#utility.yul\":15745:15749   */\n      0x24\n        /* \"#utility.yul\":15742:15743   */\n      0x00\n        /* \"#utility.yul\":15735:15750   */\n      revert\n    stop\n    data_626642f6930f156f677ccaa99d1115840f2527d6f062eede1de4dda1bd081a2d 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d65794b6e7658584d78417557473570743335457a3851684a6852363352445653775566736a4b61795234325a2f\n\n    auxdata: 0xa2646970667358221220b67ded29e1426d276017ac843f3d83754edc36ae796ac518b60f2b526aa23bbf64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1230": {
									"entryPoint": null,
									"id": 1230,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_startTokenId_1310": {
									"entryPoint": 145,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_memory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9321:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2732:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2743:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2704:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2714:7:12",
														"type": ""
													}
												],
												"src": "2677:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:43:12"
															},
															"nodeType": "YulIf",
															"src": "2813:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2796:5:12",
														"type": ""
													}
												],
												"src": "2760:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:12",
														"type": ""
													}
												],
												"src": "2888:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3202:1158:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3249:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3251:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3251:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3244:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3215:33:12"
															},
															"nodeType": "YulIf",
															"src": "3212:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3342:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3357:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3381:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3392:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3377:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3377:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3371:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3371:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3361:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3442:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3444:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3444:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3444:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3414:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3422:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3411:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3411:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3408:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3539:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3595:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3606:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3591:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3591:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3615:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3549:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3539:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3643:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3658:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3682:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3693:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3678:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3672:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3672:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3662:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3744:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3746:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3746:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3746:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3716:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3724:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3713:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3713:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3710:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3841:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3897:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3908:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3893:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3893:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3917:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3851:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3851:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3841:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3945:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4036:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4047:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4032:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4032:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4056:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4000:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3990:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4084:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4099:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4113:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4103:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4175:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4186:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4171:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4171:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4195:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4139:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4223:130:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4238:17:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4252:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4242:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4269:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4315:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4326:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4311:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4335:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4279:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4269:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3140:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3151:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3163:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3171:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3179:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3187:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3195:6:12",
														"type": ""
													}
												],
												"src": "3037:1323:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4425:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4436:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4452:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4446:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4408:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4418:6:12",
														"type": ""
													}
												],
												"src": "4366:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4499:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4519:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4509:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4616:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4606:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4630:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4471:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4732:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4738:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4749:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4779:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4753:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4840:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4854:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4862:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4850:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4850:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4840:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4806:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:26:12"
															},
															"nodeType": "YulIf",
															"src": "4796:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4929:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4943:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4943:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4943:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4893:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4916:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4924:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4913:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4913:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4890:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:38:12"
															},
															"nodeType": "YulIf",
															"src": "4887:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4692:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4701:6:12",
														"type": ""
													}
												],
												"src": "4657:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5037:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5047:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5055:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5047:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5078:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5091:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5112:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "5099:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5091:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5024:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5032:4:12",
														"type": ""
													}
												],
												"src": "4983:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5174:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5184:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5202:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5209:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5198:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5214:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5184:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5157:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5167:6:12",
														"type": ""
													}
												],
												"src": "5130:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5282:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5292:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5317:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5323:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5292:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "5257:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5263:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5273:8:12",
														"type": ""
													}
												],
												"src": "5229:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5418:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5428:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5449:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5461:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5445:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5432:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5472:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5514:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5484:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5484:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5476:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5590:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5621:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5632:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5602:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5590:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5650:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5663:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5674:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5670:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5670:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5659:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5659:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5650:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5689:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5702:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5713:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5723:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5709:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5709:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5699:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5379:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5386:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5398:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5411:6:12",
														"type": ""
													}
												],
												"src": "5342:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5783:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5790:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5783:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5759:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5769:3:12",
														"type": ""
													}
												],
												"src": "5741:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5877:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5935:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5917:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5917:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5908:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5908:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5890:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5890:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5877:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5847:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5857:9:12",
														"type": ""
													}
												],
												"src": "5807:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6002:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6012:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6019:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6012:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5988:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5998:3:12",
														"type": ""
													}
												],
												"src": "5955:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6112:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6122:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "6177:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6146:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6146:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "6126:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6201:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "6241:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "6235:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6235:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6248:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "6280:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6256:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "6207:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6207:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "6194:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6089:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6095:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "6103:7:12",
														"type": ""
													}
												],
												"src": "6036:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6360:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6370:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6377:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6370:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6356:3:12",
														"type": ""
													}
												],
												"src": "6311:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6443:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6453:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6467:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6467:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6457:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6558:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6566:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6508:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6508:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6429:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6435:6:12",
														"type": ""
													}
												],
												"src": "6390:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6635:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6702:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6746:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6753:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6716:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6716:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6716:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6655:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6662:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6652:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6652:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6667:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6669:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6682:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6689:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6678:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6678:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6669:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6649:2:12",
																"statements": []
															},
															"src": "6645:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6623:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6630:3:12",
														"type": ""
													}
												],
												"src": "6585:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6856:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6882:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6896:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6944:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6912:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6912:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6900:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6963:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6986:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "7014:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6996:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6996:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6982:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6982:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6967:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7183:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7185:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "7200:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "7185:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "7167:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7179:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7164:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7164:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "7161:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "7252:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "7269:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7297:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "7279:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7279:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7265:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7265:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "7223:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7223:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7223:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6878:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6870:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6870:11:12"
															},
															"nodeType": "YulIf",
															"src": "6867:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6832:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6839:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6844:10:12",
														"type": ""
													}
												],
												"src": "6777:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7389:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7399:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7424:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7430:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7420:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7420:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7399:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7364:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7370:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7380:8:12",
														"type": ""
													}
												],
												"src": "7326:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7500:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7510:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7559:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7562:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7555:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7555:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7574:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7570:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7570:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7526:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7526:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7522:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7514:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7601:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7607:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7597:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7587:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7477:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7483:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7493:6:12",
														"type": ""
													}
												],
												"src": "7449:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7704:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7837:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7864:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7870:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7845:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7845:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7837:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7883:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7894:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7904:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7907:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7900:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7891:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7883:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7685:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7691:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7699:4:12",
														"type": ""
													}
												],
												"src": "7623:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8015:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8026:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8073:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8040:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8040:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "8030:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8162:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8164:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8164:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8134:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8131:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:30:12"
															},
															"nodeType": "YulIf",
															"src": "8128:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8194:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "8240:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8234:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8234:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "8208:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8208:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "8198:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8339:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8345:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8353:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "8293:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8293:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8293:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8370:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8387:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8374:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8398:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8411:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8398:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8462:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8476:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8495:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8507:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8503:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8503:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8491:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8491:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8480:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8527:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8573:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8541:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8541:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8531:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8591:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8600:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8595:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8659:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8684:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8702:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8707:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8698:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8698:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8692:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8692:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8677:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8677:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8677:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8736:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8750:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8758:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8746:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8746:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8736:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8777:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8794:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8805:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8790:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8790:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8777:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8625:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8628:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8622:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8622:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8637:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8639:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8648:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8651:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8644:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8644:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8639:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8618:3:12",
																					"statements": []
																				},
																				"src": "8614:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8858:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8876:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8903:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8908:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8899:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8899:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8893:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8893:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8880:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8943:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8970:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8985:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8993:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8981:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8981:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8951:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8951:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8936:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8936:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8936:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8841:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8850:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8838:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8838:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8835:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "9034:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "9048:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9056:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "9044:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9044:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9060:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9040:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9040:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9027:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9027:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8455:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8460:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9090:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9104:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9117:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "9108:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9141:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9159:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "9178:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "9183:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9174:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9174:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "9168:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9168:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "9159:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "9134:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "9131:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "9228:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "9287:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "9294:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "9234:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9234:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "9221:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9221:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9221:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9082:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8435:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8443:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8432:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "8425:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "8004:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8010:3:12",
														"type": ""
													}
												],
												"src": "7923:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620029cc380380620029cc833981810160405281019062000037919062000264565b84600590816200004891906200056b565b5083600690816200005a91906200056b565b5082600381905550620000726200009160201b60201c565b6002819055508160008190555080600181905550505050505062000652565b600090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000ff82620000b4565b810181811067ffffffffffffffff82111715620001215762000120620000c5565b5b80604052505050565b60006200013662000096565b9050620001448282620000f4565b919050565b600067ffffffffffffffff821115620001675762000166620000c5565b5b6200017282620000b4565b9050602081019050919050565b60005b838110156200019f57808201518184015260208101905062000182565b60008484015250505050565b6000620001c2620001bc8462000149565b6200012a565b905082815260208101848484011115620001e157620001e0620000af565b5b620001ee8482856200017f565b509392505050565b600082601f8301126200020e576200020d620000aa565b5b815162000220848260208601620001ab565b91505092915050565b6000819050919050565b6200023e8162000229565b81146200024a57600080fd5b50565b6000815190506200025e8162000233565b92915050565b600080600080600060a08688031215620002835762000282620000a0565b5b600086015167ffffffffffffffff811115620002a457620002a3620000a5565b5b620002b288828901620001f6565b955050602086015167ffffffffffffffff811115620002d657620002d5620000a5565b5b620002e488828901620001f6565b9450506040620002f7888289016200024d565b93505060606200030a888289016200024d565b92505060806200031d888289016200024d565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037d57607f821691505b60208210810362000393576200039262000335565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003fd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003be565b620004098683620003be565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200044c62000446620004408462000229565b62000421565b62000229565b9050919050565b6000819050919050565b62000468836200042b565b62000480620004778262000453565b848454620003cb565b825550505050565b600090565b6200049762000488565b620004a48184846200045d565b505050565b5b81811015620004cc57620004c06000826200048d565b600181019050620004aa565b5050565b601f8211156200051b57620004e58162000399565b620004f084620003ae565b8101602085101562000500578190505b620005186200050f85620003ae565b830182620004a9565b50505b505050565b600082821c905092915050565b6000620005406000198460080262000520565b1980831691505092915050565b60006200055b83836200052d565b9150826002028217905092915050565b62000576826200032a565b67ffffffffffffffff811115620005925762000591620000c5565b5b6200059e825462000364565b620005ab828285620004d0565b600060209050601f831160018114620005e35760008415620005ce578287015190505b620005da85826200054d565b8655506200064a565b601f198416620005f38662000399565b60005b828110156200061d57848901518255600182019150602085019450602081019050620005f6565b868310156200063d578489015162000639601f8916826200052d565b8355505b6001600288020188555050505b505050505050565b61236a80620006626000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb465146102f5578063b88d4fde14610311578063c87b56dd1461032d578063d5abeb011461035d578063e985e9c51461037b57610116565b80636352211e1461025957806370a082311461028957806395d89b41146102b95780639f773399146102d757610116565b806318160ddd116100e957806318160ddd146101b557806323b872dd146101d3578063325b272a146101ef57806338020dcc1461021f57806342842e0e1461023d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611a11565b6103ab565b6040516101429190611a59565b60405180910390f35b61015361048d565b6040516101609190611b04565b60405180910390f35b610183600480360381019061017e9190611b5c565b61051f565b6040516101909190611bca565b60405180910390f35b6101b360048036038101906101ae9190611c11565b61059b565b005b6101bd61069f565b6040516101ca9190611c60565b60405180910390f35b6101ed60048036038101906101e89190611c7b565b6106b6565b005b61020960048036038101906102049190611cce565b6106c6565b6040516102169190611c60565b60405180910390f35b6102276107c1565b6040516102349190611c60565b60405180910390f35b61025760048036038101906102529190611c7b565b6107c7565b005b610273600480360381019061026e9190611b5c565b6107e7565b6040516102809190611bca565b60405180910390f35b6102a3600480360381019061029e9190611cce565b6107fd565b6040516102b09190611c60565b60405180910390f35b6102c16108cc565b6040516102ce9190611b04565b60405180910390f35b6102df61095e565b6040516102ec9190611c60565b60405180910390f35b61030f600480360381019061030a9190611d27565b610964565b005b61032b60048036038101906103269190611e9c565b610adb565b005b61034760048036038101906103429190611b5c565b610b53565b6040516103549190611b04565b60405180910390f35b610365610bf1565b6040516103729190611c60565b60405180910390f35b61039560048036038101906103909190611f1f565b610c08565b6040516103a29190611a59565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610486575061048582610c9c565b5b9050919050565b60606005805461049c90611f8e565b80601f01602080910402602001604051908101604052809291908181526020018280546104c890611f8e565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b5050505050905090565b600061052a82610d06565b610560576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a6826107e7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361060d576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661062c610d54565b73ffffffffffffffffffffffffffffffffffffffff161461068f5761065881610653610d54565b610c08565b61068e576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61069a838383610d5c565b505050565b60006106a9610e0e565b6004546002540303905090565b6106c1838383610e13565b505050565b60008061072d600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001815260200190815260200160002054436112d990919063ffffffff16565b9050600061074c8261073e866107fd565b6112ef90919063ffffffff16565b905060006107b482600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461130590919063ffffffff16565b9050809350505050919050565b60015481565b6107e283838360405180602001604052806000815250610adb565b505050565b60006107f28261131b565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610864576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b6060600680546108db90611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461090790611f8e565b80156109545780601f1061092957610100808354040283529160200191610954565b820191906000526020600020905b81548152906001019060200180831161093757829003601f168201915b5050505050905090565b60005481565b61096c610d54565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109d0576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a60006109dd610d54565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a8a610d54565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610acf9190611a59565b60405180910390a35050565b610ae6848484610e13565b610b058373ffffffffffffffffffffffffffffffffffffffff166115a6565b15610b4d57610b16848484846115c9565b610b4c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610b5e82610d06565b610b94576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b9e611719565b90506000815103610bbe5760405180602001604052806000815250610be9565b80610bc884611739565b604051602001610bd9929190611ffb565b6040516020818303038152906040525b915050919050565b6000610bfb610e0e565b6004546003540303905090565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610d11610e0e565b11158015610d20575060025482105b8015610d4d575060076000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b610e1c83611899565b610e2582611899565b6000610e308261131b565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610ebc610d54565b73ffffffffffffffffffffffffffffffffffffffff161480610eeb5750610eea85610ee5610d54565b610c08565b5b80610f305750610ef9610d54565b73ffffffffffffffffffffffffffffffffffffffff16610f188461051f565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610f69576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fcf576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fdc8585856001611956565b610fe860008487610d5c565b6001600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600760008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600760008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361126757600254821461126657878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112d2858585600161195c565b5050505050565b600081836112e7919061204e565b905092915050565b600081836112fd9190612082565b905092915050565b6000818361131391906120c4565b905092915050565b611323611962565b600082905080611331610e0e565b1161156f5760025481101561156e576000600760008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161156c57600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146114505780925050506115a1565b5b60011561156b57818060019003925050600760008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146115665780925050506115a1565b611451565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026115ef610d54565b8786866040518563ffffffff1660e01b8152600401611611949392919061214d565b6020604051808303816000875af192505050801561164d57506040513d601f19601f8201168201806040525081019061164a91906121ae565b60015b6116c6573d806000811461167d576040519150601f19603f3d011682016040523d82523d6000602084013e611682565b606091505b5060008151036116be576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606040518060800160405280605181526020016122e460519139905090565b606060008203611780576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611894565b600082905060005b600082146117b257808061179b906121db565b915050600a826117ab9190612252565b9150611788565b60008167ffffffffffffffff8111156117ce576117cd611d71565b5b6040519080825280601f01601f1916602001820160405280156118005781602001600182028036833780820191505090505b5090505b6000851461188d57600182611819919061204e565b9150600a856118289190612283565b603061183491906120c4565b60f81b81838151811061184a576118496122b4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856118869190612252565b9450611804565b8093505050505b919050565b60006118a4826106c6565b905080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055505050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119ee816119b9565b81146119f957600080fd5b50565b600081359050611a0b816119e5565b92915050565b600060208284031215611a2757611a266119af565b5b6000611a35848285016119fc565b91505092915050565b60008115159050919050565b611a5381611a3e565b82525050565b6000602082019050611a6e6000830184611a4a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aae578082015181840152602081019050611a93565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad682611a74565b611ae08185611a7f565b9350611af0818560208601611a90565b611af981611aba565b840191505092915050565b60006020820190508181036000830152611b1e8184611acb565b905092915050565b6000819050919050565b611b3981611b26565b8114611b4457600080fd5b50565b600081359050611b5681611b30565b92915050565b600060208284031215611b7257611b716119af565b5b6000611b8084828501611b47565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bb482611b89565b9050919050565b611bc481611ba9565b82525050565b6000602082019050611bdf6000830184611bbb565b92915050565b611bee81611ba9565b8114611bf957600080fd5b50565b600081359050611c0b81611be5565b92915050565b60008060408385031215611c2857611c276119af565b5b6000611c3685828601611bfc565b9250506020611c4785828601611b47565b9150509250929050565b611c5a81611b26565b82525050565b6000602082019050611c756000830184611c51565b92915050565b600080600060608486031215611c9457611c936119af565b5b6000611ca286828701611bfc565b9350506020611cb386828701611bfc565b9250506040611cc486828701611b47565b9150509250925092565b600060208284031215611ce457611ce36119af565b5b6000611cf284828501611bfc565b91505092915050565b611d0481611a3e565b8114611d0f57600080fd5b50565b600081359050611d2181611cfb565b92915050565b60008060408385031215611d3e57611d3d6119af565b5b6000611d4c85828601611bfc565b9250506020611d5d85828601611d12565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da982611aba565b810181811067ffffffffffffffff82111715611dc857611dc7611d71565b5b80604052505050565b6000611ddb6119a5565b9050611de78282611da0565b919050565b600067ffffffffffffffff821115611e0757611e06611d71565b5b611e1082611aba565b9050602081019050919050565b82818337600083830152505050565b6000611e3f611e3a84611dec565b611dd1565b905082815260208101848484011115611e5b57611e5a611d6c565b5b611e66848285611e1d565b509392505050565b600082601f830112611e8357611e82611d67565b5b8135611e93848260208601611e2c565b91505092915050565b60008060008060808587031215611eb657611eb56119af565b5b6000611ec487828801611bfc565b9450506020611ed587828801611bfc565b9350506040611ee687828801611b47565b925050606085013567ffffffffffffffff811115611f0757611f066119b4565b5b611f1387828801611e6e565b91505092959194509250565b60008060408385031215611f3657611f356119af565b5b6000611f4485828601611bfc565b9250506020611f5585828601611bfc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fa657607f821691505b602082108103611fb957611fb8611f5f565b5b50919050565b600081905092915050565b6000611fd582611a74565b611fdf8185611fbf565b9350611fef818560208601611a90565b80840191505092915050565b60006120078285611fca565b91506120138284611fca565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061205982611b26565b915061206483611b26565b925082820390508181111561207c5761207b61201f565b5b92915050565b600061208d82611b26565b915061209883611b26565b92508282026120a681611b26565b915082820484148315176120bd576120bc61201f565b5b5092915050565b60006120cf82611b26565b91506120da83611b26565b92508282019050808211156120f2576120f161201f565b5b92915050565b600081519050919050565b600082825260208201905092915050565b600061211f826120f8565b6121298185612103565b9350612139818560208601611a90565b61214281611aba565b840191505092915050565b60006080820190506121626000830187611bbb565b61216f6020830186611bbb565b61217c6040830185611c51565b818103606083015261218e8184612114565b905095945050505050565b6000815190506121a8816119e5565b92915050565b6000602082840312156121c4576121c36119af565b5b60006121d284828501612199565b91505092915050565b60006121e682611b26565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122185761221761201f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061225d82611b26565b915061226883611b26565b92508261227857612277612223565b5b828204905092915050565b600061228e82611b26565b915061229983611b26565b9250826122a9576122a8612223565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d65794b6e7658584d78417557473570743335457a3851684a6852363352445653775566736a4b61795234325a2fa2646970667358221220b67ded29e1426d276017ac843f3d83754edc36ae796ac518b60f2b526aa23bbf64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29CC CODESIZE SUB DUP1 PUSH3 0x29CC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x264 JUMP JUMPDEST DUP5 PUSH1 0x5 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x56B JUMP JUMPDEST POP DUP4 PUSH1 0x6 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x56B JUMP JUMPDEST POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0x72 PUSH3 0x91 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x652 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xFF DUP3 PUSH3 0xB4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x121 JUMPI PUSH3 0x120 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x136 PUSH3 0x96 JUMP JUMPDEST SWAP1 POP PUSH3 0x144 DUP3 DUP3 PUSH3 0xF4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH3 0x166 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST PUSH3 0x172 DUP3 PUSH3 0xB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x19F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x182 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C2 PUSH3 0x1BC DUP5 PUSH3 0x149 JUMP JUMPDEST PUSH3 0x12A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1E1 JUMPI PUSH3 0x1E0 PUSH3 0xAF JUMP JUMPDEST JUMPDEST PUSH3 0x1EE DUP5 DUP3 DUP6 PUSH3 0x17F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x20E JUMPI PUSH3 0x20D PUSH3 0xAA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x220 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x229 JUMP JUMPDEST DUP2 EQ PUSH3 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25E DUP2 PUSH3 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0xA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2A4 JUMPI PUSH3 0x2A3 PUSH3 0xA5 JUMP JUMPDEST JUMPDEST PUSH3 0x2B2 DUP9 DUP3 DUP10 ADD PUSH3 0x1F6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2D6 JUMPI PUSH3 0x2D5 PUSH3 0xA5 JUMP JUMPDEST JUMPDEST PUSH3 0x2E4 DUP9 DUP3 DUP10 ADD PUSH3 0x1F6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x2F7 DUP9 DUP3 DUP10 ADD PUSH3 0x24D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x30A DUP9 DUP3 DUP10 ADD PUSH3 0x24D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x31D DUP9 DUP3 DUP10 ADD PUSH3 0x24D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x37D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x335 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3FD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3BE JUMP JUMPDEST PUSH3 0x409 DUP7 DUP4 PUSH3 0x3BE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44C PUSH3 0x446 PUSH3 0x440 DUP5 PUSH3 0x229 JUMP JUMPDEST PUSH3 0x421 JUMP JUMPDEST PUSH3 0x229 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x468 DUP4 PUSH3 0x42B JUMP JUMPDEST PUSH3 0x480 PUSH3 0x477 DUP3 PUSH3 0x453 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3CB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x497 PUSH3 0x488 JUMP JUMPDEST PUSH3 0x4A4 DUP2 DUP5 DUP5 PUSH3 0x45D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4CC JUMPI PUSH3 0x4C0 PUSH1 0x0 DUP3 PUSH3 0x48D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4AA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x51B JUMPI PUSH3 0x4E5 DUP2 PUSH3 0x399 JUMP JUMPDEST PUSH3 0x4F0 DUP5 PUSH3 0x3AE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x500 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x518 PUSH3 0x50F DUP6 PUSH3 0x3AE JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4A9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x540 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x520 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55B DUP4 DUP4 PUSH3 0x52D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x576 DUP3 PUSH3 0x32A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x592 JUMPI PUSH3 0x591 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST PUSH3 0x59E DUP3 SLOAD PUSH3 0x364 JUMP JUMPDEST PUSH3 0x5AB DUP3 DUP3 DUP6 PUSH3 0x4D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5E3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5CE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5DA DUP6 DUP3 PUSH3 0x54D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x64A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5F3 DUP7 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x61D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5F6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x63D JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x639 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x52D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x236A DUP1 PUSH3 0x662 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x37B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x9F773399 EQ PUSH2 0x2D7 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x325B272A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x38020DCC EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x23D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x476 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x486 JUMPI POP PUSH2 0x485 DUP3 PUSH2 0xC9C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x49C SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C8 SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x515 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x515 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A6 DUP3 PUSH2 0x7E7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x62C PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x68F JUMPI PUSH2 0x658 DUP2 PUSH2 0x653 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x69A DUP4 DUP4 DUP4 PUSH2 0xD5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C1 DUP4 DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72D PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x12D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x74C DUP3 PUSH2 0x73E DUP7 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x12EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B4 DUP3 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1305 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xADB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 DUP3 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x8DB SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x907 SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x954 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x929 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x954 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x937 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x96C PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x9DD PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8A PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xAE6 DUP5 DUP5 DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xB05 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 JUMP JUMPDEST ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB16 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB5E DUP3 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB9E PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBE9 JUMP JUMPDEST DUP1 PUSH2 0xBC8 DUP5 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD9 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFB PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD11 PUSH2 0xE0E JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xD20 JUMPI POP PUSH1 0x2 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xD4D JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xE1C DUP4 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE25 DUP3 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE30 DUP3 PUSH2 0x131B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEBC PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEEB JUMPI POP PUSH2 0xEEA DUP6 PUSH2 0xEE5 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xF30 JUMPI POP PUSH2 0xEF9 PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF18 DUP5 PUSH2 0x51F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDC DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0xFE8 PUSH1 0x0 DUP5 DUP8 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH1 0x2 SLOAD DUP3 EQ PUSH2 0x1266 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x12D2 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x195C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12FD SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1313 SWAP2 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1323 PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1331 PUSH2 0xE0E JUMP JUMPDEST GT PUSH2 0x156F JUMPI PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x156E JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x156C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1450 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x156B JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1566 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x15EF PUSH2 0xD54 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1611 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x164D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16C6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x16BE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E4 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1780 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x17B2 JUMPI DUP1 DUP1 PUSH2 0x179B SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST SWAP2 POP PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1800 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x188D JUMPI PUSH1 0x1 DUP3 PUSH2 0x1819 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1834 SWAP2 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x22B4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1886 SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST SWAP5 POP PUSH2 0x1804 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A4 DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EE DUP2 PUSH2 0x19B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A0B DUP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP5 DUP3 DUP6 ADD PUSH2 0x19FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x1A3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AAE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD6 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1AE0 DUP2 DUP6 PUSH2 0x1A7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1AF9 DUP2 PUSH2 0x1ABA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B1E DUP2 DUP5 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B56 DUP2 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP5 DUP3 DUP6 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 DUP3 PUSH2 0x1B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC4 DUP2 PUSH2 0x1BA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BA9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C0B DUP2 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C36 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C47 DUP6 DUP3 DUP7 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5A DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C94 JUMPI PUSH2 0x1C93 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D04 DUP2 PUSH2 0x1A3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D21 DUP2 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D3E JUMPI PUSH2 0x1D3D PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4C DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D5D DUP6 DUP3 DUP7 ADD PUSH2 0x1D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1DA9 DUP3 PUSH2 0x1ABA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDB PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE7 DUP3 DUP3 PUSH2 0x1DA0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST PUSH2 0x1E10 DUP3 PUSH2 0x1ABA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3F PUSH2 0x1E3A DUP5 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E5B JUMPI PUSH2 0x1E5A PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH2 0x1E66 DUP5 DUP3 DUP6 PUSH2 0x1E1D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E83 JUMPI PUSH2 0x1E82 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E93 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB6 JUMPI PUSH2 0x1EB5 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED5 DUP8 DUP3 DUP9 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE6 DUP8 DUP3 DUP9 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F07 JUMPI PUSH2 0x1F06 PUSH2 0x19B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1F13 DUP8 DUP3 DUP9 ADD PUSH2 0x1E6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F36 JUMPI PUSH2 0x1F35 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F44 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F55 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1FDF DUP2 DUP6 PUSH2 0x1FBF JUMP JUMPDEST SWAP4 POP PUSH2 0x1FEF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2007 DUP3 DUP6 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 POP PUSH2 0x2013 DUP3 DUP5 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x207C JUMPI PUSH2 0x207B PUSH2 0x201F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208D DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2098 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20A6 DUP2 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20BD JUMPI PUSH2 0x20BC PUSH2 0x201F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CF DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x20DA DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x20F1 PUSH2 0x201F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP3 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x2129 DUP2 DUP6 PUSH2 0x2103 JUMP JUMPDEST SWAP4 POP PUSH2 0x2139 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x2142 DUP2 PUSH2 0x1ABA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x216F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x217C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x218E DUP2 DUP5 PUSH2 0x2114 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21A8 DUP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C4 JUMPI PUSH2 0x21C3 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D2 DUP5 DUP3 DUP6 ADD PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E6 DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x201F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x225D DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2268 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2278 JUMPI PUSH2 0x2277 PUSH2 0x2223 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2299 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22A9 JUMPI PUSH2 0x22A8 PUSH2 0x2223 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D65794B6E7658584D784175574735707433 CALLDATALOAD GASLIMIT PUSH27 0x3851684A6852363352445653775566736A4B61795234325A2FA264 PUSH10 0x70667358221220B67DED 0x29 0xE1 TIMESTAMP PUSH14 0x276017AC843F3D83754EDC36AE79 PUSH11 0xC518B60F2B526AA23BBF64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "1024:20992:10:-:0;;;2300:322;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2432:5;2424;:13;;;;;;:::i;:::-;;2458:7;2448;:17;;;;;;:::i;:::-;;2489:10;2476;:23;;;;2526:15;:13;;;:15;;:::i;:::-;2510:13;:31;;;;2561:5;2553;:13;;;;2595:12;2580;:27;;;;2300:322;;;;;1024:20992;;3267:92;3323:7;3267:92;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1323::-;3163:6;3171;3179;3187;3195;3244:3;3232:9;3223:7;3219:23;3215:33;3212:120;;;3251:79;;:::i;:::-;3212:120;3392:1;3381:9;3377:17;3371:24;3422:18;3414:6;3411:30;3408:117;;;3444:79;;:::i;:::-;3408:117;3549:74;3615:7;3606:6;3595:9;3591:22;3549:74;:::i;:::-;3539:84;;3342:291;3693:2;3682:9;3678:18;3672:25;3724:18;3716:6;3713:30;3710:117;;;3746:79;;:::i;:::-;3710:117;3851:74;3917:7;3908:6;3897:9;3893:22;3851:74;:::i;:::-;3841:84;;3643:292;3974:2;4000:64;4056:7;4047:6;4036:9;4032:22;4000:64;:::i;:::-;3990:74;;3945:129;4113:2;4139:64;4195:7;4186:6;4175:9;4171:22;4139:64;:::i;:::-;4129:74;;4084:129;4252:3;4279:64;4335:7;4326:6;4315:9;4311:22;4279:64;:::i;:::-;4269:74;;4223:130;3037:1323;;;;;;;;:::o;4366:99::-;4418:6;4452:5;4446:12;4436:22;;4366:99;;;:::o;4471:180::-;4519:77;4516:1;4509:88;4616:4;4613:1;4606:15;4640:4;4637:1;4630:15;4657:320;4701:6;4738:1;4732:4;4728:12;4718:22;;4785:1;4779:4;4775:12;4806:18;4796:81;;4862:4;4854:6;4850:17;4840:27;;4796:81;4924:2;4916:6;4913:14;4893:18;4890:38;4887:84;;4943:18;;:::i;:::-;4887:84;4708:269;4657:320;;;:::o;4983:141::-;5032:4;5055:3;5047:11;;5078:3;5075:1;5068:14;5112:4;5109:1;5099:18;5091:26;;4983:141;;;:::o;5130:93::-;5167:6;5214:2;5209;5202:5;5198:14;5194:23;5184:33;;5130:93;;;:::o;5229:107::-;5273:8;5323:5;5317:4;5313:16;5292:37;;5229:107;;;;:::o;5342:393::-;5411:6;5461:1;5449:10;5445:18;5484:97;5514:66;5503:9;5484:97;:::i;:::-;5602:39;5632:8;5621:9;5602:39;:::i;:::-;5590:51;;5674:4;5670:9;5663:5;5659:21;5650:30;;5723:4;5713:8;5709:19;5702:5;5699:30;5689:40;;5418:317;;5342:393;;;;;:::o;5741:60::-;5769:3;5790:5;5783:12;;5741:60;;;:::o;5807:142::-;5857:9;5890:53;5908:34;5917:24;5935:5;5917:24;:::i;:::-;5908:34;:::i;:::-;5890:53;:::i;:::-;5877:66;;5807:142;;;:::o;5955:75::-;5998:3;6019:5;6012:12;;5955:75;;;:::o;6036:269::-;6146:39;6177:7;6146:39;:::i;:::-;6207:91;6256:41;6280:16;6256:41;:::i;:::-;6248:6;6241:4;6235:11;6207:91;:::i;:::-;6201:4;6194:105;6112:193;6036:269;;;:::o;6311:73::-;6356:3;6311:73;:::o;6390:189::-;6467:32;;:::i;:::-;6508:65;6566:6;6558;6552:4;6508:65;:::i;:::-;6443:136;6390:189;;:::o;6585:186::-;6645:120;6662:3;6655:5;6652:14;6645:120;;;6716:39;6753:1;6746:5;6716:39;:::i;:::-;6689:1;6682:5;6678:13;6669:22;;6645:120;;;6585:186;;:::o;6777:543::-;6878:2;6873:3;6870:11;6867:446;;;6912:38;6944:5;6912:38;:::i;:::-;6996:29;7014:10;6996:29;:::i;:::-;6986:8;6982:44;7179:2;7167:10;7164:18;7161:49;;;7200:8;7185:23;;7161:49;7223:80;7279:22;7297:3;7279:22;:::i;:::-;7269:8;7265:37;7252:11;7223:80;:::i;:::-;6882:431;;6867:446;6777:543;;;:::o;7326:117::-;7380:8;7430:5;7424:4;7420:16;7399:37;;7326:117;;;;:::o;7449:169::-;7493:6;7526:51;7574:1;7570:6;7562:5;7559:1;7555:13;7526:51;:::i;:::-;7522:56;7607:4;7601;7597:15;7587:25;;7500:118;7449:169;;;;:::o;7623:295::-;7699:4;7845:29;7870:3;7864:4;7845:29;:::i;:::-;7837:37;;7907:3;7904:1;7900:11;7894:4;7891:21;7883:29;;7623:295;;;;:::o;7923:1395::-;8040:37;8073:3;8040:37;:::i;:::-;8142:18;8134:6;8131:30;8128:56;;;8164:18;;:::i;:::-;8128:56;8208:38;8240:4;8234:11;8208:38;:::i;:::-;8293:67;8353:6;8345;8339:4;8293:67;:::i;:::-;8387:1;8411:4;8398:17;;8443:2;8435:6;8432:14;8460:1;8455:618;;;;9117:1;9134:6;9131:77;;;9183:9;9178:3;9174:19;9168:26;9159:35;;9131:77;9234:67;9294:6;9287:5;9234:67;:::i;:::-;9228:4;9221:81;9090:222;8425:887;;8455:618;8507:4;8503:9;8495:6;8491:22;8541:37;8573:4;8541:37;:::i;:::-;8600:1;8614:208;8628:7;8625:1;8622:14;8614:208;;;8707:9;8702:3;8698:19;8692:26;8684:6;8677:42;8758:1;8750:6;8746:14;8736:24;;8805:2;8794:9;8790:18;8777:31;;8651:4;8648:1;8644:12;8639:17;;8614:208;;;8850:6;8841:7;8838:19;8835:179;;;8908:9;8903:3;8899:19;8893:26;8951:48;8993:4;8985:6;8981:17;8970:9;8951:48;:::i;:::-;8943:6;8936:64;8858:156;8835:179;9060:1;9056;9048:6;9044:14;9040:22;9034:4;9027:36;8462:611;;;8425:887;;8015:1303;;;7923:1395;;:::o;1024:20992:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BlockScore_1272": {
									"entryPoint": 1734,
									"id": 1272,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_DCFperBlock_1154": {
									"entryPoint": 1985,
									"id": 1154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_2518": {
									"entryPoint": 6492,
									"id": 2518,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2437": {
									"entryPoint": 3420,
									"id": 2437,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1638": {
									"entryPoint": 5913,
									"id": 1638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2505": {
									"entryPoint": 6486,
									"id": 2505,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2492": {
									"entryPoint": 5577,
									"id": 2492,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1855": {
									"entryPoint": 3334,
									"id": 1855,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_467": {
									"entryPoint": 3412,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_1551": {
									"entryPoint": 4891,
									"id": 1551,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_salt_1152": {
									"entryPoint": 2398,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_startTokenId_1310": {
									"entryPoint": 3598,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_2215": {
									"entryPoint": 3603,
									"id": 2215,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_915": {
									"entryPoint": 4869,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1684": {
									"entryPoint": 1435,
									"id": 1684,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1413": {
									"entryPoint": 2045,
									"id": 1413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1706": {
									"entryPoint": 1311,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1758": {
									"entryPoint": 3080,
									"id": 1758,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 5542,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_1341": {
									"entryPoint": 3057,
									"id": 1341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_945": {
									"entryPoint": 4847,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1576": {
									"entryPoint": 1165,
									"id": 1576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1566": {
									"entryPoint": 2023,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1795": {
									"entryPoint": 1991,
									"id": 1795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1831": {
									"entryPoint": 2779,
									"id": 1831,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1740": {
									"entryPoint": 2404,
									"id": 1740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_930": {
									"entryPoint": 4825,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1385": {
									"entryPoint": 939,
									"id": 1385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_726": {
									"entryPoint": 3228,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1586": {
									"entryPoint": 2252,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_565": {
									"entryPoint": 5945,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1629": {
									"entryPoint": 2899,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1326": {
									"entryPoint": 1695,
									"id": 1326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1776": {
									"entryPoint": 1718,
									"id": 1776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateBlockScore_1301": {
									"entryPoint": 6297,
									"id": 1301,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8525,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15759:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:12",
														"type": ""
													}
												],
												"src": "4890:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:12",
														"type": ""
													}
												],
												"src": "5014:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:12"
															},
															"nodeType": "YulIf",
															"src": "5352:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:12",
														"type": ""
													}
												],
												"src": "5242:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:12"
															},
															"nodeType": "YulIf",
															"src": "5943:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:12",
														"type": ""
													}
												],
												"src": "5867:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:12"
															},
															"nodeType": "YulIf",
															"src": "6252:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:12",
														"type": ""
													}
												],
												"src": "6202:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:12",
														"type": ""
													}
												],
												"src": "6324:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:12"
															},
															"nodeType": "YulIf",
															"src": "6553:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:12",
														"type": ""
													}
												],
												"src": "6463:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:12"
															},
															"nodeType": "YulIf",
															"src": "7525:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:12",
														"type": ""
													}
												],
												"src": "7369:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:12",
														"type": ""
													}
												],
												"src": "7656:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:12"
															},
															"nodeType": "YulIf",
															"src": "7928:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:12",
														"type": ""
													}
												],
												"src": "7791:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:12",
														"type": ""
													}
												],
												"src": "8104:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:12"
															},
															"nodeType": "YulIf",
															"src": "8498:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:12",
														"type": ""
													}
												],
												"src": "8256:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:12"
															},
															"nodeType": "YulIf",
															"src": "8769:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:12",
														"type": ""
													}
												],
												"src": "8698:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:12"
															},
															"nodeType": "YulIf",
															"src": "9178:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:12",
														"type": ""
													}
												],
												"src": "9042:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:12"
															},
															"nodeType": "YulIf",
															"src": "10084:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:12",
														"type": ""
													}
												],
												"src": "9991:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:12"
															},
															"nodeType": "YulIf",
															"src": "10796:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:12"
															},
															"nodeType": "YulIf",
															"src": "10887:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:12",
														"type": ""
													}
												],
												"src": "10657:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:12",
														"type": ""
													}
												],
												"src": "10983:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:12",
														"type": ""
													}
												],
												"src": "11137:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:12",
														"type": ""
													}
												],
												"src": "11533:435:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12012:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12012:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12119:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12140:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12143:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11974:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12205:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12215:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12238:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12220:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12220:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12215:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12249:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12272:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12254:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12254:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12249:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12283:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12295:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12298:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12291:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12291:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12283:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12325:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12327:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12327:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12327:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12316:4:12"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12322:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12313:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12313:11:12"
															},
															"nodeType": "YulIf",
															"src": "12310:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12191:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12194:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12200:4:12",
														"type": ""
													}
												],
												"src": "12160:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12408:362:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12418:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12441:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12423:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12418:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12452:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12475:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12457:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12457:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12452:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12486:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12509:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12512:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12505:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12490:11:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12523:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12552:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12534:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12534:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12523:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12741:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12743:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12743:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12743:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12674:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12667:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12667:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12697:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12704:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12713:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12700:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12700:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12694:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12694:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12647:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12647:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12627:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12627:113:12"
															},
															"nodeType": "YulIf",
															"src": "12624:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12391:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12394:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12400:7:12",
														"type": ""
													}
												],
												"src": "12360:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12820:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12830:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12853:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12835:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12835:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12830:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12864:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12887:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12869:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12869:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12864:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12898:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12909:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12912:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12905:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12905:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12898:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12938:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12940:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12940:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12940:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12930:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12933:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12927:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12927:10:12"
															},
															"nodeType": "YulIf",
															"src": "12924:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12807:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12810:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12816:3:12",
														"type": ""
													}
												],
												"src": "12776:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13031:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13042:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13058:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13052:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13052:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13042:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13014:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13024:6:12",
														"type": ""
													}
												],
												"src": "12973:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13172:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13189:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13194:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13182:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13182:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13210:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13229:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13234:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13225:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13225:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13210:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13144:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13149:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13160:11:12",
														"type": ""
													}
												],
												"src": "13077:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13341:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13351:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13397:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13365:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13365:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13355:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13412:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13482:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13419:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13412:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13537:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13544:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13533:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13533:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13551:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13556:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13498:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13498:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13498:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13572:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13583:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13610:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13588:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13588:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13579:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13579:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13572:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13322:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13329:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13337:3:12",
														"type": ""
													}
												],
												"src": "13251:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13830:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13840:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13852:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13863:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13848:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13840:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13921:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13934:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13945:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13930:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13930:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13877:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13877:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13877:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14002:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14015:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14026:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14011:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14011:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13958:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13958:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13958:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14084:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14097:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14108:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14093:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14093:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14040:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14040:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14040:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14133:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14144:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14129:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14129:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14153:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14159:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14149:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14149:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14122:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14122:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14122:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14179:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14249:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14258:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14187:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14187:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14179:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13778:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13790:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13798:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13806:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13814:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13825:4:12",
														"type": ""
													}
												],
												"src": "13630:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14338:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14348:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14363:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14357:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14357:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14348:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14405:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14379:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14379:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14379:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14316:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14324:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14332:5:12",
														"type": ""
													}
												],
												"src": "14276:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14499:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14545:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14547:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14547:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14547:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14520:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14529:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14516:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14516:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14541:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14512:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14512:32:12"
															},
															"nodeType": "YulIf",
															"src": "14509:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "14638:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14653:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14667:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14657:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14682:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14727:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14738:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14723:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14723:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14747:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14692:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14692:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14682:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14469:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14480:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14492:6:12",
														"type": ""
													}
												],
												"src": "14423:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14821:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14831:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14858:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14840:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14840:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14831:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14954:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14956:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14956:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14956:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14879:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14886:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14876:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:77:12"
															},
															"nodeType": "YulIf",
															"src": "14873:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14985:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14996:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15003:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14992:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14985:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14807:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14817:3:12",
														"type": ""
													}
												],
												"src": "14778:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15045:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15062:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15065:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15055:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15055:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15055:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15159:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15152:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15152:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15152:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15183:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15186:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15176:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15176:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15176:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15017:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15245:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15255:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15278:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15260:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15260:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15255:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15289:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15312:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15294:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15294:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15289:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15336:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15338:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15338:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15338:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15333:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15326:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:9:12"
															},
															"nodeType": "YulIf",
															"src": "15323:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15368:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15377:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15380:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15373:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15373:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15368:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15234:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15237:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15243:1:12",
														"type": ""
													}
												],
												"src": "15203:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15428:142:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15438:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15461:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15443:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15443:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15438:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15472:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15495:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15477:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15477:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15472:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15519:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15521:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15521:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15521:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15516:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:9:12"
															},
															"nodeType": "YulIf",
															"src": "15506:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15550:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15559:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15562:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15550:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15417:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15420:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15426:1:12",
														"type": ""
													}
												],
												"src": "15394:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15604:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15621:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15624:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15614:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15614:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15614:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15718:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15721:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15711:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15711:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15711:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15742:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15745:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15735:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15735:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15735:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15576:180:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb465146102f5578063b88d4fde14610311578063c87b56dd1461032d578063d5abeb011461035d578063e985e9c51461037b57610116565b80636352211e1461025957806370a082311461028957806395d89b41146102b95780639f773399146102d757610116565b806318160ddd116100e957806318160ddd146101b557806323b872dd146101d3578063325b272a146101ef57806338020dcc1461021f57806342842e0e1461023d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611a11565b6103ab565b6040516101429190611a59565b60405180910390f35b61015361048d565b6040516101609190611b04565b60405180910390f35b610183600480360381019061017e9190611b5c565b61051f565b6040516101909190611bca565b60405180910390f35b6101b360048036038101906101ae9190611c11565b61059b565b005b6101bd61069f565b6040516101ca9190611c60565b60405180910390f35b6101ed60048036038101906101e89190611c7b565b6106b6565b005b61020960048036038101906102049190611cce565b6106c6565b6040516102169190611c60565b60405180910390f35b6102276107c1565b6040516102349190611c60565b60405180910390f35b61025760048036038101906102529190611c7b565b6107c7565b005b610273600480360381019061026e9190611b5c565b6107e7565b6040516102809190611bca565b60405180910390f35b6102a3600480360381019061029e9190611cce565b6107fd565b6040516102b09190611c60565b60405180910390f35b6102c16108cc565b6040516102ce9190611b04565b60405180910390f35b6102df61095e565b6040516102ec9190611c60565b60405180910390f35b61030f600480360381019061030a9190611d27565b610964565b005b61032b60048036038101906103269190611e9c565b610adb565b005b61034760048036038101906103429190611b5c565b610b53565b6040516103549190611b04565b60405180910390f35b610365610bf1565b6040516103729190611c60565b60405180910390f35b61039560048036038101906103909190611f1f565b610c08565b6040516103a29190611a59565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610486575061048582610c9c565b5b9050919050565b60606005805461049c90611f8e565b80601f01602080910402602001604051908101604052809291908181526020018280546104c890611f8e565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b5050505050905090565b600061052a82610d06565b610560576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105a6826107e7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361060d576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661062c610d54565b73ffffffffffffffffffffffffffffffffffffffff161461068f5761065881610653610d54565b610c08565b61068e576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61069a838383610d5c565b505050565b60006106a9610e0e565b6004546002540303905090565b6106c1838383610e13565b505050565b60008061072d600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001815260200190815260200160002054436112d990919063ffffffff16565b9050600061074c8261073e866107fd565b6112ef90919063ffffffff16565b905060006107b482600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461130590919063ffffffff16565b9050809350505050919050565b60015481565b6107e283838360405180602001604052806000815250610adb565b505050565b60006107f28261131b565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610864576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b6060600680546108db90611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461090790611f8e565b80156109545780601f1061092957610100808354040283529160200191610954565b820191906000526020600020905b81548152906001019060200180831161093757829003601f168201915b5050505050905090565b60005481565b61096c610d54565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109d0576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600a60006109dd610d54565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a8a610d54565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610acf9190611a59565b60405180910390a35050565b610ae6848484610e13565b610b058373ffffffffffffffffffffffffffffffffffffffff166115a6565b15610b4d57610b16848484846115c9565b610b4c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610b5e82610d06565b610b94576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b9e611719565b90506000815103610bbe5760405180602001604052806000815250610be9565b80610bc884611739565b604051602001610bd9929190611ffb565b6040516020818303038152906040525b915050919050565b6000610bfb610e0e565b6004546003540303905090565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610d11610e0e565b11158015610d20575060025482105b8015610d4d575060076000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b610e1c83611899565b610e2582611899565b6000610e308261131b565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610ebc610d54565b73ffffffffffffffffffffffffffffffffffffffff161480610eeb5750610eea85610ee5610d54565b610c08565b5b80610f305750610ef9610d54565b73ffffffffffffffffffffffffffffffffffffffff16610f188461051f565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610f69576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fcf576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fdc8585856001611956565b610fe860008487610d5c565b6001600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600760008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600760008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361126757600254821461126657878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112d2858585600161195c565b5050505050565b600081836112e7919061204e565b905092915050565b600081836112fd9190612082565b905092915050565b6000818361131391906120c4565b905092915050565b611323611962565b600082905080611331610e0e565b1161156f5760025481101561156e576000600760008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161156c57600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146114505780925050506115a1565b5b60011561156b57818060019003925050600760008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146115665780925050506115a1565b611451565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026115ef610d54565b8786866040518563ffffffff1660e01b8152600401611611949392919061214d565b6020604051808303816000875af192505050801561164d57506040513d601f19601f8201168201806040525081019061164a91906121ae565b60015b6116c6573d806000811461167d576040519150601f19603f3d011682016040523d82523d6000602084013e611682565b606091505b5060008151036116be576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606040518060800160405280605181526020016122e460519139905090565b606060008203611780576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611894565b600082905060005b600082146117b257808061179b906121db565b915050600a826117ab9190612252565b9150611788565b60008167ffffffffffffffff8111156117ce576117cd611d71565b5b6040519080825280601f01601f1916602001820160405280156118005781602001600182028036833780820191505090505b5090505b6000851461188d57600182611819919061204e565b9150600a856118289190612283565b603061183491906120c4565b60f81b81838151811061184a576118496122b4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856118869190612252565b9450611804565b8093505050505b919050565b60006118a4826106c6565b905080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055505050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119ee816119b9565b81146119f957600080fd5b50565b600081359050611a0b816119e5565b92915050565b600060208284031215611a2757611a266119af565b5b6000611a35848285016119fc565b91505092915050565b60008115159050919050565b611a5381611a3e565b82525050565b6000602082019050611a6e6000830184611a4a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aae578082015181840152602081019050611a93565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad682611a74565b611ae08185611a7f565b9350611af0818560208601611a90565b611af981611aba565b840191505092915050565b60006020820190508181036000830152611b1e8184611acb565b905092915050565b6000819050919050565b611b3981611b26565b8114611b4457600080fd5b50565b600081359050611b5681611b30565b92915050565b600060208284031215611b7257611b716119af565b5b6000611b8084828501611b47565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bb482611b89565b9050919050565b611bc481611ba9565b82525050565b6000602082019050611bdf6000830184611bbb565b92915050565b611bee81611ba9565b8114611bf957600080fd5b50565b600081359050611c0b81611be5565b92915050565b60008060408385031215611c2857611c276119af565b5b6000611c3685828601611bfc565b9250506020611c4785828601611b47565b9150509250929050565b611c5a81611b26565b82525050565b6000602082019050611c756000830184611c51565b92915050565b600080600060608486031215611c9457611c936119af565b5b6000611ca286828701611bfc565b9350506020611cb386828701611bfc565b9250506040611cc486828701611b47565b9150509250925092565b600060208284031215611ce457611ce36119af565b5b6000611cf284828501611bfc565b91505092915050565b611d0481611a3e565b8114611d0f57600080fd5b50565b600081359050611d2181611cfb565b92915050565b60008060408385031215611d3e57611d3d6119af565b5b6000611d4c85828601611bfc565b9250506020611d5d85828601611d12565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da982611aba565b810181811067ffffffffffffffff82111715611dc857611dc7611d71565b5b80604052505050565b6000611ddb6119a5565b9050611de78282611da0565b919050565b600067ffffffffffffffff821115611e0757611e06611d71565b5b611e1082611aba565b9050602081019050919050565b82818337600083830152505050565b6000611e3f611e3a84611dec565b611dd1565b905082815260208101848484011115611e5b57611e5a611d6c565b5b611e66848285611e1d565b509392505050565b600082601f830112611e8357611e82611d67565b5b8135611e93848260208601611e2c565b91505092915050565b60008060008060808587031215611eb657611eb56119af565b5b6000611ec487828801611bfc565b9450506020611ed587828801611bfc565b9350506040611ee687828801611b47565b925050606085013567ffffffffffffffff811115611f0757611f066119b4565b5b611f1387828801611e6e565b91505092959194509250565b60008060408385031215611f3657611f356119af565b5b6000611f4485828601611bfc565b9250506020611f5585828601611bfc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fa657607f821691505b602082108103611fb957611fb8611f5f565b5b50919050565b600081905092915050565b6000611fd582611a74565b611fdf8185611fbf565b9350611fef818560208601611a90565b80840191505092915050565b60006120078285611fca565b91506120138284611fca565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061205982611b26565b915061206483611b26565b925082820390508181111561207c5761207b61201f565b5b92915050565b600061208d82611b26565b915061209883611b26565b92508282026120a681611b26565b915082820484148315176120bd576120bc61201f565b5b5092915050565b60006120cf82611b26565b91506120da83611b26565b92508282019050808211156120f2576120f161201f565b5b92915050565b600081519050919050565b600082825260208201905092915050565b600061211f826120f8565b6121298185612103565b9350612139818560208601611a90565b61214281611aba565b840191505092915050565b60006080820190506121626000830187611bbb565b61216f6020830186611bbb565b61217c6040830185611c51565b818103606083015261218e8184612114565b905095945050505050565b6000815190506121a8816119e5565b92915050565b6000602082840312156121c4576121c36119af565b5b60006121d284828501612199565b91505092915050565b60006121e682611b26565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122185761221761201f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061225d82611b26565b915061226883611b26565b92508261227857612277612223565b5b828204905092915050565b600061228e82611b26565b915061229983611b26565b9250826122a9576122a8612223565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d65794b6e7658584d78417557473570743335457a3851684a6852363352445653775566736a4b61795234325a2fa2646970667358221220b67ded29e1426d276017ac843f3d83754edc36ae796ac518b60f2b526aa23bbf64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x37B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x9F773399 EQ PUSH2 0x2D7 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x325B272A EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x38020DCC EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x23D JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x476 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x486 JUMPI POP PUSH2 0x485 DUP3 PUSH2 0xC9C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x49C SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C8 SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x515 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x515 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A6 DUP3 PUSH2 0x7E7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x62C PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x68F JUMPI PUSH2 0x658 DUP2 PUSH2 0x653 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x69A DUP4 DUP4 DUP4 PUSH2 0xD5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C1 DUP4 DUP4 DUP4 PUSH2 0xE13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72D PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x12D9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x74C DUP3 PUSH2 0x73E DUP7 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x12EF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B4 DUP3 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1305 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xADB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 DUP3 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x8DB SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x907 SWAP1 PUSH2 0x1F8E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x954 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x929 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x954 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x937 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x96C PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x9DD PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8A PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xAE6 DUP5 DUP5 DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xB05 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 JUMP JUMPDEST ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB16 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15C9 JUMP JUMPDEST PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB5E DUP3 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB9E PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBE9 JUMP JUMPDEST DUP1 PUSH2 0xBC8 DUP5 PUSH2 0x1739 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD9 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFB PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD11 PUSH2 0xE0E JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xD20 JUMPI POP PUSH1 0x2 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xD4D JUMPI POP PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xE1C DUP4 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xE25 DUP3 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE30 DUP3 PUSH2 0x131B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEBC PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEEB JUMPI POP PUSH2 0xEEA DUP6 PUSH2 0xEE5 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xF30 JUMPI POP PUSH2 0xEF9 PUSH2 0xD54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF18 DUP5 PUSH2 0x51F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDC DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0xFE8 PUSH1 0x0 DUP5 DUP8 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1267 JUMPI PUSH1 0x2 SLOAD DUP3 EQ PUSH2 0x1266 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x12D2 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x195C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12FD SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1313 SWAP2 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1323 PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1331 PUSH2 0xE0E JUMP JUMPDEST GT PUSH2 0x156F JUMPI PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x156E JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x156C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1450 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x156B JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1566 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x15EF PUSH2 0xD54 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1611 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x164D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16C6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x16BE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E4 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1780 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x17B2 JUMPI DUP1 DUP1 PUSH2 0x179B SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST SWAP2 POP PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CE JUMPI PUSH2 0x17CD PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1800 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x188D JUMPI PUSH1 0x1 DUP3 PUSH2 0x1819 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1834 SWAP2 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x184A JUMPI PUSH2 0x1849 PUSH2 0x22B4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1886 SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST SWAP5 POP PUSH2 0x1804 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A4 DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EE DUP2 PUSH2 0x19B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A0B DUP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP5 DUP3 DUP6 ADD PUSH2 0x19FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x1A3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AAE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD6 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1AE0 DUP2 DUP6 PUSH2 0x1A7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1AF9 DUP2 PUSH2 0x1ABA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B1E DUP2 DUP5 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B56 DUP2 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP5 DUP3 DUP6 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 DUP3 PUSH2 0x1B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC4 DUP2 PUSH2 0x1BA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BA9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C0B DUP2 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C36 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C47 DUP6 DUP3 DUP7 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5A DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C94 JUMPI PUSH2 0x1C93 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB3 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D04 DUP2 PUSH2 0x1A3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D21 DUP2 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D3E JUMPI PUSH2 0x1D3D PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4C DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D5D DUP6 DUP3 DUP7 ADD PUSH2 0x1D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1DA9 DUP3 PUSH2 0x1ABA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1DC7 PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDB PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE7 DUP3 DUP3 PUSH2 0x1DA0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST PUSH2 0x1E10 DUP3 PUSH2 0x1ABA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3F PUSH2 0x1E3A DUP5 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E5B JUMPI PUSH2 0x1E5A PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH2 0x1E66 DUP5 DUP3 DUP6 PUSH2 0x1E1D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E83 JUMPI PUSH2 0x1E82 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E93 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB6 JUMPI PUSH2 0x1EB5 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED5 DUP8 DUP3 DUP9 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE6 DUP8 DUP3 DUP9 ADD PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F07 JUMPI PUSH2 0x1F06 PUSH2 0x19B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1F13 DUP8 DUP3 DUP9 ADD PUSH2 0x1E6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F36 JUMPI PUSH2 0x1F35 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F44 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F55 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB9 JUMPI PUSH2 0x1FB8 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1FDF DUP2 DUP6 PUSH2 0x1FBF JUMP JUMPDEST SWAP4 POP PUSH2 0x1FEF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2007 DUP3 DUP6 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 POP PUSH2 0x2013 DUP3 DUP5 PUSH2 0x1FCA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x207C JUMPI PUSH2 0x207B PUSH2 0x201F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208D DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2098 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20A6 DUP2 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20BD JUMPI PUSH2 0x20BC PUSH2 0x201F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CF DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x20DA DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F2 JUMPI PUSH2 0x20F1 PUSH2 0x201F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP3 PUSH2 0x20F8 JUMP JUMPDEST PUSH2 0x2129 DUP2 DUP6 PUSH2 0x2103 JUMP JUMPDEST SWAP4 POP PUSH2 0x2139 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x2142 DUP2 PUSH2 0x1ABA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x216F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x217C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x218E DUP2 DUP5 PUSH2 0x2114 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21A8 DUP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C4 JUMPI PUSH2 0x21C3 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D2 DUP5 DUP3 DUP6 ADD PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E6 DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x201F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x225D DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2268 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2278 JUMPI PUSH2 0x2277 PUSH2 0x2223 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP3 PUSH2 0x1B26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2299 DUP4 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22A9 JUMPI PUSH2 0x22A8 PUSH2 0x2223 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D65794B6E7658584D784175574735707433 CALLDATALOAD GASLIMIT PUSH27 0x3851684A6852363352445653775566736A4B61795234325A2FA264 PUSH10 0x70667358221220B67DED 0x29 0xE1 TIMESTAMP PUSH14 0x276017AC843F3D83754EDC36AE79 PUSH11 0xC518B60F2B526AA23BBF64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "1024:20992:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4435:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7551:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9146:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8708:372;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3493:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10011:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2636:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1208:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10252:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7359:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4804:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7720:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1179:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9422:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10508:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7895:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3815:172;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9780:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4435:305;4537:4;4589:25;4574:40;;;:11;:40;;;;:105;;;;4646:33;4631:48;;;:11;:48;;;;4574:105;:158;;;;4696:36;4720:11;4696:23;:36::i;:::-;4574:158;4554:178;;4435:305;;;:::o;7551:100::-;7605:13;7638:5;7631:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7551:100;:::o;9146:204::-;9214:7;9239:16;9247:7;9239;:16::i;:::-;9234:64;;9264:34;;;;;;;;;;;;;;9234:64;9318:15;:24;9334:7;9318:24;;;;;;;;;;;;;;;;;;;;;9311:31;;9146:204;;;:::o;8708:372::-;8781:13;8797:24;8813:7;8797:15;:24::i;:::-;8781:40;;8842:5;8836:11;;:2;:11;;;8832:48;;8856:24;;;;;;;;;;;;;;8832:48;8913:5;8897:21;;:12;:10;:12::i;:::-;:21;;;8893:139;;8924:37;8941:5;8948:12;:10;:12::i;:::-;8924:16;:37::i;:::-;8920:112;;8985:35;;;;;;;;;;;;;;8920:112;8893:139;9044:28;9053:2;9057:7;9066:5;9044:8;:28::i;:::-;8770:310;8708:372;;:::o;3493:312::-;3546:7;3771:15;:13;:15::i;:::-;3756:12;;3740:13;;:28;:46;3733:53;;3493:312;:::o;10011:170::-;10145:28;10155:4;10161:2;10165:7;10145:9;:28::i;:::-;10011:170;;;:::o;2636:296::-;2689:7;2708:18;2729:38;2746:11;:17;2758:4;2746:17;;;;;;;;;;;;;;;:20;2764:1;2746:20;;;;;;;;;;;;2729:12;:16;;:38;;;;:::i;:::-;2708:59;;2778:15;2796:31;2816:10;2796:15;2806:4;2796:9;:15::i;:::-;:19;;:31;;;;:::i;:::-;2778:49;;2838:20;2861:33;2886:7;2861:11;:17;2873:4;2861:17;;;;;;;;;;;;;;;:20;2879:1;2861:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;2838:56;;2912:12;2905:19;;;;;2636:296;;;:::o;1208:27::-;;;;:::o;10252:185::-;10390:39;10407:4;10413:2;10417:7;10390:39;;;;;;;;;;;;:16;:39::i;:::-;10252:185;;;:::o;7359:125::-;7423:7;7450:21;7463:7;7450:12;:21::i;:::-;:26;;;7443:33;;7359:125;;;:::o;4804:206::-;4868:7;4909:1;4892:19;;:5;:19;;;4888:60;;4920:28;;;;;;;;;;;;;;4888:60;4974:12;:19;4987:5;4974:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4966:36;;4959:43;;4804:206;;;:::o;7720:104::-;7776:13;7809:7;7802:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7720:104;:::o;1179:20::-;;;;:::o;9422:287::-;9533:12;:10;:12::i;:::-;9521:24;;:8;:24;;;9517:54;;9554:17;;;;;;;;;;;;;;9517:54;9629:8;9584:18;:32;9603:12;:10;:12::i;:::-;9584:32;;;;;;;;;;;;;;;:42;9617:8;9584:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;9682:8;9653:48;;9668:12;:10;:12::i;:::-;9653:48;;;9692:8;9653:48;;;;;;:::i;:::-;;;;;;;;9422:287;;:::o;10508:370::-;10675:28;10685:4;10691:2;10695:7;10675:9;:28::i;:::-;10718:15;:2;:13;;;:15::i;:::-;10714:157;;;10739:56;10770:4;10776:2;10780:7;10789:5;10739:30;:56::i;:::-;10735:136;;10819:40;;;;;;;;;;;;;;10735:136;10714:157;10508:370;;;;:::o;7895:318::-;7968:13;7999:16;8007:7;7999;:16::i;:::-;7994:59;;8024:29;;;;;;;;;;;;;;7994:59;8066:21;8090:10;:8;:10::i;:::-;8066:34;;8143:1;8124:7;8118:21;:26;:87;;;;;;;;;;;;;;;;;8171:7;8180:18;:7;:16;:18::i;:::-;8154:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8118:87;8111:94;;;7895:318;;;:::o;3815:172::-;3866:7;3953:15;:13;:15::i;:::-;3938:12;;3925:10;;:25;:43;3918:50;;3815:172;:::o;9780:164::-;9877:4;9901:18;:25;9920:5;9901:25;;;;;;;;;;;;;;;:35;9927:8;9901:35;;;;;;;;;;;;;;;;;;;;;;;;;9894:42;;9780:164;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11092:174:10:-;11149:4;11192:7;11173:15;:13;:15::i;:::-;:26;;:53;;;;;11213:13;;11203:7;:23;11173:53;:85;;;;;11231:11;:20;11243:7;11231:20;;;;;;;;;;;:27;;;;;;;;;;;;11230:28;11173:85;11166:92;;11092:174;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;19034:196:10:-;19176:2;19149:15;:24;19165:7;19149:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;19214:7;19210:2;19194:28;;19203:5;19194:28;;;;;;;;;;;;19034:196;;;:::o;3267:92::-;3323:7;3267:92;:::o;13879:2194::-;13994:22;14011:4;13994:16;:22::i;:::-;14027:20;14044:2;14027:16;:20::i;:::-;14058:35;14096:21;14109:7;14096:12;:21::i;:::-;14058:59;;14156:4;14134:26;;:13;:18;;;:26;;;14130:67;;14169:28;;;;;;;;;;;;;;14130:67;14210:22;14252:4;14236:20;;:12;:10;:12::i;:::-;:20;;;:73;;;;14273:36;14290:4;14296:12;:10;:12::i;:::-;14273:16;:36::i;:::-;14236:73;:126;;;;14350:12;:10;:12::i;:::-;14326:36;;:20;14338:7;14326:11;:20::i;:::-;:36;;;14236:126;14210:153;;14381:17;14376:66;;14407:35;;;;;;;;;;;;;;14376:66;14471:1;14457:16;;:2;:16;;;14453:52;;14482:23;;;;;;;;;;;;;;14453:52;14518:43;14540:4;14546:2;14550:7;14559:1;14518:21;:43::i;:::-;14626:35;14643:1;14647:7;14656:4;14626:8;:35::i;:::-;14987:1;14957:12;:18;14970:4;14957:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15031:1;15003:12;:16;15016:2;15003:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15049:31;15083:11;:20;15095:7;15083:20;;;;;;;;;;;15049:54;;15134:2;15118:8;:13;;;:18;;;;;;;;;;;;;;;;;;15184:15;15151:8;:23;;;:49;;;;;;;;;;;;;;;;;;15452:19;15484:1;15474:7;:11;15452:33;;15500:31;15534:11;:24;15546:11;15534:24;;;;;;;;;;;15500:58;;15602:1;15577:27;;:8;:13;;;;;;;;;;;;:27;;;15573:384;;15787:13;;15772:11;:28;15768:174;;15841:4;15825:8;:13;;;:20;;;;;;;;;;;;;;;;;;15894:13;:28;;;15868:8;:23;;;:54;;;;;;;;;;;;;;;;;;15768:174;15573:384;14932:1036;;;16004:7;16000:2;15985:27;;15994:4;15985:27;;;;;;;;;;;;16023:42;16044:4;16050:2;16054:7;16063:1;16023:20;:42::i;:::-;13983:2090;;13879:2194;;;:::o;3122:96:8:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;6186:1111:10:-;6248:21;;:::i;:::-;6282:12;6297:7;6282:22;;6365:4;6346:15;:13;:15::i;:::-;:23;6342:888;;6382:13;;6375:4;:20;6371:859;;;6416:31;6450:11;:17;6462:4;6450:17;;;;;;;;;;;6416:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6491:9;:16;;;6486:729;;6562:1;6536:28;;:9;:14;;;:28;;;6532:101;;6600:9;6593:16;;;;;;6532:101;6935:261;6942:4;6935:261;;;6975:6;;;;;;;;7020:11;:17;7032:4;7020:17;;;;;;;;;;;7008:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7094:1;7068:28;;:9;:14;;;:28;;;7064:109;;7136:9;7129:16;;;;;;7064:109;6935:261;;;6486:729;6397:833;6371:859;6342:888;7258:31;;;;;;;;;;;;;;6186:1111;;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;19722:667:10:-;19885:4;19922:2;19906:36;;;19943:12;:10;:12::i;:::-;19957:4;19963:7;19972:5;19906:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;19902:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20157:1;20140:6;:13;:18;20136:235;;20186:40;;;;;;;;;;;;;;20136:235;20329:6;20323:13;20314:6;20310:2;20306:15;20299:38;19902:480;20035:45;;;20025:55;;;:6;:55;;;;20018:62;;;19722:667;;;;;;:::o;8461:185::-;8512:13;8538:90;;;;;;;;;;;;;;;;;;;8461:185;:::o;392:703:5:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;2940:209:10:-;2997:20;3020:16;3031:4;3020:10;:16::i;:::-;2997:39;;3076:12;3054:11;:17;3066:4;3054:17;;;;;;;;;;;;;;;:20;3072:1;3054:20;;;;;;;;;;;:34;;;;3129:12;3106:11;:17;3118:4;3106:17;;;;;;;;;;;;;;;:20;3124:1;3106:20;;;;;;;;;;;:35;;;;2986:163;2940:209;:::o;21037:159::-;;;;;:::o;21855:158::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:180::-;12022:77;12019:1;12012:88;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12160:194;12200:4;12220:20;12238:1;12220:20;:::i;:::-;12215:25;;12254:20;12272:1;12254:20;:::i;:::-;12249:25;;12298:1;12295;12291:9;12283:17;;12322:1;12316:4;12313:11;12310:37;;;12327:18;;:::i;:::-;12310:37;12160:194;;;;:::o;12360:410::-;12400:7;12423:20;12441:1;12423:20;:::i;:::-;12418:25;;12457:20;12475:1;12457:20;:::i;:::-;12452:25;;12512:1;12509;12505:9;12534:30;12552:11;12534:30;:::i;:::-;12523:41;;12713:1;12704:7;12700:15;12697:1;12694:22;12674:1;12667:9;12647:83;12624:139;;12743:18;;:::i;:::-;12624:139;12408:362;12360:410;;;;:::o;12776:191::-;12816:3;12835:20;12853:1;12835:20;:::i;:::-;12830:25;;12869:20;12887:1;12869:20;:::i;:::-;12864:25;;12912:1;12909;12905:9;12898:16;;12933:3;12930:1;12927:10;12924:36;;;12940:18;;:::i;:::-;12924:36;12776:191;;;;:::o;12973:98::-;13024:6;13058:5;13052:12;13042:22;;12973:98;;;:::o;13077:168::-;13160:11;13194:6;13189:3;13182:19;13234:4;13229:3;13225:14;13210:29;;13077:168;;;;:::o;13251:373::-;13337:3;13365:38;13397:5;13365:38;:::i;:::-;13419:70;13482:6;13477:3;13419:70;:::i;:::-;13412:77;;13498:65;13556:6;13551:3;13544:4;13537:5;13533:16;13498:65;:::i;:::-;13588:29;13610:6;13588:29;:::i;:::-;13583:3;13579:39;13572:46;;13341:283;13251:373;;;;:::o;13630:640::-;13825:4;13863:3;13852:9;13848:19;13840:27;;13877:71;13945:1;13934:9;13930:17;13921:6;13877:71;:::i;:::-;13958:72;14026:2;14015:9;14011:18;14002:6;13958:72;:::i;:::-;14040;14108:2;14097:9;14093:18;14084:6;14040:72;:::i;:::-;14159:9;14153:4;14149:20;14144:2;14133:9;14129:18;14122:48;14187:76;14258:4;14249:6;14187:76;:::i;:::-;14179:84;;13630:640;;;;;;;:::o;14276:141::-;14332:5;14363:6;14357:13;14348:22;;14379:32;14405:5;14379:32;:::i;:::-;14276:141;;;;:::o;14423:349::-;14492:6;14541:2;14529:9;14520:7;14516:23;14512:32;14509:119;;;14547:79;;:::i;:::-;14509:119;14667:1;14692:63;14747:7;14738:6;14727:9;14723:22;14692:63;:::i;:::-;14682:73;;14638:127;14423:349;;;;:::o;14778:233::-;14817:3;14840:24;14858:5;14840:24;:::i;:::-;14831:33;;14886:66;14879:5;14876:77;14873:103;;14956:18;;:::i;:::-;14873:103;15003:1;14996:5;14992:13;14985:20;;14778:233;;;:::o;15017:180::-;15065:77;15062:1;15055:88;15162:4;15159:1;15152:15;15186:4;15183:1;15176:15;15203:185;15243:1;15260:20;15278:1;15260:20;:::i;:::-;15255:25;;15294:20;15312:1;15294:20;:::i;:::-;15289:25;;15333:1;15323:35;;15338:18;;:::i;:::-;15323:35;15380:1;15377;15373:9;15368:14;;15203:185;;;;:::o;15394:176::-;15426:1;15443:20;15461:1;15443:20;:::i;:::-;15438:25;;15477:20;15495:1;15477:20;:::i;:::-;15472:25;;15516:1;15506:35;;15521:18;;:::i;:::-;15506:35;15562:1;15559;15555:9;15550:14;;15394:176;;;;:::o;15576:180::-;15624:77;15621:1;15614:88;15721:4;15718:1;15711:15;15745:4;15742:1;15735:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1813200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BlockScore(address)": "infinite",
								"_DCFperBlock()": "2518",
								"_salt()": "2518",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2969",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "4664",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4599",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4499",
								"_getAux(address)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "15",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"updateBlockScore(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2300,
									"end": 2622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2432,
									"end": 2437,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2424,
									"end": 2437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2424,
									"end": 2437,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2465,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2455,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2448,
									"end": 2465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2448,
									"end": 2465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2489,
									"end": 2499,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2486,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2476,
									"end": 2499,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2499,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2541,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2526,
									"end": 2541,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2541,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2526,
									"end": 2541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2510,
									"end": 2523,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2510,
									"end": 2541,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2510,
									"end": 2541,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2510,
									"end": 2541,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2510,
									"end": 2541,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2561,
									"end": 2566,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2558,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2553,
									"end": 2566,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2566,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2595,
									"end": 2607,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2592,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2580,
									"end": 2607,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2607,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2607,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2607,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2622,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3267,
									"end": 3359,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 3267,
									"end": 3359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3323,
									"end": 3330,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3267,
									"end": 3359,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3267,
									"end": 3359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3169,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3171,
									"end": 3177,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3187,
									"end": 3193,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3244,
									"end": 3247,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 3232,
									"end": 3241,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3223,
									"end": 3230,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3219,
									"end": 3242,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3215,
									"end": 3248,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3212,
									"end": 3332,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3212,
									"end": 3332,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3212,
									"end": 3332,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3251,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3251,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3330,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3251,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3212,
									"end": 3332,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3212,
									"end": 3332,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3392,
									"end": 3393,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3381,
									"end": 3390,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3377,
									"end": 3394,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3371,
									"end": 3395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3422,
									"end": 3440,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3414,
									"end": 3420,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3411,
									"end": 3441,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3408,
									"end": 3525,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3408,
									"end": 3525,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3408,
									"end": 3525,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3444,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3444,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3444,
									"end": 3523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3444,
									"end": 3523,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3444,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3408,
									"end": 3525,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3408,
									"end": 3525,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3549,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3615,
									"end": 3622,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3595,
									"end": 3604,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 3591,
									"end": 3613,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3549,
									"end": 3623,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3549,
									"end": 3623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3549,
									"end": 3623,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3549,
									"end": 3623,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3539,
									"end": 3623,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3539,
									"end": 3623,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3342,
									"end": 3633,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3693,
									"end": 3695,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3682,
									"end": 3691,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3678,
									"end": 3696,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3672,
									"end": 3697,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3724,
									"end": 3742,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3716,
									"end": 3722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3713,
									"end": 3743,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3827,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3827,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3710,
									"end": 3827,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3746,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3746,
									"end": 3825,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3746,
									"end": 3825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3746,
									"end": 3825,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3746,
									"end": 3825,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3710,
									"end": 3827,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3710,
									"end": 3827,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3851,
									"end": 3925,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3917,
									"end": 3924,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3908,
									"end": 3914,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3897,
									"end": 3906,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 3893,
									"end": 3915,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3851,
									"end": 3925,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3851,
									"end": 3925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3851,
									"end": 3925,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3851,
									"end": 3925,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3841,
									"end": 3925,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3841,
									"end": 3925,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3643,
									"end": 3935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3974,
									"end": 3976,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4000,
									"end": 4064,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4056,
									"end": 4063,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4047,
									"end": 4053,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4036,
									"end": 4045,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4054,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4000,
									"end": 4064,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4000,
									"end": 4064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4000,
									"end": 4064,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 4000,
									"end": 4064,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4064,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4064,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 4074,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4115,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 4139,
									"end": 4203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4195,
									"end": 4202,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4186,
									"end": 4192,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4175,
									"end": 4184,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4171,
									"end": 4193,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4139,
									"end": 4203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4139,
									"end": 4203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4139,
									"end": 4203,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4139,
									"end": 4203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4129,
									"end": 4203,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4129,
									"end": 4203,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4084,
									"end": 4213,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4252,
									"end": 4255,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4279,
									"end": 4343,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4335,
									"end": 4342,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4326,
									"end": 4332,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4315,
									"end": 4324,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4311,
									"end": 4333,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4279,
									"end": 4343,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4279,
									"end": 4343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4279,
									"end": 4343,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4279,
									"end": 4343,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4269,
									"end": 4343,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4269,
									"end": 4343,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4223,
									"end": 4353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 4360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4366,
									"end": 4465,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4366,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4418,
									"end": 4424,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4452,
									"end": 4457,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4446,
									"end": 4458,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4436,
									"end": 4458,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4436,
									"end": 4458,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4366,
									"end": 4465,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4366,
									"end": 4465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4366,
									"end": 4465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4366,
									"end": 4465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4471,
									"end": 4651,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4471,
									"end": 4651,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4519,
									"end": 4596,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4516,
									"end": 4517,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4509,
									"end": 4597,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4616,
									"end": 4620,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4613,
									"end": 4614,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4606,
									"end": 4621,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4640,
									"end": 4644,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4637,
									"end": 4638,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4630,
									"end": 4645,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4657,
									"end": 4977,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4657,
									"end": 4977,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4701,
									"end": 4707,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4738,
									"end": 4739,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4732,
									"end": 4736,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 4740,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4718,
									"end": 4740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4718,
									"end": 4740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4785,
									"end": 4786,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4779,
									"end": 4783,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4775,
									"end": 4787,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4806,
									"end": 4824,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4796,
									"end": 4877,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4796,
									"end": 4877,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4854,
									"end": 4860,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4850,
									"end": 4867,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4840,
									"end": 4867,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4840,
									"end": 4867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4796,
									"end": 4877,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4796,
									"end": 4877,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4924,
									"end": 4926,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4916,
									"end": 4922,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4913,
									"end": 4927,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4893,
									"end": 4911,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4890,
									"end": 4928,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4971,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4887,
									"end": 4971,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4943,
									"end": 4961,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4943,
									"end": 4961,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4943,
									"end": 4961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4943,
									"end": 4961,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4943,
									"end": 4961,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4887,
									"end": 4971,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4887,
									"end": 4971,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4708,
									"end": 4977,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4657,
									"end": 4977,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4657,
									"end": 4977,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4657,
									"end": 4977,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4657,
									"end": 4977,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4983,
									"end": 5124,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4983,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5032,
									"end": 5036,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5047,
									"end": 5058,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5047,
									"end": 5058,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5081,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5075,
									"end": 5076,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5068,
									"end": 5082,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5112,
									"end": 5116,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5109,
									"end": 5110,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5099,
									"end": 5117,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 5091,
									"end": 5117,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5091,
									"end": 5117,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4983,
									"end": 5124,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4983,
									"end": 5124,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4983,
									"end": 5124,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4983,
									"end": 5124,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5223,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5130,
									"end": 5223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5167,
									"end": 5173,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5214,
									"end": 5216,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5209,
									"end": 5211,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5202,
									"end": 5207,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5198,
									"end": 5212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5194,
									"end": 5217,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 5217,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 5217,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5223,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5223,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5336,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5229,
									"end": 5336,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5273,
									"end": 5281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5323,
									"end": 5328,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5317,
									"end": 5321,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5313,
									"end": 5329,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5329,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5292,
									"end": 5329,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5336,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5336,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5336,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5336,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5229,
									"end": 5336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5411,
									"end": 5417,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5461,
									"end": 5462,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5449,
									"end": 5459,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5445,
									"end": 5463,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5484,
									"end": 5581,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5514,
									"end": 5580,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5503,
									"end": 5512,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5484,
									"end": 5581,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5484,
									"end": 5581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5484,
									"end": 5581,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5484,
									"end": 5581,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5602,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5632,
									"end": 5640,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5621,
									"end": 5630,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5602,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5602,
									"end": 5641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5602,
									"end": 5641,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 5602,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5590,
									"end": 5641,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5590,
									"end": 5641,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5674,
									"end": 5678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5663,
									"end": 5668,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5659,
									"end": 5680,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5680,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5650,
									"end": 5680,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 5727,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5713,
									"end": 5721,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5702,
									"end": 5707,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5699,
									"end": 5729,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5689,
									"end": 5729,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5689,
									"end": 5729,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5418,
									"end": 5735,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5418,
									"end": 5735,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5342,
									"end": 5735,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5741,
									"end": 5801,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5741,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5783,
									"end": 5795,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5741,
									"end": 5801,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5741,
									"end": 5801,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5741,
									"end": 5801,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5741,
									"end": 5801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5949,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5807,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5857,
									"end": 5866,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5890,
									"end": 5943,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5908,
									"end": 5942,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5917,
									"end": 5941,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5917,
									"end": 5941,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 5917,
									"end": 5941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5917,
									"end": 5941,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5917,
									"end": 5941,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5908,
									"end": 5942,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5908,
									"end": 5942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5908,
									"end": 5942,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5908,
									"end": 5942,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5890,
									"end": 5943,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 5890,
									"end": 5943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5890,
									"end": 5943,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5890,
									"end": 5943,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5877,
									"end": 5943,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5877,
									"end": 5943,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5949,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5949,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5949,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 6030,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5955,
									"end": 6030,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5998,
									"end": 6001,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6019,
									"end": 6024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6012,
									"end": 6024,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6012,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 6030,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 6030,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 6030,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 6030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6036,
									"end": 6305,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6036,
									"end": 6305,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6146,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6177,
									"end": 6184,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6146,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 6146,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6146,
									"end": 6185,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6146,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6207,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6256,
									"end": 6297,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6280,
									"end": 6296,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6256,
									"end": 6297,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 6256,
									"end": 6297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6256,
									"end": 6297,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6256,
									"end": 6297,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6248,
									"end": 6254,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6241,
									"end": 6245,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6235,
									"end": 6246,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6207,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 6207,
									"end": 6298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6207,
									"end": 6298,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6207,
									"end": 6298,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6201,
									"end": 6205,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6194,
									"end": 6299,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6112,
									"end": 6305,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6036,
									"end": 6305,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6036,
									"end": 6305,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6036,
									"end": 6305,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6036,
									"end": 6305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6311,
									"end": 6384,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6311,
									"end": 6384,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6356,
									"end": 6359,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6311,
									"end": 6384,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6311,
									"end": 6384,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6390,
									"end": 6579,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6390,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6467,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6467,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6467,
									"end": 6499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6467,
									"end": 6499,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6467,
									"end": 6499,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6508,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6566,
									"end": 6572,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6558,
									"end": 6564,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6552,
									"end": 6556,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6508,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6508,
									"end": 6573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6508,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6508,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6443,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6390,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6390,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6390,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6771,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6585,
									"end": 6771,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6662,
									"end": 6665,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6655,
									"end": 6660,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6666,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6716,
									"end": 6755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6753,
									"end": 6754,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6746,
									"end": 6751,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6716,
									"end": 6755,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6716,
									"end": 6755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6716,
									"end": 6755,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6716,
									"end": 6755,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6689,
									"end": 6690,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6682,
									"end": 6687,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6678,
									"end": 6691,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6669,
									"end": 6691,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6669,
									"end": 6691,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6645,
									"end": 6765,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6771,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6771,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7320,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6777,
									"end": 7320,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6878,
									"end": 6880,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6873,
									"end": 6876,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6870,
									"end": 6881,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6867,
									"end": 7313,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6867,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 6867,
									"end": 7313,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6912,
									"end": 6950,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 6944,
									"end": 6949,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6912,
									"end": 6950,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 6912,
									"end": 6950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6912,
									"end": 6950,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 6912,
									"end": 6950,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6996,
									"end": 7025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7014,
									"end": 7024,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6996,
									"end": 7025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 6996,
									"end": 7025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6996,
									"end": 7025,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 6996,
									"end": 7025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6986,
									"end": 6994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6982,
									"end": 7026,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7179,
									"end": 7181,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7167,
									"end": 7177,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7164,
									"end": 7182,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 7210,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 7210,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7161,
									"end": 7210,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7200,
									"end": 7208,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7185,
									"end": 7208,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7185,
									"end": 7208,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7161,
									"end": 7210,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7161,
									"end": 7210,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7223,
									"end": 7303,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7279,
									"end": 7301,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7297,
									"end": 7300,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7279,
									"end": 7301,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 7279,
									"end": 7301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7279,
									"end": 7301,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7279,
									"end": 7301,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7269,
									"end": 7277,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7265,
									"end": 7302,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7252,
									"end": 7263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7223,
									"end": 7303,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 7223,
									"end": 7303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7223,
									"end": 7303,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7223,
									"end": 7303,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6882,
									"end": 7313,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6882,
									"end": 7313,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6867,
									"end": 7313,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 6867,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7320,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7320,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7320,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6777,
									"end": 7320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7326,
									"end": 7443,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7326,
									"end": 7443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7380,
									"end": 7388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7430,
									"end": 7435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7424,
									"end": 7428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7420,
									"end": 7436,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7399,
									"end": 7436,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7399,
									"end": 7436,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7326,
									"end": 7443,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7326,
									"end": 7443,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7326,
									"end": 7443,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7326,
									"end": 7443,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7326,
									"end": 7443,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7449,
									"end": 7618,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7449,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7493,
									"end": 7499,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7526,
									"end": 7577,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7574,
									"end": 7575,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7570,
									"end": 7576,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7562,
									"end": 7567,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7559,
									"end": 7560,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7555,
									"end": 7568,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7526,
									"end": 7577,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 7526,
									"end": 7577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7526,
									"end": 7577,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 7526,
									"end": 7577,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7522,
									"end": 7578,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7607,
									"end": 7611,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7601,
									"end": 7605,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7597,
									"end": 7612,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7587,
									"end": 7612,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7587,
									"end": 7612,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7500,
									"end": 7618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7449,
									"end": 7618,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7449,
									"end": 7618,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7449,
									"end": 7618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7449,
									"end": 7618,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7449,
									"end": 7618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7623,
									"end": 7918,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 7623,
									"end": 7918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7699,
									"end": 7703,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7845,
									"end": 7874,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7870,
									"end": 7873,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7845,
									"end": 7874,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7845,
									"end": 7874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7845,
									"end": 7874,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7845,
									"end": 7874,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7874,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7837,
									"end": 7874,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7907,
									"end": 7910,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7900,
									"end": 7911,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7894,
									"end": 7898,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7891,
									"end": 7912,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7883,
									"end": 7912,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7883,
									"end": 7912,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7623,
									"end": 7918,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7623,
									"end": 7918,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7623,
									"end": 7918,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7623,
									"end": 7918,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7623,
									"end": 7918,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 9318,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 7923,
									"end": 9318,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8040,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 8073,
									"end": 8076,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8040,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 8040,
									"end": 8077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8040,
									"end": 8077,
									"name": "tag",
									"source": 12,
									"value": "142"
								},
								{
									"begin": 8040,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 8160,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8134,
									"end": 8140,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8131,
									"end": 8161,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8128,
									"end": 8184,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8128,
									"end": 8184,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 8128,
									"end": 8184,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8164,
									"end": 8182,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8164,
									"end": 8182,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 8164,
									"end": 8182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8164,
									"end": 8182,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8164,
									"end": 8182,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8128,
									"end": 8184,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 8128,
									"end": 8184,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8208,
									"end": 8246,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8240,
									"end": 8244,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8234,
									"end": 8245,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8208,
									"end": 8246,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 8208,
									"end": 8246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8208,
									"end": 8246,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8208,
									"end": 8246,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 8353,
									"end": 8359,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8345,
									"end": 8351,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8339,
									"end": 8343,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 8293,
									"end": 8360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8360,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 8293,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8387,
									"end": 8388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8411,
									"end": 8415,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8398,
									"end": 8415,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8398,
									"end": 8415,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8443,
									"end": 8445,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8435,
									"end": 8441,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8460,
									"end": 8461,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8455,
									"end": 9073,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8455,
									"end": 9073,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8455,
									"end": 9073,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 8455,
									"end": 9073,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9117,
									"end": 9118,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9134,
									"end": 9140,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9131,
									"end": 9208,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9131,
									"end": 9208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 9131,
									"end": 9208,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9183,
									"end": 9192,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9178,
									"end": 9181,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 9174,
									"end": 9193,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9168,
									"end": 9194,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9159,
									"end": 9194,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9159,
									"end": 9194,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9131,
									"end": 9208,
									"name": "tag",
									"source": 12,
									"value": "149"
								},
								{
									"begin": 9131,
									"end": 9208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9234,
									"end": 9301,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 9294,
									"end": 9300,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9287,
									"end": 9292,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9234,
									"end": 9301,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 9234,
									"end": 9301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9234,
									"end": 9301,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 9234,
									"end": 9301,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9228,
									"end": 9232,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9221,
									"end": 9302,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9090,
									"end": 9312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8425,
									"end": 9312,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 8425,
									"end": 9312,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8455,
									"end": 9073,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 8455,
									"end": 9073,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8507,
									"end": 8511,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8503,
									"end": 8512,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8495,
									"end": 8501,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8491,
									"end": 8513,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 8573,
									"end": 8577,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 8541,
									"end": 8578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8541,
									"end": 8578,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 8541,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8600,
									"end": 8601,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8628,
									"end": 8635,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8625,
									"end": 8626,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8622,
									"end": 8636,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8707,
									"end": 8716,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8702,
									"end": 8705,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8698,
									"end": 8717,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8692,
									"end": 8718,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8684,
									"end": 8690,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8677,
									"end": 8719,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8758,
									"end": 8759,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8750,
									"end": 8756,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8746,
									"end": 8760,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8736,
									"end": 8760,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8736,
									"end": 8760,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8805,
									"end": 8807,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8794,
									"end": 8803,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8790,
									"end": 8808,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8777,
									"end": 8808,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8777,
									"end": 8808,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8651,
									"end": 8655,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8648,
									"end": 8649,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8644,
									"end": 8656,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8656,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8639,
									"end": 8656,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "tag",
									"source": 12,
									"value": "154"
								},
								{
									"begin": 8614,
									"end": 8822,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8850,
									"end": 8856,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8841,
									"end": 8848,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8838,
									"end": 8857,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8835,
									"end": 9014,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8835,
									"end": 9014,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 8835,
									"end": 9014,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8908,
									"end": 8917,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8903,
									"end": 8906,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8899,
									"end": 8918,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8893,
									"end": 8919,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8951,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 8993,
									"end": 8997,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8985,
									"end": 8991,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8981,
									"end": 8998,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8970,
									"end": 8979,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8951,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 8951,
									"end": 8999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8951,
									"end": 8999,
									"name": "tag",
									"source": 12,
									"value": "156"
								},
								{
									"begin": 8951,
									"end": 8999,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8943,
									"end": 8949,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8936,
									"end": 9000,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8858,
									"end": 9014,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8835,
									"end": 9014,
									"name": "tag",
									"source": 12,
									"value": "155"
								},
								{
									"begin": 8835,
									"end": 9014,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9060,
									"end": 9061,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9056,
									"end": 9057,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 9048,
									"end": 9054,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9044,
									"end": 9058,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 9040,
									"end": 9062,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9034,
									"end": 9038,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9027,
									"end": 9063,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8462,
									"end": 9073,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8462,
									"end": 9073,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8462,
									"end": 9073,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8425,
									"end": 9312,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 8425,
									"end": 9312,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8425,
									"end": 9312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8015,
									"end": 9318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8015,
									"end": 9318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8015,
									"end": 9318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 9318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 9318,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7923,
									"end": 9318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1024,
									"end": 22016,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b67ded29e1426d276017ac843f3d83754edc36ae796ac518b60f2b526aa23bbf64736f6c63430008110033",
									".code": [
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "6352211E"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "A22CB465"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "A22CB465"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "C87B56DD"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "D5ABEB01"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "E985E9C5"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "6352211E"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "9F773399"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "325B272A"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "38020DCC"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "42842E0E"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "81812FC"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 22016,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4435,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4435,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 4435,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7551,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7551,
											"end": 7651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 9146,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 9146,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 9146,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8708,
											"end": 9080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8708,
											"end": 9080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3493,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3493,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10011,
											"end": 10181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 10011,
											"end": 10181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2636,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2636,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2636,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1208,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1208,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 10252,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 10252,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 7359,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 7359,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 7359,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4804,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4804,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4804,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7720,
											"end": 7824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7720,
											"end": 7824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1179,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1179,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 9422,
											"end": 9709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9422,
											"end": 9709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 10508,
											"end": 10878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10508,
											"end": 10878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 7895,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 7895,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7895,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3815,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3815,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9780,
											"end": 9944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 9780,
											"end": 9944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9780,
											"end": 9944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4614,
											"name": "PUSH",
											"source": 10,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4585,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4614,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 4574,
											"end": 4679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4679,
											"name": "PUSH",
											"source": 10,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4679,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4679,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 4574,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4732,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4574,
											"end": 4732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4720,
											"end": 4731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4696,
											"end": 4732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4732,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4696,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4732,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 4574,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7618,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7638,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7631,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7631,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9221,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9247,
											"end": 9254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9239,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 9239,
											"end": 9255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 9239,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 9234,
											"end": 9298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH",
											"source": 10,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9234,
											"end": 9298,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 9234,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9333,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9318,
											"end": 9342,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8797,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 8813,
											"end": 8820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 8797,
											"end": 8821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8821,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 8797,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8781,
											"end": 8821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8847,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8832,
											"end": 8880,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8880,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8832,
											"end": 8880,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8832,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8918,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 8897,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8897,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8909,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 8897,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8918,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8893,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8893,
											"end": 9032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8941,
											"end": 8946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 8948,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8948,
											"end": 8960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 8960,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 8948,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8924,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8924,
											"end": 8961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8920,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 8920,
											"end": 9032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8985,
											"end": 9020,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8920,
											"end": 9032,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 8920,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8893,
											"end": 9032,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8893,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 9053,
											"end": 9055,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9057,
											"end": 9064,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 9044,
											"end": 9072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9072,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 9044,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 9080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 9080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3771,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3771,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3768,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3786,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3733,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3733,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10155,
											"end": 10159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10161,
											"end": 10163,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10165,
											"end": 10172,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10145,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10145,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10011,
											"end": 10181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "NUMBER",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2729,
											"end": 2745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2729,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2816,
											"end": 2826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2796,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2796,
											"end": 2815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2886,
											"end": 2893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2872,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 2877,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2881,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2861,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 2924,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2924,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1208,
											"end": 1235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 10407,
											"end": 10411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10415,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10390,
											"end": 10429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 10390,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 7463,
											"end": 7470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 7450,
											"end": 7471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7471,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 7450,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7476,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7443,
											"end": 7476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4911,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4888,
											"end": 4948,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "PUSH",
											"source": 10,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4920,
											"end": 4948,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4948,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4888,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4986,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5002,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4966,
											"end": 5002,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 5010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7789,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7809,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7802,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7802,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1179,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 9533,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 9533,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9533,
											"end": 9545,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 9533,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9545,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9521,
											"end": 9545,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9545,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9521,
											"end": 9545,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9545,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9517,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 9517,
											"end": 9571,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "PUSH",
											"source": 10,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9571,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9517,
											"end": 9571,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 9517,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9629,
											"end": 9637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9602,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 9603,
											"end": 9613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 9603,
											"end": 9615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9615,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 9603,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9616,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9625,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9668,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 9668,
											"end": 9680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH",
											"source": 10,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 9692,
											"end": 9700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9653,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9653,
											"end": 9701,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10685,
											"end": 10689,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10691,
											"end": 10693,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10675,
											"end": 10703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10703,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10675,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 10718,
											"end": 10720,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 10718,
											"end": 10733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10733,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 10718,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10871,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 10714,
											"end": 10871,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 10770,
											"end": 10774,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10776,
											"end": 10778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10780,
											"end": 10787,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10794,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 10739,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10795,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 10739,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 10735,
											"end": 10871,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "PUSH",
											"source": 10,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10859,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10871,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 10735,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10714,
											"end": 10871,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 10714,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 7981,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7999,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7999,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8015,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 7999,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 7994,
											"end": 8053,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "PUSH",
											"source": 10,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8053,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8053,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 7994,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8090,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8090,
											"end": 8100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8090,
											"end": 8100,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8090,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8124,
											"end": 8131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8139,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8180,
											"end": 8187,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 8180,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 8154,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8118,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8111,
											"end": 8205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8111,
											"end": 8205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8111,
											"end": 8205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7895,
											"end": 8213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3953,
											"end": 3968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 3968,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3953,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3935,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3925,
											"end": 3935,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3950,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3968,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3918,
											"end": 3968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 9881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9919,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9926,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9927,
											"end": 9935,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9901,
											"end": 9936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9894,
											"end": 9936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9894,
											"end": 9936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11266,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 11092,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 11173,
											"end": 11186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 11173,
											"end": 11188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11188,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 11173,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11199,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11213,
											"end": 11226,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 11213,
											"end": 11226,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11203,
											"end": 11226,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 11173,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11242,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11250,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 11231,
											"end": 11258,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11258,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 11173,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11166,
											"end": 11258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11166,
											"end": 11258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11092,
											"end": 11266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11092,
											"end": 11266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11092,
											"end": 11266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11092,
											"end": 11266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19034,
											"end": 19230,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 19034,
											"end": 19230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19176,
											"end": 19178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19164,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19165,
											"end": 19172,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19214,
											"end": 19221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19212,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19203,
											"end": 19208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "PUSH",
											"source": 10,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19222,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 19034,
											"end": 19230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19034,
											"end": 19230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19034,
											"end": 19230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19034,
											"end": 19230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3359,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3267,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 16073,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 13879,
											"end": 16073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 14011,
											"end": 14015,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 13994,
											"end": 14016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13994,
											"end": 14016,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 13994,
											"end": 14016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14027,
											"end": 14047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14027,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 14027,
											"end": 14047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14027,
											"end": 14047,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 14027,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14096,
											"end": 14117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 14109,
											"end": 14116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14096,
											"end": 14108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 14096,
											"end": 14117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14096,
											"end": 14117,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 14096,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14156,
											"end": 14160,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "PUSH",
											"source": 10,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14197,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 14130,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14252,
											"end": 14256,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14256,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14236,
											"end": 14256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 14236,
											"end": 14246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 14236,
											"end": 14248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14248,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 14236,
											"end": 14248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14256,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14236,
											"end": 14256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14256,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14309,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 14236,
											"end": 14309,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 14290,
											"end": 14294,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14296,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 14296,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 14296,
											"end": 14308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14296,
											"end": 14308,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 14296,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 14273,
											"end": 14309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14309,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 14273,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14309,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 14236,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 14236,
											"end": 14362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14350,
											"end": 14362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 14350,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 14350,
											"end": 14362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14350,
											"end": 14362,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 14350,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14326,
											"end": 14362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 14338,
											"end": 14345,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 14326,
											"end": 14346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14346,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 14326,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14362,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14326,
											"end": 14362,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14362,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 14236,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14210,
											"end": 14363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14398,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14376,
											"end": 14442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 14376,
											"end": 14442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "PUSH",
											"source": 10,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14407,
											"end": 14442,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14376,
											"end": 14442,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 14376,
											"end": 14442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14471,
											"end": 14472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14457,
											"end": 14459,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14457,
											"end": 14473,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14453,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 14453,
											"end": 14505,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "PUSH",
											"source": 10,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14505,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14453,
											"end": 14505,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 14453,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14518,
											"end": 14561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 14540,
											"end": 14544,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14546,
											"end": 14548,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14550,
											"end": 14557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14560,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14518,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 14518,
											"end": 14561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14518,
											"end": 14561,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 14518,
											"end": 14561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 14643,
											"end": 14644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14647,
											"end": 14654,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14656,
											"end": 14660,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 14626,
											"end": 14661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14661,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 14626,
											"end": 14661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14957,
											"end": 14969,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14970,
											"end": 14974,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14975,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 14957,
											"end": 14988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15032,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15003,
											"end": 15015,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15016,
											"end": 15018,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15019,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15049,
											"end": 15080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15083,
											"end": 15094,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15095,
											"end": 15102,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15083,
											"end": 15103,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15049,
											"end": 15103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15049,
											"end": 15103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15134,
											"end": 15136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15118,
											"end": 15136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15184,
											"end": 15199,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15151,
											"end": 15174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15174,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15452,
											"end": 15471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15484,
											"end": 15485,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15474,
											"end": 15481,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15474,
											"end": 15485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15452,
											"end": 15485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15452,
											"end": 15485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15500,
											"end": 15531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15534,
											"end": 15545,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15546,
											"end": 15557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15534,
											"end": 15558,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15500,
											"end": 15558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15500,
											"end": 15558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15602,
											"end": 15603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15577,
											"end": 15590,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15573,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 15573,
											"end": 15957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15787,
											"end": 15800,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 15787,
											"end": 15800,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15772,
											"end": 15783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15772,
											"end": 15800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15768,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 15768,
											"end": 15942,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15825,
											"end": 15845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15907,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15922,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15894,
											"end": 15922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15922,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15868,
											"end": 15891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15891,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15768,
											"end": 15942,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 15768,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15573,
											"end": 15957,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 15573,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 15968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16004,
											"end": 16011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16000,
											"end": 16002,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 15998,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16012,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 16023,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 16044,
											"end": 16048,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16050,
											"end": 16052,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16061,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16064,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16023,
											"end": 16043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 16023,
											"end": 16065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16023,
											"end": 16065,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 16023,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13983,
											"end": 16073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13983,
											"end": 16073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 16073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 16073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 16073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 16073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 6248,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 6248,
											"end": 6269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6269,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 6248,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6346,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 6346,
											"end": 6361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6361,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6346,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6369,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6342,
											"end": 7230,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6395,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6382,
											"end": 6395,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6395,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 7230,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6371,
											"end": 7230,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6461,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6500,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6507,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6491,
											"end": 6507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6486,
											"end": 7215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6564,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6536,
											"end": 6564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6550,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6564,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6536,
											"end": 6564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6564,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6532,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6532,
											"end": 6633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6600,
											"end": 6609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6609,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6593,
											"end": 6609,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6532,
											"end": 6633,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6532,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6942,
											"end": 6946,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7031,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7037,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7064,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7145,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7129,
											"end": 7145,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7173,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7064,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6935,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 7215,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6486,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 7230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 7230,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 6371,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6342,
											"end": 7230,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6342,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "PUSH",
											"source": 10,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7289,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 7297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 7297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19885,
											"end": 19889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19922,
											"end": 19924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19942,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19906,
											"end": 19942,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19942,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 19943,
											"end": 19955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 19943,
											"end": 19953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 19943,
											"end": 19955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19943,
											"end": 19955,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 19943,
											"end": 19955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19957,
											"end": 19961,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 19970,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19972,
											"end": 19977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 19906,
											"end": 19978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 19906,
											"end": 19978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 19906,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20157,
											"end": 20158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20140,
											"end": 20146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20140,
											"end": 20153,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20140,
											"end": 20158,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20136,
											"end": 20371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 20136,
											"end": 20371,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "PUSH",
											"source": 10,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20226,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20136,
											"end": 20371,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 20136,
											"end": 20371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20329,
											"end": 20335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20323,
											"end": 20336,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20314,
											"end": 20320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20310,
											"end": 20312,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20306,
											"end": 20321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20299,
											"end": 20337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 19902,
											"end": 20382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20080,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 20035,
											"end": 20080,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20035,
											"end": 20080,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20080,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20018,
											"end": 20080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20018,
											"end": 20080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20018,
											"end": 20080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19722,
											"end": 20389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8646,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8461,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8512,
											"end": 8525,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH data",
											"source": 10,
											"value": "626642F6930F156F677CCAA99D1115840F2527D6F062EEDE1DE4DDA1BD081A2D"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "PUSH",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8538,
											"end": 8628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 721,
											"end": 741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 782,
											"end": 791,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 807,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 829,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 881,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 915,
											"end": 925,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 941,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1009,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 966,
											"end": 980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1036,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 392,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 3149,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2940,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3020,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3020,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3020,
											"end": 3036,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3020,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3065,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3070,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3071,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3088,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3129,
											"end": 3141,
											"name": "NUMBER",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3122,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3123,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3126,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3141,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 3149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 3149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 3149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21196,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 21037,
											"end": 21196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21037,
											"end": 21196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21855,
											"end": 22013,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 21855,
											"end": 22013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21855,
											"end": 22013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21855,
											"end": 22013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21855,
											"end": 22013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21855,
											"end": 22013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21855,
											"end": 22013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12143,
											"end": 12147,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12148,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12354,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 12160,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12200,
											"end": 12204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 12238,
											"end": 12239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12220,
											"end": 12240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 12220,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12240,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12254,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 12272,
											"end": 12273,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12254,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12254,
											"end": 12274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12254,
											"end": 12274,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 12254,
											"end": 12274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12249,
											"end": 12274,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12249,
											"end": 12274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12291,
											"end": 12300,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12283,
											"end": 12300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12283,
											"end": 12300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12322,
											"end": 12323,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12316,
											"end": 12320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12313,
											"end": 12324,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12310,
											"end": 12347,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12310,
											"end": 12347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 12310,
											"end": 12347,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12327,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 12327,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12310,
											"end": 12347,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 12310,
											"end": 12347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12354,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12354,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12770,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 12360,
											"end": 12770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12400,
											"end": 12407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 12441,
											"end": 12442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12423,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12423,
											"end": 12443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12423,
											"end": 12443,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 12423,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12457,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12457,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12457,
											"end": 12477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12457,
											"end": 12477,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 12457,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12477,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12513,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12509,
											"end": 12510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12514,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 12552,
											"end": 12563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12534,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 12564,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 12534,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12523,
											"end": 12564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12523,
											"end": 12564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12713,
											"end": 12714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12704,
											"end": 12711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12700,
											"end": 12715,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12697,
											"end": 12698,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12694,
											"end": 12716,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12667,
											"end": 12676,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12647,
											"end": 12730,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 12624,
											"end": 12763,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12743,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12763,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 12624,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12408,
											"end": 12770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12770,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12360,
											"end": 12770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12967,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 12776,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12835,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 12853,
											"end": 12854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12835,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12835,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12835,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 12835,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12830,
											"end": 12855,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12830,
											"end": 12855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12869,
											"end": 12889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12887,
											"end": 12888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12869,
											"end": 12889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 12869,
											"end": 12889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12869,
											"end": 12889,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12869,
											"end": 12889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12864,
											"end": 12889,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12864,
											"end": 12889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 12913,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12905,
											"end": 12914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12898,
											"end": 12914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12898,
											"end": 12914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12933,
											"end": 12936,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12930,
											"end": 12931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12927,
											"end": 12937,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 12924,
											"end": 12960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12940,
											"end": 12958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 12940,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12924,
											"end": 12960,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 12924,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12967,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12967,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12776,
											"end": 12967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 13071,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 12973,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13024,
											"end": 13030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13058,
											"end": 13063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13064,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13042,
											"end": 13064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 13071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 13071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 13071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12973,
											"end": 13071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13245,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 13077,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13194,
											"end": 13200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13189,
											"end": 13192,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13182,
											"end": 13201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13234,
											"end": 13238,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13229,
											"end": 13232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13210,
											"end": 13239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13245,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13245,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13624,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 13251,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 13397,
											"end": 13402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13365,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 13365,
											"end": 13403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13365,
											"end": 13403,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 13365,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 13482,
											"end": 13488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 13419,
											"end": 13489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13489,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 13419,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13412,
											"end": 13489,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13412,
											"end": 13489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13498,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 13556,
											"end": 13562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13551,
											"end": 13554,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13544,
											"end": 13548,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13537,
											"end": 13542,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13533,
											"end": 13549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13498,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 13498,
											"end": 13563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13498,
											"end": 13563,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 13498,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 13610,
											"end": 13616,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 13588,
											"end": 13617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 13588,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13583,
											"end": 13586,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13579,
											"end": 13618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13572,
											"end": 13618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13572,
											"end": 13618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13341,
											"end": 13624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13624,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13251,
											"end": 13624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13825,
											"end": 13829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13863,
											"end": 13866,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13852,
											"end": 13861,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13848,
											"end": 13867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13840,
											"end": 13867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13840,
											"end": 13867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13877,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 13945,
											"end": 13946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13934,
											"end": 13943,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13930,
											"end": 13947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13921,
											"end": 13927,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13877,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 13877,
											"end": 13948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13877,
											"end": 13948,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 13877,
											"end": 13948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13958,
											"end": 14030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14015,
											"end": 14024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14011,
											"end": 14029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14002,
											"end": 14008,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13958,
											"end": 14030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 13958,
											"end": 14030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13958,
											"end": 14030,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 13958,
											"end": 14030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14040,
											"end": 14112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 14108,
											"end": 14110,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14097,
											"end": 14106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14093,
											"end": 14111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14084,
											"end": 14090,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14040,
											"end": 14112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 14040,
											"end": 14112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14040,
											"end": 14112,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 14040,
											"end": 14112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14159,
											"end": 14168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14153,
											"end": 14157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14149,
											"end": 14169,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14144,
											"end": 14146,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14133,
											"end": 14142,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14122,
											"end": 14170,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14187,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 14258,
											"end": 14262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14255,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14187,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 14187,
											"end": 14263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14187,
											"end": 14263,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 14187,
											"end": 14263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14179,
											"end": 14263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 14270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14417,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 14276,
											"end": 14417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14332,
											"end": 14337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14357,
											"end": 14370,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14348,
											"end": 14370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14348,
											"end": 14370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 14405,
											"end": 14410,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 14379,
											"end": 14411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14379,
											"end": 14411,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 14379,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14417,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14276,
											"end": 14417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14772,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 14423,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14541,
											"end": 14543,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14529,
											"end": 14538,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14520,
											"end": 14527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14516,
											"end": 14539,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14512,
											"end": 14544,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14509,
											"end": 14628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14509,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 14509,
											"end": 14628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 14547,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 14547,
											"end": 14626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14547,
											"end": 14626,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 14547,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14509,
											"end": 14628,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 14509,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14667,
											"end": 14668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14692,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 14747,
											"end": 14754,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14738,
											"end": 14744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14723,
											"end": 14745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 14692,
											"end": 14755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14692,
											"end": 14755,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 14692,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14682,
											"end": 14755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14682,
											"end": 14755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14638,
											"end": 14765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14772,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14772,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14423,
											"end": 14772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14778,
											"end": 15011,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 14778,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14817,
											"end": 14820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14840,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 14858,
											"end": 14863,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14840,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 14840,
											"end": 14864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14840,
											"end": 14864,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 14840,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14864,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14831,
											"end": 14864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14886,
											"end": 14952,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14879,
											"end": 14884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14876,
											"end": 14953,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14873,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 14873,
											"end": 14976,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14956,
											"end": 14974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 14956,
											"end": 14974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14873,
											"end": 14976,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 14873,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15003,
											"end": 15004,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14996,
											"end": 15001,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14992,
											"end": 15005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14778,
											"end": 15011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14778,
											"end": 15011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14778,
											"end": 15011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14778,
											"end": 15011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15017,
											"end": 15197,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 15017,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15065,
											"end": 15142,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15062,
											"end": 15063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15055,
											"end": 15143,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15166,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 15159,
											"end": 15160,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15152,
											"end": 15167,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15190,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15183,
											"end": 15184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15176,
											"end": 15191,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15388,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 15203,
											"end": 15388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15243,
											"end": 15244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15260,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15278,
											"end": 15279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15260,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15260,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15260,
											"end": 15280,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15260,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15255,
											"end": 15280,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15255,
											"end": 15280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15294,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 15312,
											"end": 15313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15294,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15294,
											"end": 15314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15294,
											"end": 15314,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 15294,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15289,
											"end": 15314,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15289,
											"end": 15314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15323,
											"end": 15358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 15323,
											"end": 15358,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 15338,
											"end": 15356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 15338,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15323,
											"end": 15358,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 15323,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15380,
											"end": 15381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15373,
											"end": 15382,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15368,
											"end": 15382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15368,
											"end": 15382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15388,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15388,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15203,
											"end": 15388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15570,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 15394,
											"end": 15570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15426,
											"end": 15427,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15443,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15443,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15443,
											"end": 15463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15443,
											"end": 15463,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 15443,
											"end": 15463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15438,
											"end": 15463,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15438,
											"end": 15463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15477,
											"end": 15497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 15495,
											"end": 15496,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15477,
											"end": 15497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15477,
											"end": 15497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15477,
											"end": 15497,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 15477,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15472,
											"end": 15497,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15472,
											"end": 15497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15516,
											"end": 15517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 15521,
											"end": 15539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15562,
											"end": 15563,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15559,
											"end": 15560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15555,
											"end": 15564,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 15550,
											"end": 15564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15550,
											"end": 15564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15570,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15576,
											"end": 15756,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 15576,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15701,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15621,
											"end": 15622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15614,
											"end": 15702,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15721,
											"end": 15725,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15711,
											"end": 15726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15742,
											"end": 15743,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15735,
											"end": 15750,
											"name": "REVERT",
											"source": 12
										}
									],
									".data": {
										"626642F6930F156F677CCAA99D1115840F2527D6F062EEDE1DE4DDA1BD081A2D": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d65794b6e7658584d78417557473570743335457a3851684a6852363352445653775566736a4b61795234325a2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/ERC721A/IERC721A.sol",
								"Dcoffer/ERC721A/test.sol",
								"Dcoffer/IDCF/IDCF.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a",
							"_DCFperBlock()": "38020dcc",
							"_salt()": "9f773399",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"DCFperBlock_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_DCFperBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_salt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/ERC721A/test.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]},\"Dcoffer/ERC721A/test.sol\":{\"keccak256\":\"0x9c7e6b52544d7c3d1d6cd1458278933e6076643f2112061a45d038cf0f27b803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b58ffec76bad32d9c37c5ae4be08aeb62802d57818154f9c563dda6ccfddac3f\",\"dweb:/ipfs/QmQ5B1VYKDPw3jw3AgiRbrwvaybosNKb91eMAszhK3YH2N\"]},\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x0ffd0baa58ce2fd5ec033115dc2445fed99cc40aea9ef5094e65425a725bcc47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adff88b8a0a3b8419adf4b1b81bdd5b761a71bb8e13c10615037ba70bd55a803\",\"dweb:/ipfs/QmRvrg9N2pjP1xZrUWquLgfeYiGh7wesWyZ8Zpj1XBNCNv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1152,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_salt",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1154,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_DCFperBlock",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1156,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1158,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1160,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1162,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1164,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1169,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)1106_storage)"
							},
							{
								"astId": 1174,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(AddressData)1115_storage)"
							},
							{
								"astId": 1178,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1184,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1191,
								"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
								"label": "_BlockScore",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(AddressData)1115_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)1115_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)1106_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)1106_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)1115_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 1108,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1110,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1112,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1114,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)1106_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 1101,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1103,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1105,
										"contract": "Dcoffer/ERC721A/test.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"IDCF": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a",
							"maxSupply()": "d5abeb01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/IDCF/IDCF.sol\":\"IDCF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x0ffd0baa58ce2fd5ec033115dc2445fed99cc40aea9ef5094e65425a725bcc47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adff88b8a0a3b8419adf4b1b81bdd5b761a71bb8e13c10615037ba70bd55a803\",\"dweb:/ipfs/QmRvrg9N2pjP1xZrUWquLgfeYiGh7wesWyZ8Zpj1XBNCNv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 740,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								739
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3340:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 115,
									"src": "3267:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3851:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:0"
									},
									"scope": 115,
									"src": "3834:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4236:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:0"
									},
									"scope": 115,
									"src": "4209:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4490:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:0"
									},
									"scope": 115,
									"src": "4429:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:0"
									},
									"scope": 115,
									"src": "4657:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4497:0",
							"usedErrors": []
						}
					],
					"src": "108:4640:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								739
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 455,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 455,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															249
														],
														"referencedDeclaration": 249,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 455,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 241,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 247,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 455,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 261,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															269,
															319
														],
														"referencedDeclaration": 319,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 260,
												"id": 267,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 455,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$455",
																				"typeString": "library Address"
																			}
																		],
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 296,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 295,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													302,
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 301,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 303,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 305,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 315,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 312,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 317,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 455,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 329,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															371
														],
														"referencedDeclaration": 371,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 455,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 350,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 349,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													356,
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 357,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [
														{
															"id": 361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 359,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 366,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 347,
												"id": 369,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 455,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 381,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															388,
															423
														],
														"referencedDeclaration": 423,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 386,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 455,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 402,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 401,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													408,
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"arguments": [
														{
															"id": 413,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 421,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 455,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 435,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 439,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 449,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 446,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 445,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 448,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 450,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 444,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 428,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 443,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 436,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 434,
															"id": 437,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 455,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 462,
												"id": 465,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 477,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 477,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "Strings",
							"nameLocation": "169:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "183:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 481,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 486,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "247:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 484,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "463:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "665:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "661:51:5",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "677:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 498,
															"nodeType": "Return",
															"src": "691:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "721:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": {
													"id": 503,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "736:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "751:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:5"
											},
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "793:57:5",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:5",
																"subExpression": {
																	"id": 511,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "807:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "807:8:5"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 514,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "829:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "829:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "782:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "WhileStatement",
												"src": "775:75:5"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "859:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 524,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "891:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:5"
											},
											{
												"body": {
													"id": 557,
													"nodeType": "Block",
													"src": "927:131:5",
													"statements": [
														{
															"expression": {
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 530,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "941:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "941:11:5"
														},
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 534,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "966:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 536,
																	"indexExpression": {
																		"id": 535,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "973:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 544,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 489,
																									"src": "1009:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 545,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 543,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 542,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 539,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 537,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "966:56:5"
														},
														{
															"expression": {
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "915:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "WhileStatement",
												"src": "908:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 559,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 493,
												"id": 563,
												"nodeType": "Return",
												"src": "1067:21:5"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:5"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:5"
									},
									"scope": 703,
									"src": "392:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "1274:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "1288:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "1284:54:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "1300:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 572,
															"id": 577,
															"nodeType": "Return",
															"src": "1314:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1347:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"id": 582,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "1362:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:5"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 605,
														"src": "1377:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"hexValue": "30",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:5"
											},
											{
												"body": {
													"id": 598,
													"nodeType": "Block",
													"src": "1423:57:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:5",
																"subExpression": {
																	"id": 591,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1437:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:5"
														},
														{
															"expression": {
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 594,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "1459:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1412:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "WhileStatement",
												"src": "1405:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "1508:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 602,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1515:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "1496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 572,
												"id": 604,
												"nodeType": "Return",
												"src": "1489:33:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1259:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:5"
									},
									"scope": 703,
									"src": "1200:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "1742:351:5",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "1752:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 616,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 621,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1788:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 618,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:5"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 627,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 629,
														"indexExpression": {
															"hexValue": "30",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:5"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 633,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"indexExpression": {
															"hexValue": "31",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:5"
											},
											{
												"body": {
													"id": 667,
													"nodeType": "Block",
													"src": "1904:87:5",
													"statements": [
														{
															"expression": {
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 653,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "1918:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"id": 654,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "1925:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 656,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "1930:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 660,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "1943:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:5"
														},
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1969:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"initializationExpression": {
													"assignments": [
														640
													],
													"declarations": [
														{
															"constant": false,
															"id": 640,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 668,
															"src": "1864:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 639,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 646,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 642,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1880:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:5",
														"subExpression": {
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "1901:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 652,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2008:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "2079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 676,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 680,
												"nodeType": "Return",
												"src": "2065:21:5"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1688:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1727:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:5"
									},
									"scope": 703,
									"src": "1652:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2318:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 695,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "2363:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 698,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2371:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 690,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															606,
															682,
															702
														],
														"referencedDeclaration": 682,
														"src": "2335:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 700,
												"nodeType": "Return",
												"src": "2328:59:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2266:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:5"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2303:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:5"
									},
									"scope": 703,
									"src": "2245:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 704,
							"src": "161:2235:5",
							"usedErrors": []
						}
					],
					"src": "101:2296:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							727
						],
						"IERC165": [
							739
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 728,
							"sourceUnit": 740,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 739,
										"src": "754:7:6"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727,
								739
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$739_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 719,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$739",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 717,
												"id": 724,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 727,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 728,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						]
					},
					"id": 740,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 732,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 739,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 740,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 741,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 742,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 772,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															755
														],
														"declarations": [
															{
																"constant": false,
																"id": 755,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 772,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 754,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 759,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 761,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 767,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 765,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 753,
															"id": 766,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 769,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 770,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 753,
														"id": 771,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1051,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 800,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 787,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 793,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 785,
															"id": 792,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 795,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 796,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 798,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 785,
														"id": 799,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1051,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 842,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 821,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 813,
															"id": 820,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 842,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 827,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 825,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 828,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 829,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 831,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 837,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 813,
															"id": 836,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 839,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 840,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 813,
														"id": 841,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1051,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 870,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 856,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 863,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 855,
															"id": 862,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 866,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 855,
														"id": 869,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1051,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 898,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 891,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 883,
															"id": 890,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 893,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 894,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 883,
														"id": 897,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1051,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 909,
												"id": 913,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1051,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 928,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1051,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 943,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1051,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 958,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1051,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 973,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1051,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5084:106:8",
										"statements": [
											{
												"id": 998,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 988,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "5126:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 989,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "5131:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 991,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "5134:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 987,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "5168:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 995,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "5172:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 986,
														"id": 997,
														"nodeType": "Return",
														"src": "5161:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4981:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5000:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5019:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:8"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5075:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:8"
									},
									"scope": 1051,
									"src": "4959:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5799:105:8",
										"statements": [
											{
												"id": 1023,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1013,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "5841:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1016,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "5848:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1012,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1018,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "5882:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1020,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "5886:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1011,
														"id": 1022,
														"nodeType": "Return",
														"src": "5875:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5696:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5715:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5734:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:8"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5790:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:8"
									},
									"scope": 1051,
									"src": "5674:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "6675:105:8",
										"statements": [
											{
												"id": 1048,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "6717:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1041,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "6724:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1037,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "6758:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "6762:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1036,
														"id": 1047,
														"nodeType": "Return",
														"src": "6751:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6572:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6591:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6610:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:8"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:8"
									},
									"scope": 1051,
									"src": "6550:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "482:6300:8",
							"usedErrors": []
						}
					],
					"src": "107:6676:8"
				},
				"id": 8
			},
			"Dcoffer/ERC721A/IERC721A.sol": {
				"ast": {
					"absolutePath": "Dcoffer/ERC721A/IERC721A.sol",
					"exportedSymbols": {
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							1122
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 116,
							"src": "115:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 1055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 161,
							"src": "175:77:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1057,
										"name": "IERC721",
										"nameLocations": [
											"341:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "341:7:9"
									},
									"id": 1058,
									"nodeType": "InheritanceSpecifier",
									"src": "341:7:9"
								},
								{
									"baseName": {
										"id": 1059,
										"name": "IERC721Metadata",
										"nameLocations": [
											"350:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "350:15:9"
									},
									"id": 1060,
									"nodeType": "InheritanceSpecifier",
									"src": "350:15:9"
								}
							],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1056,
								"nodeType": "StructuredDocumentation",
								"src": "256:61:9",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1122,
							"linearizedBaseContracts": [
								1122,
								160,
								115,
								739
							],
							"name": "IERC721A",
							"nameLocation": "329:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "373:78:9",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1063,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "463:33:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:9"
									},
									"src": "457:42:9"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "507:46:9",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1066,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "565:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:9"
									},
									"src": "559:41:9"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "608:68:9",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1069,
									"name": "ApproveToCaller",
									"nameLocation": "688:15:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:2:9"
									},
									"src": "682:24:9"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "714:68:9",
										"text": " The caller cannot approve to the current owner."
									},
									"errorSelector": "943f7b8c",
									"id": 1072,
									"name": "ApprovalToCurrentOwner",
									"nameLocation": "794:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:9"
									},
									"src": "788:31:9"
								},
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "827:67:9",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1075,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "906:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:9"
									},
									"src": "900:35:9"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "943:53:9",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1078,
									"name": "MintToZeroAddress",
									"nameLocation": "1008:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:9"
									},
									"src": "1002:26:9"
								},
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "1036:74:9",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1081,
									"name": "MintZeroQuantity",
									"nameLocation": "1122:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:2:9"
									},
									"src": "1116:25:9"
								},
								{
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "1149:46:9",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1084,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "1207:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:9"
									},
									"src": "1201:38:9"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1247:78:9",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1087,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1337:33:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:9"
									},
									"src": "1331:42:9"
								},
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "1381:55:9",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1090,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1448:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:9"
									},
									"src": "1442:35:9"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "1485:111:9",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1093,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1608:38:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:9"
									},
									"src": "1602:47:9"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "1657:57:9",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1096,
									"name": "TransferToZeroAddress",
									"nameLocation": "1726:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:9"
									},
									"src": "1720:30:9"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "1758:46:9",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1099,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1816:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:9"
									},
									"src": "1810:36:9"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1106,
									"members": [
										{
											"constant": false,
											"id": 1101,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1992:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1106,
											"src": "1984:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1100,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1984:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1103,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2107:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 1106,
											"src": "2100:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1102,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2100:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2184:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1106,
											"src": "2179:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1104,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2179:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1920:14:9",
									"nodeType": "StructDefinition",
									"scope": 1122,
									"src": "1913:285:9",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC721A.AddressData",
									"id": 1115,
									"members": [
										{
											"constant": false,
											"id": 1108,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2358:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "2351:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1107,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2351:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2459:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "2452:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1109,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2452:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1112,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "2565:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "2558:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1111,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2558:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1114,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "2796:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "2789:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1113,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2789:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "2272:11:9",
									"nodeType": "StructDefinition",
									"scope": 1122,
									"src": "2265:542:9",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "2815:198:9",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n \n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3028:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3039:2:9"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3065:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:9:9"
									},
									"scope": 1122,
									"src": "3019:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1123,
							"src": "319:2762:9",
							"usedErrors": [
								1063,
								1066,
								1069,
								1072,
								1075,
								1078,
								1081,
								1084,
								1087,
								1090,
								1093,
								1096,
								1099
							]
						}
					],
					"src": "88:2993:9"
				},
				"id": 9
			},
			"Dcoffer/ERC721A/test.sol": {
				"ast": {
					"absolutePath": "Dcoffer/ERC721A/test.sol",
					"exportedSymbols": {
						"Address": [
							455
						],
						"Context": [
							477
						],
						"ERC165": [
							727
						],
						"ERC721A": [
							2519
						],
						"IDCF": [
							2535
						],
						"IERC165": [
							739
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							1122
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"SafeMath": [
							1051
						],
						"Strings": [
							703
						]
					},
					"id": 2520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:10"
						},
						{
							"absolutePath": "Dcoffer/ERC721A/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 1123,
							"src": "115:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Dcoffer/IDCF/IDCF.sol",
							"file": "../IDCF/IDCF.sol",
							"id": 1126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 2536,
							"src": "141:26:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 134,
							"src": "169:66:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 456,
							"src": "237:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 478,
							"src": "290:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 704,
							"src": "343:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 728,
							"src": "396:64:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2520,
							"sourceUnit": 1052,
							"src": "462:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1134,
										"name": "Context",
										"nameLocations": [
											"1044:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "1044:7:10"
									},
									"id": 1135,
									"nodeType": "InheritanceSpecifier",
									"src": "1044:7:10"
								},
								{
									"baseName": {
										"id": 1136,
										"name": "ERC165",
										"nameLocations": [
											"1053:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1053:6:10"
									},
									"id": 1137,
									"nodeType": "InheritanceSpecifier",
									"src": "1053:6:10"
								},
								{
									"baseName": {
										"id": 1138,
										"name": "IERC721A",
										"nameLocations": [
											"1061:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "1061:8:10"
									},
									"id": 1139,
									"nodeType": "InheritanceSpecifier",
									"src": "1061:8:10"
								},
								{
									"baseName": {
										"id": 1140,
										"name": "IDCF",
										"nameLocations": [
											"1071:4:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2535,
										"src": "1071:4:10"
									},
									"id": 1141,
									"nodeType": "InheritanceSpecifier",
									"src": "1071:4:10"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1133,
								"nodeType": "StructuredDocumentation",
								"src": "523:499:10",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2519,
							"linearizedBaseContracts": [
								2519,
								2535,
								1122,
								160,
								115,
								727,
								739,
								477
							],
							"name": "ERC721A",
							"nameLocation": "1033:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1144,
									"libraryName": {
										"id": 1142,
										"name": "SafeMath",
										"nameLocations": [
											"1089:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "1089:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1083:24:10",
									"typeName": {
										"id": 1143,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1102:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1147,
									"libraryName": {
										"id": 1145,
										"name": "Address",
										"nameLocations": [
											"1119:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "1119:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1113:26:10",
									"typeName": {
										"id": 1146,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1131:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1150,
									"libraryName": {
										"id": 1148,
										"name": "Strings",
										"nameLocations": [
											"1151:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1151:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1145:26:10",
									"typeName": {
										"id": 1149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1163:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "9f773399",
									"id": 1152,
									"mutability": "mutable",
									"name": "_salt",
									"nameLocation": "1194:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1179:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1179:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38020dcc",
									"id": 1154,
									"mutability": "mutable",
									"name": "_DCFperBlock",
									"nameLocation": "1223:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1208:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1156,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "1313:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1296:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1296:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1158,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nameLocation": "1352:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1335:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "1425:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1408:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1408:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1486:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1471:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1161,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1471:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1536:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1521:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1163,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1521:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1169,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1770:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1726:55:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
										"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 1168,
										"keyType": {
											"id": 1165,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1734:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1726:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
											"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 1167,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1166,
												"name": "TokenOwnership",
												"nameLocations": [
													"1745:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1106,
												"src": "1745:14:10"
											},
											"referencedDeclaration": 1106,
											"src": "1745:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
												"typeString": "struct IERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "1876:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1836:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
										"typeString": "mapping(address => struct IERC721A.AddressData)"
									},
									"typeName": {
										"id": 1173,
										"keyType": {
											"id": 1170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1844:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1836:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
											"typeString": "mapping(address => struct IERC721A.AddressData)"
										},
										"valueType": {
											"id": 1172,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1171,
												"name": "AddressData",
												"nameLocations": [
													"1855:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1115,
												"src": "1855:11:10"
											},
											"referencedDeclaration": 1115,
											"src": "1855:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$1115_storage_ptr",
												"typeString": "struct IERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1178,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1983:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "1947:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1177,
										"keyType": {
											"id": 1175,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1955:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1947:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1966:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2109:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "2056:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1183,
										"keyType": {
											"id": 1179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2064:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2056:44:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1182,
											"keyType": {
												"id": 1180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2083:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2075:24:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2094:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "2136:80:10",
										"text": "[user][1] = last_block\n[user][2] = accumulation_block "
									},
									"id": 1191,
									"mutability": "mutable",
									"name": "_BlockScore",
									"nameLocation": "2280:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "2225:66:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1190,
										"keyType": {
											"id": 1186,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2233:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2225:47:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1189,
											"keyType": {
												"id": 1187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2252:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2244:27:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1188,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2263:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "2413:209:10",
										"statements": [
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2424:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "2432:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2424:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "2424:13:10"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2448:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "2458:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2448:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "2448:17:10"
											},
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1212,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "2476:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1213,
														"name": "maxSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2489:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2476:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2476:23:10"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "2510:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1217,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2526:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2526:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2510:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "2510:31:10"
											},
											{
												"expression": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1221,
														"name": "_salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2553:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1222,
														"name": "salt_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2561:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2553:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "2553:13:10"
											},
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "_DCFperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "2580:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1226,
														"name": "DCFperBlock_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2595:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "2580:27:10"
											}
										]
									},
									"id": 1230,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2326:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2312:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2312:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2347:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2333:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2333:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "maxSupply_",
												"nameLocation": "2364:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2356:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "salt_",
												"nameLocation": "2384:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2376:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "DCFperBlock_",
												"nameLocation": "2399:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2391:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:101:10"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2413:0:10"
									},
									"scope": 2519,
									"src": "2300:322:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2529
									],
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "2697:235:10",
										"statements": [
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "difference",
														"nameLocation": "2716:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "2708:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2708:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1242,
																	"name": "_BlockScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "2746:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1244,
																"indexExpression": {
																	"id": 1243,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "2758:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2746:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1246,
															"indexExpression": {
																"hexValue": "31",
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2764:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2746:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1239,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2729:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2735:6:10",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "2729:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2742:3:10",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "2729:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2708:59:10"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "Product",
														"nameLocation": "2786:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "2778:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"arguments": [
														{
															"id": 1255,
															"name": "difference",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "2816:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1252,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "2806:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1251,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "2796:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2796:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2812:3:10",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "2796:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2796:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:49:10"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "accumulation",
														"nameLocation": "2846:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "2838:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2838:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"arguments": [
														{
															"id": 1266,
															"name": "Product",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "2886:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1260,
																	"name": "_BlockScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "2861:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1262,
																"indexExpression": {
																	"id": 1261,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "2873:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2861:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1264,
															"indexExpression": {
																"hexValue": "32",
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2879:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2861:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2882:3:10",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 915,
														"src": "2861:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2838:56:10"
											},
											{
												"expression": {
													"id": 1269,
													"name": "accumulation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "2912:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1270,
												"nodeType": "Return",
												"src": "2905:19:10"
											}
										]
									},
									"functionSelector": "325b272a",
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "2645:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2664:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2656:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:14:10"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2689:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:9:10"
									},
									"scope": 2519,
									"src": "2636:296:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "2986:163:10",
										"statements": [
											{
												"assignments": [
													1278
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "accumulation",
														"nameLocation": "3005:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "2997:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2997:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"id": 1280,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "3031:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1279,
														"name": "BlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3020:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2997:39:10"
											},
											{
												"expression": {
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1283,
																"name": "_BlockScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "3054:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1286,
															"indexExpression": {
																"id": 1284,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "3066:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3054:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1287,
														"indexExpression": {
															"hexValue": "32",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3072:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3054:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1288,
														"name": "accumulation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3076:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3054:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "3054:34:10"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1291,
																"name": "_BlockScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "3106:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1294,
															"indexExpression": {
																"id": 1292,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "3118:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3106:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1295,
														"indexExpression": {
															"hexValue": "31",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3124:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3106:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1296,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3129:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3135:6:10",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3129:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3106:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "3106:35:10"
											}
										]
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateBlockScore",
									"nameLocation": "2949:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2974:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2966:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2965:14:10"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2986:0:10"
									},
									"scope": 2519,
									"src": "2940:209:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "3332:27:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3350:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1306,
												"id": 1308,
												"nodeType": "Return",
												"src": "3343:8:10"
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "3178:83:10",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "3276:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:2:10"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3323:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:9:10"
									},
									"scope": 2519,
									"src": "3267:92:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "3555:250:10",
										"statements": [
											{
												"id": 1324,
												"nodeType": "UncheckedBlock",
												"src": "3708:90:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "3740:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1318,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "3756:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3740:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1320,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "3771:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3771:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3740:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1323,
														"nodeType": "Return",
														"src": "3733:53:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "3367:120:10",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3502:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1313,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3528:8:10"
									},
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:2:10"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "3546:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:9:10"
									},
									"scope": 2519,
									"src": "3493:312:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2534
									],
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "3875:112:10",
										"statements": [
											{
												"id": 1339,
												"nodeType": "UncheckedBlock",
												"src": "3893:87:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1332,
																	"name": "_maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "3925:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1333,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "3938:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3925:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1335,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "3953:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3953:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1331,
														"id": 1338,
														"nodeType": "Return",
														"src": "3918:50:10"
													}
												]
											}
										]
									},
									"functionSelector": "d5abeb01",
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "3824:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1328,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3848:8:10"
									},
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3833:2:10"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "3866:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:9:10"
									},
									"scope": 2519,
									"src": "3815:172:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "4136:227:10",
										"statements": [
											{
												"id": 1352,
												"nodeType": "UncheckedBlock",
												"src": "4281:75:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1347,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "4313:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1348,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "4329:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4329:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4313:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1346,
														"id": 1351,
														"nodeType": "Return",
														"src": "4306:38:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "3995:79:10",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "4089:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4101:2:10"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "4127:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4126:9:10"
									},
									"scope": 2519,
									"src": "4080:283:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										726,
										738
									],
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "4543:197:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "4574:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "4594:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4589:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4589:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4603:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "4589:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "4574:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "4631:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "4651:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4646:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4646:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4668:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "4646:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "4631:48:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4574:105:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "4720:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "4696:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$2519_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4702:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 726,
															"src": "4696:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4696:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4574:158:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1364,
												"id": 1383,
												"nodeType": "Return",
												"src": "4554:178:10"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "4371:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4444:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1359,
												"name": "ERC165",
												"nameLocations": [
													"4511:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 727,
												"src": "4511:6:10"
											},
											{
												"id": 1360,
												"name": "IERC165",
												"nameLocations": [
													"4519:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 739,
												"src": "4519:7:10"
											}
										],
										"src": "4502:25:10"
									},
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4469:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4462:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4462:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:20:10"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "4537:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4537:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:6:10"
									},
									"scope": 2519,
									"src": "4435:305:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "4877:133:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1394,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "4892:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4901:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1395,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4901:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4901:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4892:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "4888:60:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1400,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4920:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4920:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1402,
													"nodeType": "RevertStatement",
													"src": "4913:35:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1406,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "4974:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1408,
																"indexExpression": {
																	"id": 1407,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "4987:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4974:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4994:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1108,
															"src": "4974:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4966:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4966:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1393,
												"id": 1411,
												"nodeType": "Return",
												"src": "4959:43:10"
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "4748:50:10",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4813:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1390,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4850:8:10"
									},
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4831:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4823:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4822:15:10"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4868:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4868:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:9:10"
									},
									"scope": 2519,
									"src": "4804:206:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "5162:67:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1423,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "5188:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1425,
																"indexExpression": {
																	"id": 1424,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5201:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5188:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5208:12:10",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "5188:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5180:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5180:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5180:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1420,
												"id": 1428,
												"nodeType": "Return",
												"src": "5173:48:10"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "5018:68:10",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "5101:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5123:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "5115:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5114:15:10"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "5153:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:9:10"
									},
									"scope": 2519,
									"src": "5092:137:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "5397:67:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1440,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "5423:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1442,
																"indexExpression": {
																	"id": 1441,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "5436:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5423:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5443:12:10",
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1112,
															"src": "5423:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5415:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5415:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5415:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1445,
												"nodeType": "Return",
												"src": "5408:48:10"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "5237:84:10",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "5336:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5358:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "5350:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:15:10"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "5388:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5387:9:10"
									},
									"scope": 2519,
									"src": "5327:137:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "5645:49:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1455,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "5663:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
															}
														},
														"id": 1457,
														"indexExpression": {
															"id": 1456,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "5676:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5663:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$1115_storage",
															"typeString": "struct IERC721A.AddressData storage ref"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5683:3:10",
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1114,
													"src": "5663:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1459,
												"nodeType": "Return",
												"src": "5656:30:10"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "5472:104:10",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "5591:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5607:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "5599:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5598:15:10"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "5637:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1452,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5637:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:8:10"
									},
									"scope": 2519,
									"src": "5582:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "5936:48:10",
										"statements": [
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1469,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "5947:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 1471,
															"indexExpression": {
																"id": 1470,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "5960:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5947:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5967:3:10",
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1114,
														"src": "5947:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1473,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "5973:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5947:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "5947:29:10"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "5703:174:10",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "5892:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5908:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "5900:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "5922:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "5915:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1465,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5915:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:27:10"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5936:0:10"
									},
									"scope": 2519,
									"src": "5883:101:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "6271:1026:10",
										"statements": [
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "6290:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "6282:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6282:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1489,
												"initialValue": {
													"id": 1488,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1480,
													"src": "6297:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6282:22:10"
											},
											{
												"id": 1546,
												"nodeType": "UncheckedBlock",
												"src": "6317:924:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1490,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "6346:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1492,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "6365:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6346:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1545,
														"nodeType": "IfStatement",
														"src": "6342:888:10",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1494,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "6375:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1495,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "6382:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6375:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1544,
															"nodeType": "IfStatement",
															"src": "6371:859:10",
															"trueBody": {
																"id": 1543,
																"nodeType": "Block",
																"src": "6397:833:10",
																"statements": [
																	{
																		"assignments": [
																			1499
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1499,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "6438:9:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1543,
																				"src": "6416:31:10",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1498,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1497,
																						"name": "TokenOwnership",
																						"nameLocations": [
																							"6416:14:10"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1106,
																						"src": "6416:14:10"
																					},
																					"referencedDeclaration": 1106,
																					"src": "6416:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																						"typeString": "struct IERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1503,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1500,
																				"name": "_ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1169,
																				"src": "6450:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																					"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																				}
																			},
																			"id": 1502,
																			"indexExpression": {
																				"id": 1501,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "6462:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6450:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																				"typeString": "struct IERC721A.TokenOwnership storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6416:51:10"
																	},
																	{
																		"condition": {
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "6490:17:10",
																			"subExpression": {
																				"expression": {
																					"id": 1504,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1499,
																					"src": "6491:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 1505,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6501:6:10",
																				"memberName": "burned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1105,
																				"src": "6491:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1542,
																		"nodeType": "IfStatement",
																		"src": "6486:729:10",
																		"trueBody": {
																			"id": 1541,
																			"nodeType": "Block",
																			"src": "6509:706:10",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1507,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1499,
																								"src": "6536:9:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																									"typeString": "struct IERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 1508,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6546:4:10",
																							"memberName": "addr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1101,
																							"src": "6536:14:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1511,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6562:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1510,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "6554:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1509,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "6554:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1512,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6554:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "6536:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1517,
																					"nodeType": "IfStatement",
																					"src": "6532:101:10",
																					"trueBody": {
																						"id": 1516,
																						"nodeType": "Block",
																						"src": "6566:67:10",
																						"statements": [
																							{
																								"expression": {
																									"id": 1514,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1499,
																									"src": "6600:9:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"functionReturnParameters": 1485,
																								"id": 1515,
																								"nodeType": "Return",
																								"src": "6593:16:10"
																							}
																						]
																					}
																				},
																				{
																					"body": {
																						"id": 1539,
																						"nodeType": "Block",
																						"src": "6948:248:10",
																						"statements": [
																							{
																								"expression": {
																									"id": 1520,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "--",
																									"prefix": false,
																									"src": "6975:6:10",
																									"subExpression": {
																										"id": 1519,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1487,
																										"src": "6975:4:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1521,
																								"nodeType": "ExpressionStatement",
																								"src": "6975:6:10"
																							},
																							{
																								"expression": {
																									"id": 1526,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1522,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1499,
																										"src": "7008:9:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																											"typeString": "struct IERC721A.TokenOwnership memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1523,
																											"name": "_ownerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1169,
																											"src": "7020:11:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																												"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																											}
																										},
																										"id": 1525,
																										"indexExpression": {
																											"id": 1524,
																											"name": "curr",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1487,
																											"src": "7032:4:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7020:17:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																											"typeString": "struct IERC721A.TokenOwnership storage ref"
																										}
																									},
																									"src": "7008:29:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"id": 1527,
																								"nodeType": "ExpressionStatement",
																								"src": "7008:29:10"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 1534,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1528,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1499,
																											"src": "7068:9:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																												"typeString": "struct IERC721A.TokenOwnership memory"
																											}
																										},
																										"id": 1529,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7078:4:10",
																										"memberName": "addr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1101,
																										"src": "7068:14:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 1532,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7094:1:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 1531,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7086:7:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 1530,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "7086:7:10",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 1533,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7086:10:10",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "7068:28:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1538,
																								"nodeType": "IfStatement",
																								"src": "7064:109:10",
																								"trueBody": {
																									"id": 1537,
																									"nodeType": "Block",
																									"src": "7098:75:10",
																									"statements": [
																										{
																											"expression": {
																												"id": 1535,
																												"name": "ownership",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1499,
																												"src": "7136:9:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																													"typeString": "struct IERC721A.TokenOwnership memory"
																												}
																											},
																											"functionReturnParameters": 1485,
																											"id": 1536,
																											"nodeType": "Return",
																											"src": "7129:16:10"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"hexValue": "74727565",
																						"id": 1518,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6942:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"id": 1540,
																					"nodeType": "WhileStatement",
																					"src": "6935:261:10"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1547,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "7258:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7258:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "RevertStatement",
												"src": "7251:38:10"
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "5992:188:10",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "6195:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6216:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "6208:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:17:10"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "6248:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1482,
														"name": "TokenOwnership",
														"nameLocations": [
															"6248:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1106,
														"src": "6248:14:10"
													},
													"referencedDeclaration": 1106,
													"src": "6248:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:23:10"
									},
									"scope": 2519,
									"src": "6186:1111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "7432:52:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1561,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "7463:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1560,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "7450:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1106_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7450:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7472:4:10",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1101,
													"src": "7450:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1564,
												"nodeType": "Return",
												"src": "7443:33:10"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "7305:48:10",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "7368:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7405:8:10"
									},
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7384:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "7376:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7376:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7375:17:10"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "7423:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7423:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7422:9:10"
									},
									"scope": 2519,
									"src": "7359:125:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "7620:31:10",
										"statements": [
											{
												"expression": {
													"id": 1573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "7638:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1572,
												"id": 1574,
												"nodeType": "Return",
												"src": "7631:12:10"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "7492:53:10",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7560:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1569,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7587:8:10"
									},
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7564:2:10"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "7605:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7605:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7604:15:10"
									},
									"scope": 2519,
									"src": "7551:100:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "7791:33:10",
										"statements": [
											{
												"expression": {
													"id": 1583,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "7809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1584,
												"nodeType": "Return",
												"src": "7802:14:10"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "7659:55:10",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7729:6:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1579,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7758:8:10"
									},
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7735:2:10"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "7776:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7776:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7775:15:10"
									},
									"scope": 2519,
									"src": "7720:104:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "7983:230:10",
										"statements": [
											{
												"condition": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7998:17:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1596,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1589,
																"src": "8007:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1595,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "7999:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7999:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1602,
												"nodeType": "IfStatement",
												"src": "7994:59:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1599,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "8024:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8024:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1601,
													"nodeType": "RevertStatement",
													"src": "8017:36:10"
												}
											},
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "8080:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "8066:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1603,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8066:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1607,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1605,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "8090:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8090:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8066:34:10"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1610,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "8124:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8118:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1608,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "8118:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8118:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8133:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8118:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8143:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8118:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8203:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8118:87:10",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1619,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "8171:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1620,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1589,
																				"src": "8180:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8188:8:10",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "8180:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8180:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1617,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "8154:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8158:12:10",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "8154:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8154:45:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8147:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1615,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "8147:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8147:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1627,
												"nodeType": "Return",
												"src": "8111:94:10"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "7832:57:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7904:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1591,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7950:8:10"
									},
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7921:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "7913:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:17:10"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "7968:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7968:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7967:15:10"
									},
									"scope": 2519,
									"src": "7895:318:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "8527:119:10",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d65794b6e7658584d78417557473570743335457a3851684a6852363352445653775566736a4b61795234325a2f",
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8545:83:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_626642f6930f156f677ccaa99d1115840f2527d6f062eede1de4dda1bd081a2d",
														"typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/QmeyKnvXXMxAuWG5pt35Ez8QhJhR63RDVSwUfsjKayR42Z/\""
													},
													"value": "https://gateway.pinata.cloud/ipfs/QmeyKnvXXMxAuWG5pt35Ez8QhJhR63RDVSwUfsjKayR42Z/"
												},
												"functionReturnParameters": 1634,
												"id": 1636,
												"nodeType": "Return",
												"src": "8538:90:10"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "8221:234:10",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "8470:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8478:2:10"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "8512:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8512:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8511:15:10"
									},
									"scope": 2519,
									"src": "8461:185:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "8770:310:10",
										"statements": [
											{
												"assignments": [
													1648
												],
												"declarations": [
													{
														"constant": false,
														"id": 1648,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8789:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "8781:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1647,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8781:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"arguments": [
														{
															"id": 1651,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "8813:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1649,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "8797:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$2519_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8805:7:10",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1566,
														"src": "8797:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8797:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8781:40:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1654,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "8836:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1655,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "8842:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8836:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"nodeType": "IfStatement",
												"src": "8832:48:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1657,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "8856:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8856:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1659,
													"nodeType": "RevertStatement",
													"src": "8849:31:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1661,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "8897:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8897:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1663,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "8913:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8897:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "8893:139:10",
												"trueBody": {
													"condition": {
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8923:38:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1666,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "8941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1667,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "8948:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8948:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1665,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1758,
																"src": "8924:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8924:37:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1675,
													"nodeType": "IfStatement",
													"src": "8920:112:10",
													"trueBody": {
														"id": 1674,
														"nodeType": "Block",
														"src": "8963:69:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1671,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "8985:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8985:35:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1673,
																"nodeType": "RevertStatement",
																"src": "8978:42:10"
															}
														]
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1678,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "9053:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "9057:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1680,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "9066:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1677,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "9044:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9044:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "9044:28:10"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "8654:48:10",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8717:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8761:8:10"
									},
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8733:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8725:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8745:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8737:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8737:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:29:10"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:0:10"
									},
									"scope": 2519,
									"src": "8708:372:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "9223:127:10",
										"statements": [
											{
												"condition": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9238:17:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1694,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "9247:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1693,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "9239:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9239:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "9234:64:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1697,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "9264:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9264:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1699,
													"nodeType": "RevertStatement",
													"src": "9257:41:10"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1701,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "9318:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1703,
													"indexExpression": {
														"id": 1702,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "9334:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9318:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1704,
												"nodeType": "Return",
												"src": "9311:31:10"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "9088:52:10",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "9155:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1689,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9196:8:10"
									},
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9175:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "9167:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9167:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9166:17:10"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "9214:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9214:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9213:9:10"
									},
									"scope": 2519,
									"src": "9146:204:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "9506:203:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1715,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "9521:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1716,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "9533:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9533:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9521:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1722,
												"nodeType": "IfStatement",
												"src": "9517:54:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1719,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "9554:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9554:17:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1721,
													"nodeType": "RevertStatement",
													"src": "9547:24:10"
												}
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1723,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "9584:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1727,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1724,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "9603:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9603:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9584:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1728,
														"indexExpression": {
															"id": 1726,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "9617:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9584:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1729,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "9629:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9584:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "9584:53:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1733,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "9668:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9668:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1735,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "9682:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1736,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "9692:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1732,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "9653:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9653:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "EmitStatement",
												"src": "9648:53:10"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "9358:58:10",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "9431:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1713,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9497:8:10"
									},
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9457:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "9449:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9449:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "9472:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "9467:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9467:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9448:33:10"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9506:0:10"
									},
									"scope": 2519,
									"src": "9422:287:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "9883:61:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1751,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "9901:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1753,
														"indexExpression": {
															"id": 1752,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "9920:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9901:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1755,
													"indexExpression": {
														"id": 1754,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "9927:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9901:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1756,
												"nodeType": "Return",
												"src": "9894:42:10"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "9717:57:10",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "9789:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1747,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9859:8:10"
									},
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9814:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "9806:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9806:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9829:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "9821:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9821:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9805:33:10"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "9877:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1748,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9877:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9876:6:10"
									},
									"scope": 2519,
									"src": "9780:164:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "10134:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1770,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "10155:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "10161:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1772,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "10165:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1769,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "10145:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10145:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "10145:28:10"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "9952:53:10",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10020:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1767,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10125:8:10"
									},
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10051:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "10043:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10043:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10074:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "10066:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10066:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10095:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "10087:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10087:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10032:77:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10134:0:10"
									},
									"scope": 2519,
									"src": "10011:170:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "10379:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1788,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "10407:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1789,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "10413:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1790,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "10417:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10426:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1787,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1795,
															1831
														],
														"referencedDeclaration": 1831,
														"src": "10390:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10390:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "10390:39:10"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "10189:57:10",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10261:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1785,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10370:8:10"
									},
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10296:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "10288:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10288:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10319:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "10311:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10311:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10340:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "10332:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10332:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10277:77:10"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10379:0:10"
									},
									"scope": 2519,
									"src": "10252:185:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "10664:214:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1809,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "10685:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "10691:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "10695:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1808,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "10675:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10675:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "10675:28:10"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1814,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "10718:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10721:10:10",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "10718:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10718:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "10714:157:10",
												"trueBody": {
													"condition": {
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "10738:57:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1818,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "10770:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1819,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "10776:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1820,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "10780:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1821,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "10789:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1817,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "10739:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10739:56:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1828,
													"nodeType": "IfStatement",
													"src": "10735:136:10",
													"trueBody": {
														"id": 1827,
														"nodeType": "Block",
														"src": "10797:74:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1824,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10819:38:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10819:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1826,
																"nodeType": "RevertStatement",
																"src": "10812:47:10"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "10445:57:10",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10517:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1806,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10655:8:10"
									},
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10552:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10544:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10544:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10575:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10567:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10596:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10588:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10588:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10627:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10614:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10614:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10533:106:10"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10664:0:10"
									},
									"scope": 2519,
									"src": "10508:370:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "11155:111:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1839,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "11173:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11173:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1841,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "11192:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11173:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1843,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "11203:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1844,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "11213:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11203:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11173:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "11230:28:10",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1847,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "11231:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																		"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1849,
																"indexExpression": {
																	"id": 1848,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "11243:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11231:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																	"typeString": "struct IERC721A.TokenOwnership storage ref"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11252:6:10",
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1105,
															"src": "11231:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11173:85:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1838,
												"id": 1853,
												"nodeType": "Return",
												"src": "11166:92:10"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "10886:200:10",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   (`_mint`),"
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "11101:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11117:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "11109:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11109:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11108:17:10"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "11149:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11149:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11148:6:10"
									},
									"scope": 2519,
									"src": "11092:174:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "11408:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "11429:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "11433:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11443:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1863,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1870,
															2037
														],
														"referencedDeclaration": 2037,
														"src": "11419:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11419:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "11419:27:10"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "11274:70:10",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11359:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11377:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "11369:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11369:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "11389:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "11381:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:30:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11408:0:10"
									},
									"scope": 2519,
									"src": "11350:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "11939:1679:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1881,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "11978:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1880,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "11961:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11961:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "11961:20:10"
											},
											{
												"assignments": [
													1885
												],
												"declarations": [
													{
														"constant": false,
														"id": 1885,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "12000:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2036,
														"src": "11992:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11992:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1887,
												"initialValue": {
													"id": 1886,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1156,
													"src": "12015:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11992:36:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1888,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "12043:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12057:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12049:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1889,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12049:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12049:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12043:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1897,
												"nodeType": "IfStatement",
												"src": "12039:48:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1894,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "12068:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12068:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1896,
													"nodeType": "RevertStatement",
													"src": "12061:26:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1898,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "12102:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12114:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12102:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1904,
												"nodeType": "IfStatement",
												"src": "12098:44:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1901,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "12124:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12124:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1903,
													"nodeType": "RevertStatement",
													"src": "12117:25:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12185:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12177:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1906,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12177:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12177:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1910,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "12189:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "12193:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1912,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "12207:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1905,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "12155:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12155:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "12155:61:10"
											},
											{
												"id": 2025,
												"nodeType": "UncheckedBlock",
												"src": "12468:1072:10",
												"statements": [
													{
														"expression": {
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1915,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "12493:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1917,
																	"indexExpression": {
																		"id": 1916,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "12506:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12493:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12510:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1108,
																"src": "12493:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1921,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1875,
																		"src": "12528:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12521:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1919,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12521:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12521:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12493:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1924,
														"nodeType": "ExpressionStatement",
														"src": "12493:44:10"
													},
													{
														"expression": {
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1925,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "12552:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1927,
																	"indexExpression": {
																		"id": 1926,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "12565:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12552:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12569:12:10",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1110,
																"src": "12552:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1931,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1875,
																		"src": "12592:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12585:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1929,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12585:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12585:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12552:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1934,
														"nodeType": "ExpressionStatement",
														"src": "12552:49:10"
													},
													{
														"expression": {
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1935,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "12618:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1937,
																	"indexExpression": {
																		"id": 1936,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "12630:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12618:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12644:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1101,
																"src": "12618:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1939,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "12651:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12618:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1941,
														"nodeType": "ExpressionStatement",
														"src": "12618:35:10"
													},
													{
														"expression": {
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1942,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "12668:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1944,
																	"indexExpression": {
																		"id": 1943,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1885,
																		"src": "12680:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12668:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12694:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1103,
																"src": "12668:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1948,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "12718:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12724:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "12718:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12711:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1946,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12711:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12711:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12668:66:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1952,
														"nodeType": "ExpressionStatement",
														"src": "12668:66:10"
													},
													{
														"assignments": [
															1954
														],
														"declarations": [
															{
																"constant": false,
																"id": 1954,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "12759:12:10",
																"nodeType": "VariableDeclaration",
																"scope": 2025,
																"src": "12751:20:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1953,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12751:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1956,
														"initialValue": {
															"id": 1955,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "12774:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12751:35:10"
													},
													{
														"assignments": [
															1958
														],
														"declarations": [
															{
																"constant": false,
																"id": 1958,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "12809:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 2025,
																"src": "12801:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1957,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12801:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1962,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1959,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "12815:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1960,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "12830:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12815:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12801:37:10"
													},
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1963,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "12859:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12862:10:10",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "12859:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12859:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2019,
															"nodeType": "Block",
															"src": "13333:153:10",
															"statements": [
																{
																	"body": {
																		"id": 2014,
																		"nodeType": "Block",
																		"src": "13355:88:10",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2007,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13400:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2006,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "13392:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2005,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "13392:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2008,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13392:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2009,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1873,
																							"src": "13404:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2011,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "13408:14:10",
																							"subExpression": {
																								"id": 2010,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1954,
																								"src": "13408:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2004,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "13383:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2012,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13383:40:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2013,
																				"nodeType": "EmitStatement",
																				"src": "13378:45:10"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2015,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1954,
																			"src": "13451:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2016,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13466:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13451:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2018,
																	"nodeType": "DoWhileStatement",
																	"src": "13352:119:10"
																}
															]
														},
														"id": 2020,
														"nodeType": "IfStatement",
														"src": "12855:631:10",
														"trueBody": {
															"id": 2003,
															"nodeType": "Block",
															"src": "12876:451:10",
															"statements": [
																{
																	"body": {
																		"id": 1991,
																		"nodeType": "Block",
																		"src": "12898:282:10",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1969,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12943:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1968,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "12935:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1967,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "12935:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1970,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12935:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1971,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1873,
																							"src": "12947:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1972,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1954,
																							"src": "12951:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1966,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "12926:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12926:38:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1974,
																				"nodeType": "EmitStatement",
																				"src": "12921:43:10"
																			},
																			{
																				"condition": {
																					"id": 1985,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "12991:70:10",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1978,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13031:1:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1977,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "13023:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1976,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "13023:7:10",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1979,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13023:10:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1980,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1873,
																								"src": "13035:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1982,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "13039:14:10",
																								"subExpression": {
																									"id": 1981,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1954,
																									"src": "13039:12:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1983,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1877,
																								"src": "13055:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1975,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2492,
																							"src": "12992:30:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1984,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12992:69:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1990,
																				"nodeType": "IfStatement",
																				"src": "12987:174:10",
																				"trueBody": {
																					"id": 1989,
																					"nodeType": "Block",
																					"src": "13063:98:10",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1986,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1093,
																									"src": "13097:38:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1987,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13097:40:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1988,
																							"nodeType": "RevertStatement",
																							"src": "13090:47:10"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1992,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1954,
																			"src": "13188:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1993,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13203:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13188:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1995,
																	"nodeType": "DoWhileStatement",
																	"src": "12895:313:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1996,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "13272:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1997,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1885,
																			"src": "13289:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13272:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2002,
																	"nodeType": "IfStatement",
																	"src": "13268:43:10",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1999,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "13303:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13303:8:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2001,
																		"nodeType": "ExpressionStatement",
																		"src": "13303:8:10"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2021,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "13500:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2022,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "13516:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13500:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2024,
														"nodeType": "ExpressionStatement",
														"src": "13500:28:10"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13579:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13571:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13571:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13571:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2031,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "13583:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2032,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "13587:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2033,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "13601:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "13550:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13550:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "13550:60:10"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "11462:359:10",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11836:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11864:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "11856:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "11885:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "11877:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11877:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11917:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "11904:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11904:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11845:84:10"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11939:0:10"
									},
									"scope": 2519,
									"src": "11827:1791:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "13983:2090:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "14011:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2047,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "13994:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13994:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "13994:22:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2052,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "14044:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2051,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "14027:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14027:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "14027:20:10"
											},
											{
												"assignments": [
													2057
												],
												"declarations": [
													{
														"constant": false,
														"id": 2057,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "14080:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 2214,
														"src": "14058:35:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2056,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2055,
																"name": "TokenOwnership",
																"nameLocations": [
																	"14058:14:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1106,
																"src": "14058:14:10"
															},
															"referencedDeclaration": 1106,
															"src": "14058:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2061,
												"initialValue": {
													"arguments": [
														{
															"id": 2059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "14109:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2058,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "14096:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1106_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14096:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14058:59:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2062,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "14134:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 2063,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14148:4:10",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1101,
														"src": "14134:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2064,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "14156:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14134:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2069,
												"nodeType": "IfStatement",
												"src": "14130:67:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2066,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "14169:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14169:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2068,
													"nodeType": "RevertStatement",
													"src": "14162:35:10"
												}
											},
											{
												"assignments": [
													2071
												],
												"declarations": [
													{
														"constant": false,
														"id": 2071,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "14215:17:10",
														"nodeType": "VariableDeclaration",
														"scope": 2214,
														"src": "14210:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2070,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14210:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2072,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "14236:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14236:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2074,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "14252:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "14236:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2077,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2040,
																			"src": "14290:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2078,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 467,
																				"src": "14296:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14296:12:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2076,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "14273:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14273:36:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14236:73:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2083,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "14338:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2082,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "14326:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14326:20:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2085,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "14350:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14350:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14326:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14236:126:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2089,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14235:128:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14210:153:10"
											},
											{
												"condition": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14380:18:10",
													"subExpression": {
														"id": 2091,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "14381:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"nodeType": "IfStatement",
												"src": "14376:66:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2093,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "14407:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14407:35:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2095,
													"nodeType": "RevertStatement",
													"src": "14400:42:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2097,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "14457:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14471:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14463:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14463:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14463:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14457:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2106,
												"nodeType": "IfStatement",
												"src": "14453:52:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2103,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "14482:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14482:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2105,
													"nodeType": "RevertStatement",
													"src": "14475:30:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2108,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "14540:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2109,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "14546:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "14550:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14559:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2107,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "14518:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14518:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "14518:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14635:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14635:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14635:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2119,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "14647:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2120,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "14656:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2114,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "14626:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14626:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "14626:35:10"
											},
											{
												"id": 2200,
												"nodeType": "UncheckedBlock",
												"src": "14932:1036:10",
												"statements": [
													{
														"expression": {
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2123,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "14957:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2125,
																	"indexExpression": {
																		"id": 2124,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "14970:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14957:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14976:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1108,
																"src": "14957:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14987:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14957:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2129,
														"nodeType": "ExpressionStatement",
														"src": "14957:31:10"
													},
													{
														"expression": {
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2130,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "15003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2132,
																	"indexExpression": {
																		"id": 2131,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "15016:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15003:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15020:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1108,
																"src": "15003:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15031:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15003:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2136,
														"nodeType": "ExpressionStatement",
														"src": "15003:29:10"
													},
													{
														"assignments": [
															2139
														],
														"declarations": [
															{
																"constant": false,
																"id": 2139,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "15072:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 2200,
																"src": "15049:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2138,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2137,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"15049:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1106,
																		"src": "15049:14:10"
																	},
																	"referencedDeclaration": 1106,
																	"src": "15049:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2143,
														"initialValue": {
															"baseExpression": {
																"id": 2140,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "15083:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2142,
															"indexExpression": {
																"id": 2141,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "15095:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15083:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15049:54:10"
													},
													{
														"expression": {
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2144,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "15118:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15127:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1101,
																"src": "15118:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2147,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "15134:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15118:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2149,
														"nodeType": "ExpressionStatement",
														"src": "15118:18:10"
													},
													{
														"expression": {
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2150,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "15151:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "15160:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1103,
																"src": "15151:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2155,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "15184:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15190:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "15184:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2153,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "15177:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15177:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "15151:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2159,
														"nodeType": "ExpressionStatement",
														"src": "15151:49:10"
													},
													{
														"assignments": [
															2161
														],
														"declarations": [
															{
																"constant": false,
																"id": 2161,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "15460:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 2200,
																"src": "15452:19:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15452:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2162,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "15474:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15484:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15474:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15452:33:10"
													},
													{
														"assignments": [
															2168
														],
														"declarations": [
															{
																"constant": false,
																"id": 2168,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "15523:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 2200,
																"src": "15500:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2167,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2166,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"15500:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1106,
																		"src": "15500:14:10"
																	},
																	"referencedDeclaration": 1106,
																	"src": "15500:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2172,
														"initialValue": {
															"baseExpression": {
																"id": 2169,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "15534:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2171,
															"indexExpression": {
																"id": 2170,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "15546:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15534:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15500:58:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2173,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "15577:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15586:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1101,
																"src": "15577:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15602:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15594:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2175,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15594:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15594:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15577:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2199,
														"nodeType": "IfStatement",
														"src": "15573:384:10",
														"trueBody": {
															"id": 2198,
															"nodeType": "Block",
															"src": "15606:351:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2180,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "15772:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2181,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "15787:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15772:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2197,
																	"nodeType": "IfStatement",
																	"src": "15768:174:10",
																	"trueBody": {
																		"id": 2196,
																		"nodeType": "Block",
																		"src": "15802:140:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 2187,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2183,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2168,
																							"src": "15825:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2185,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "15834:4:10",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1101,
																						"src": "15825:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2186,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2040,
																						"src": "15841:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "15825:20:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2188,
																				"nodeType": "ExpressionStatement",
																				"src": "15825:20:10"
																			},
																			{
																				"expression": {
																					"id": 2194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2189,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2168,
																							"src": "15868:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2191,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "15877:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1103,
																						"src": "15868:23:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2192,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2057,
																							"src": "15894:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2193,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15908:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1103,
																						"src": "15894:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "15868:54:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2195,
																				"nodeType": "ExpressionStatement",
																				"src": "15868:54:10"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2202,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "15994:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2203,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "16000:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2204,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "16004:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2201,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "15985:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15985:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2206,
												"nodeType": "EmitStatement",
												"src": "15980:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2208,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "16044:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2209,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "16050:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "16054:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16063:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2207,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "16023:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16023:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "16023:42:10"
											}
										]
									},
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "13633:240:10",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "13888:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13916:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "13908:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13908:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13939:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "13931:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13960:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "13952:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13952:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13897:77:10"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13983:0:10"
									},
									"scope": 2519,
									"src": "13879:2194:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "16200:40:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2222,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "16217:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16226:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2221,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2227,
															2414
														],
														"referencedDeclaration": 2414,
														"src": "16211:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16211:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "ExpressionStatement",
												"src": "16211:21:10"
											}
										]
									},
									"documentation": {
										"id": 2216,
										"nodeType": "StructuredDocumentation",
										"src": "16081:64:10",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "16160:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16174:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "16166:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16166:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16165:17:10"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16200:0:10"
									},
									"scope": 2519,
									"src": "16151:89:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "16538:2378:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2236,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16566:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16570:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16566:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2235,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "16549:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16549:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2239,
												"nodeType": "ExpressionStatement",
												"src": "16549:28:10"
											},
											{
												"assignments": [
													2242
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "16610:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 2413,
														"src": "16588:35:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2240,
																"name": "TokenOwnership",
																"nameLocations": [
																	"16588:14:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1106,
																"src": "16588:14:10"
															},
															"referencedDeclaration": 1106,
															"src": "16588:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2246,
												"initialValue": {
													"arguments": [
														{
															"id": 2244,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "16639:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2243,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "16626:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1106_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16626:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16588:59:10"
											},
											{
												"assignments": [
													2248
												],
												"declarations": [
													{
														"constant": false,
														"id": 2248,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "16668:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2413,
														"src": "16660:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16660:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2251,
												"initialValue": {
													"expression": {
														"id": 2249,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "16675:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16689:4:10",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1101,
													"src": "16675:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16660:33:10"
											},
											{
												"condition": {
													"id": 2252,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2232,
													"src": "16710:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2281,
												"nodeType": "IfStatement",
												"src": "16706:290:10",
												"trueBody": {
													"id": 2280,
													"nodeType": "Block",
													"src": "16725:271:10",
													"statements": [
														{
															"assignments": [
																2254
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2254,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "16745:17:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2280,
																	"src": "16740:22:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2253,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "16740:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2273,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2255,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "16766:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16766:12:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 2257,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "16782:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "16766:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2260,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2248,
																						"src": "16824:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2261,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 467,
																							"src": "16830:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2262,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16830:12:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2259,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1758,
																					"src": "16807:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 2263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16807:36:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "16766:77:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2266,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2230,
																						"src": "16876:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2265,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1706,
																					"src": "16864:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16864:20:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2268,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "16888:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16888:12:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "16864:36:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "16766:134:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16765:136:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16740:161:10"
														},
														{
															"condition": {
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "16922:18:10",
																"subExpression": {
																	"id": 2274,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "16923:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2279,
															"nodeType": "IfStatement",
															"src": "16918:66:10",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2276,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "16949:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16949:35:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2278,
																"nodeType": "RevertStatement",
																"src": "16942:42:10"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2283,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "17030:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17036:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2284,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17036:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17036:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "17048:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17057:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2282,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "17008:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17008:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "17008:51:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17141:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17133:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17133:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17133:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2297,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "17145:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "17154:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2292,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "17124:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17124:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2300,
												"nodeType": "ExpressionStatement",
												"src": "17124:35:10"
											},
											{
												"id": 2389,
												"nodeType": "UncheckedBlock",
												"src": "17430:1213:10",
												"statements": [
													{
														"assignments": [
															2303
														],
														"declarations": [
															{
																"constant": false,
																"id": 2303,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "17475:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 2389,
																"src": "17455:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1115_storage_ptr",
																	"typeString": "struct IERC721A.AddressData"
																},
																"typeName": {
																	"id": 2302,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2301,
																		"name": "AddressData",
																		"nameLocations": [
																			"17455:11:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1115,
																		"src": "17455:11:10"
																	},
																	"referencedDeclaration": 1115,
																	"src": "17455:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage_ptr",
																		"typeString": "struct IERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2307,
														"initialValue": {
															"baseExpression": {
																"id": 2304,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "17489:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1115_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 2306,
															"indexExpression": {
																"id": 2305,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "17502:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17489:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$1115_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17455:52:10"
													},
													{
														"expression": {
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2308,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "17522:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17534:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1108,
																"src": "17522:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17545:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17522:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2313,
														"nodeType": "ExpressionStatement",
														"src": "17522:24:10"
													},
													{
														"expression": {
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2314,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "17561:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1115_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17573:12:10",
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1112,
																"src": "17561:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17589:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17561:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2319,
														"nodeType": "ExpressionStatement",
														"src": "17561:29:10"
													},
													{
														"assignments": [
															2322
														],
														"declarations": [
															{
																"constant": false,
																"id": 2322,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "17712:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 2389,
																"src": "17689:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2321,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2320,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"17689:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1106,
																		"src": "17689:14:10"
																	},
																	"referencedDeclaration": 1106,
																	"src": "17689:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2326,
														"initialValue": {
															"baseExpression": {
																"id": 2323,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "17723:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2325,
															"indexExpression": {
																"id": 2324,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "17735:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17723:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17689:54:10"
													},
													{
														"expression": {
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2327,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "17758:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17767:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1101,
																"src": "17758:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2330,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "17774:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17758:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2332,
														"nodeType": "ExpressionStatement",
														"src": "17758:20:10"
													},
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2333,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "17793:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17802:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1103,
																"src": "17793:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2338,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "17826:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17832:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "17826:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17819:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2336,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "17819:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17819:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "17793:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "17793:49:10"
													},
													{
														"expression": {
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2343,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "17857:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17866:6:10",
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1105,
																"src": "17857:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17875:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "17857:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2348,
														"nodeType": "ExpressionStatement",
														"src": "17857:22:10"
													},
													{
														"assignments": [
															2350
														],
														"declarations": [
															{
																"constant": false,
																"id": 2350,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "18135:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 2389,
																"src": "18127:19:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18127:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2351,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "18149:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18159:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18149:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18127:33:10"
													},
													{
														"assignments": [
															2357
														],
														"declarations": [
															{
																"constant": false,
																"id": 2357,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "18198:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 2389,
																"src": "18175:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2356,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2355,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"18175:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1106,
																		"src": "18175:14:10"
																	},
																	"referencedDeclaration": 1106,
																	"src": "18175:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2361,
														"initialValue": {
															"baseExpression": {
																"id": 2358,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "18209:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1106_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2360,
															"indexExpression": {
																"id": 2359,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "18221:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18209:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18175:58:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2362,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "18252:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18261:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1101,
																"src": "18252:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18277:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18269:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2364,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18269:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18269:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18252:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2388,
														"nodeType": "IfStatement",
														"src": "18248:384:10",
														"trueBody": {
															"id": 2387,
															"nodeType": "Block",
															"src": "18281:351:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2369,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "18447:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2370,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1156,
																			"src": "18462:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18447:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2386,
																	"nodeType": "IfStatement",
																	"src": "18443:174:10",
																	"trueBody": {
																		"id": 2385,
																		"nodeType": "Block",
																		"src": "18477:140:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 2376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2372,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2357,
																							"src": "18500:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2374,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18509:4:10",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1101,
																						"src": "18500:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2375,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2248,
																						"src": "18516:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "18500:20:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2377,
																				"nodeType": "ExpressionStatement",
																				"src": "18500:20:10"
																			},
																			{
																				"expression": {
																					"id": 2383,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2378,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2357,
																							"src": "18543:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1106_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2380,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "18552:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1103,
																						"src": "18543:23:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2381,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2242,
																							"src": "18569:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1106_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2382,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "18583:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1103,
																						"src": "18569:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "18543:54:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2384,
																				"nodeType": "ExpressionStatement",
																				"src": "18543:54:10"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "18669:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18683:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18675:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18675:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18675:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "18687:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2390,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "18660:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18660:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2398,
												"nodeType": "EmitStatement",
												"src": "18655:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "18727:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18741:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18733:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18733:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18733:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2405,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "18745:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18754:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2399,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "18706:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18706:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2408,
												"nodeType": "ExpressionStatement",
												"src": "18706:50:10"
											},
											{
												"id": 2412,
												"nodeType": "UncheckedBlock",
												"src": "18858:51:10",
												"statements": [
													{
														"expression": {
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "18883:14:10",
															"subExpression": {
																"id": 2409,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "18883:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2411,
														"nodeType": "ExpressionStatement",
														"src": "18883:14:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "16248:215:10",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "16478:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16492:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "16484:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "16506:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "16501:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16501:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16483:37:10"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16538:0:10"
									},
									"scope": 2519,
									"src": "16469:2447:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "19138:92:10",
										"statements": [
											{
												"expression": {
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2424,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "19149:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2426,
														"indexExpression": {
															"id": 2425,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "19165:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19149:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2427,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2417,
														"src": "19176:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19149:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "19149:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2431,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "19203:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2432,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "19210:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "19214:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2430,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "19194:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19194:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2435,
												"nodeType": "EmitStatement",
												"src": "19189:33:10"
											}
										]
									},
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "18924:104:10",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19043:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19070:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "19062:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19062:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19091:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "19083:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19083:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19117:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "19109:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19109:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19051:78:10"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19138:0:10"
									},
									"scope": 2519,
									"src": "19034:196:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2491,
										"nodeType": "Block",
										"src": "19891:498:10",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2472,
															"nodeType": "Block",
															"src": "20003:89:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2464,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "20025:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2466,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2442,
																							"src": "20051:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2465,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 133,
																						"src": "20035:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 2467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20035:19:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 2468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "20055:16:10",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "20035:36:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "20072:8:10",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "20035:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "20025:55:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2450,
																	"id": 2471,
																	"nodeType": "Return",
																	"src": "20018:62:10"
																}
															]
														},
														"errorName": "",
														"id": 2473,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2463,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2462,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "19995:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2473,
																	"src": "19988:13:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2461,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "19988:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "19987:15:10"
														},
														"src": "19979:113:10"
													},
													{
														"block": {
															"id": 2488,
															"nodeType": "Block",
															"src": "20121:261:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2477,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2475,
																				"src": "20140:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "20147:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "20140:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20157:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20140:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2486,
																		"nodeType": "Block",
																		"src": "20248:123:10",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "20276:80:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "20310:2:10",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "20314:6:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20306:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20306:15:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "20329:6:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "20323:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20323:13:10"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "20299:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20299:38:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20299:38:10"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2475,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "20314:6:10",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2475,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "20329:6:10",
																						"valueSize": 1
																					}
																				],
																				"id": 2485,
																				"nodeType": "InlineAssembly",
																				"src": "20267:89:10"
																			}
																		]
																	},
																	"id": 2487,
																	"nodeType": "IfStatement",
																	"src": "20136:235:10",
																	"trueBody": {
																		"id": 2484,
																		"nodeType": "Block",
																		"src": "20160:82:10",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2481,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1093,
																						"src": "20186:38:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20186:40:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2483,
																				"nodeType": "RevertStatement",
																				"src": "20179:47:10"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2489,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2476,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2475,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "20113:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2489,
																	"src": "20100:19:10",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2474,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "20100:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "20099:21:10"
														},
														"src": "20093:289:10"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2455,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "19943:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19943:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2457,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2440,
															"src": "19957:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2458,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "19963:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2459,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "19972:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2452,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "19922:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2451,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "19906:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19906:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19926:16:10",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "19906:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19906:72:10",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2490,
												"nodeType": "TryStatement",
												"src": "19902:480:10"
											}
										]
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "19238:478:10",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "19731:30:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19780:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "19772:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19772:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19803:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "19795:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19795:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19824:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "19816:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19816:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19855:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "19842:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19842:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19761:106:10"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "19885:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19885:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19884:6:10"
									},
									"scope": 2519,
									"src": "19722:667:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "21194:2:10",
										"statements": []
									},
									"documentation": {
										"id": 2493,
										"nodeType": "StructuredDocumentation",
										"src": "20397:634:10",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "21046:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21086:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "21078:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21078:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21109:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "21101:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21101:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "21130:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "21122:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21122:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "21161:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "21153:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21153:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21067:109:10"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21194:0:10"
									},
									"scope": 2519,
									"src": "21037:159:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "22011:2:10",
										"statements": []
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "21204:645:10",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "21864:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21903:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "21895:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21895:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21926:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "21918:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21918:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "21947:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "21939:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21939:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "21978:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "21970:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21970:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21884:109:10"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22011:0:10"
									},
									"scope": 2519,
									"src": "21855:158:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2520,
							"src": "1024:20992:10",
							"usedErrors": [
								1063,
								1066,
								1069,
								1072,
								1075,
								1078,
								1081,
								1084,
								1087,
								1090,
								1093,
								1096,
								1099
							]
						}
					],
					"src": "88:21928:10"
				},
				"id": 10
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"ast": {
					"absolutePath": "Dcoffer/IDCF/IDCF.sol",
					"exportedSymbols": {
						"IDCF": [
							2535
						]
					},
					"id": 2536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDCF",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2522,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:11",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 2535,
							"linearizedBaseContracts": [
								2535
							],
							"name": "IDCF",
							"nameLocation": "192:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "325b272a",
									"id": 2529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "219:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "230:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:11"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "265:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:6:11"
									},
									"scope": 2535,
									"src": "210:61:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5abeb01",
									"id": 2534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "286:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:11"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "321:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:9:11"
									},
									"scope": 2535,
									"src": "277:53:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2536,
							"src": "182:153:11",
							"usedErrors": []
						}
					],
					"src": "88:247:11"
				},
				"id": 11
			}
		}
	}
}